Script started on 2021-02-25 10:05:46-05:00 [TERM="xterm" TTY="/dev/pts/0" COLUMNS="157" LINES="85"]
kmoshie1@remote-n15:~/i471a/submit/lab1$ cd exercises/regex/
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lwxer^[[2~[K[K[K[K[K[K[K[Kexer.mjs 
usage: lexer.mjs RE_TABLE_FILE INPUT_FILE
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex1.mjs data.txt 
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ vim lex1.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex1.mjs" 5L, 159C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
[36m}[m;
[1m[34m~                                                                                                                                                            [7;1H~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H1,1[11CAll[1;1H[?25h[?1000l[?1002h[?25l[85;140H5,2[5;2H[?25h[?25l[85;130H1[5;2H[85;1H[1m-- VISUAL --[m[85;13H[K[85;130H1[5;2H[85;140H5,2[11CAll[5;2H[?25h[?25l[85;130H2[4;2H [7mCHAR: /./,       [m[7m[34m//single char: must be last[m[7m [m
[7m[36m}[m[7m;[m[85;140H4[4;2H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[85;130H3[3;1H [7m INT: /[m[7m[36m\[m[7md+/,      [m[7m[34m//token with kind INT        [m[7m 
  [m[85;140H3,1[3;1H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[85;130H4[2;1H [7m $Ignore: /[m[7m[36m\[m[7ms+/,  [m[7m[34m//this will be ignored.[m[7m 
 [m[85;140H2[2;1H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[85;130H5[1;1H[1C[7m[33mxport[m[7m [m[7m[33mdefault[m[7m [m[7m[36m{[m[7m 
 [m[85;140H1[1;1H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[85;130Hy[1;1H[1C[33mxport[m [33mdefault[m [36m{[m[1;17H[K[2;1H  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m[2;43H[K[3;1H  INT: /[36m\[md+/,      [34m//token with kind INT        [m[3;49H[K[4;1H  CHAR: /./,       [34m//single char: must be last[m[4;47H[K[5;1H[36m}[m;[85;1H[K[85;140H1,1[11CAll5 lines yanked[85;140H[K[1;1H[85;140H1,1[11CAll[1;1H[?25h[?25l[85;130H^[[1;1H[85;130H  [1;1H[85;130H^[[1;1H[85;130H  [1;1H[?25h[?25l[85;130H:[1;1H[85;1H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ vim lex2.[K[K[K[K[K[K[K[K[Kls lex
lex1.mjs   lexer.mjs  
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ls lex[K[K[K[K[K[Kcp lex1.mjs lex2.mks[K[Kk[Kjs
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ vim lex2.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex2.mjs" 5L, 159C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
[36m}[m;
[1m[34m~                                                                                                                                                            [7;1H~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H1,1[11CAll[1;1H[?25h[?1000l[?1002h[?25l[85;140H3,43[3;43H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[85;140H4,46[4;46H[?25h[?25l[85;130Ha[4;46H[85;130H [4;47H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H4,47[10CAll[4;47H[?25h[?25l[5;84r[5;1H[L[1;85r[85;140H[K[85;140H5,2-9[9CAll[5;9H[?25h[?25l[85;142H1  [5;1H[?25h[?25l[85;142H2[5;2H[?25h[?25l[85;142H3[5;3H[?25h[?25lI[85;142H4[5;4H[?25h[?25lD[85;142H5[5;5H[?25h[?25l:[85;142H6[5;6H[?25h[?25l[85;142H7[5;7H[?25h[?25l/[85;142H8[5;8H[?25h[?25l[36m[[m[85;142H9[5;9H[?25h[?25la[85;142H10[5;10H[?25h[?25l-[85;143H1[5;11H[?25h[?25lz[85;143H2[5;12H[?25h[?25lA[85;143H3[5;13H[?25h[?25l-[85;143H4[5;14H[?25h[?25lZ[85;143H5[5;15H[?25h[?25l0[85;143H6[5;16H[?25h[?25l-[85;143H7[5;17H[?25h[?25l9[85;143H8[5;18H[?25h[?25l[36m\[m[85;143H9[5;19H[?25h[?25l-[85;142H20[5;20H[?25h[?25l[36m\[m[85;143H1[5;21H[?25h[?25l_[85;143H2[5;22H[?25h[?25l[36m][m[5;8H[36m[46m[[13C][m[85;143H3[5;23H[?25h[?25l/[5;8H[36m[[13C][m[85;143H4[5;24H[?25h[?25l,[85;143H5[5;25H[?25h[85;1H[K[5;24H[?25l[85;130H^[[5;24H[85;130H  [5;25H[85;140H5,24[10CAll[5;24H[?25h[?25l[85;130H:[5;24H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex2.mjs" 6L, 184C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ vim lex2.mjs cp lex1.mjs lex2.mjs[7Pvim lex1.mjs [17@./lexer.mjs lex1.mjs data.txt[C[1P[1@2
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [17Pvim lex2.mjs[Ccp lex1.mjs lex2.mjs[7Pvim lex2.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex2.mjs" 6L, 184C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
  ID: /[36m[[ma-zA-Z0-9[36m\[m-[36m\[m_[36m][m/,
[36m}[m;
[1m[34m~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H5,24[10CAll[5;24H[?25h[?1000l[?1002h[?25l[85;140H6,2 [6;2H[?25h[?25l[85;140H5,24[5;24H[?25h[?25l[85;130H1[5;24H[85;1H[1m-- VISUAL --[m[85;13H[K[85;130H1[5;24H[85;140H5,24[10CAll[5;24H[?25h[?25l[?25h[?25l[85;130H [5;23H[85;1H[K[85;140H5,23[10CAll[5;23H[?25h[?25l[5;8H[36m[46m[[13C][m[85;143H2[5;22H[?25h[?25l[85;130H~@k[5;22H[85;130H   [5;21H[5;8H[36m[[13C][m[85;143H1[5;21H[?25h[?25l[85;130H~@k[5;21H[85;130H   [5;22H[5;8H[36m[46m[[13C][m[85;143H2[5;22H[?25h[?25l[85;130Ha[5;22H[85;130H [5;23H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H5,23[10CAll[5;23H[?25h[?25l[46m/[m,[5;24H[K[5;8H[36m[[m[13C/[85;143H2[5;22H[?25h[?25l+/,[85;143H3[5;23H[?25h[?25l[85;143H2[5;22H[?25h[?25l[85;143H3[5;23H[?25h[?25l/,[5;24H[K[85;143H2[5;22H[?25h[?25l[85;143H3[5;23H[?25h[?25l[85;143H4[5;24H[?25h[?25l[85;143H3[5;23H[?25h[?25l[85;143H2[5;22H[?25h[?25l[36m][m/,[5;8H[36m[46m[[13C][m[85;143H3[5;23H[?25h[?25l+/,[5;8H[36m[[13C][m[85;143H4[5;24H[?25h[85;1H[K[5;23H[?25l[85;130H^[[5;23H[85;130H  [5;24H[85;140H5,23[10CAll[5;23H[?25h[?25l[85;130H:[5;23H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex2.mjs" 6L, 185C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ vim lex2.mjs [17@./lexer.mjs lex2.mjs data.txt[C
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [17Pvim lex2.mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex2.mjs" 6L, 185C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
  ID: /[36m[[ma-zA-Z0-9[36m\[m-[36m\[m_[36m][m+/,
[36m}[m;
[1m[34m~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H5,23[10CAll[5;23H[?25h[?1000l[?1002h[?25l[85;130H~@k[5;23H[85;130H   [5;22H[5;8H[36m[46m[[13C][m[85;143H2[5;22H[?25h[?25l[85;130Ha[5;22H[85;130H [5;23H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H5,23[10CAll[5;23H[?25h[?25l[5;8H[36m[[13C][m[85;143H4[5;24H[?25h[?25l[5;8H[36m[46m[[13C][m[85;143H3[5;23H[?25h[?25l[85;143H2[5;22H[?25h[?25l[36m][m[46m+[m/,[5;25H[K[5;21H[36m[46m][m+[85;143H1[5;21H[?25h[?25l[36m][m[46m+[m/,[5;24H[K[5;20H[36m[46m][m+[85;143H0[5;20H[?25h[?25l[36m][m[46m+[m/,[5;23H[K[5;19H[36m[46m][m+[85;142H19[5;19H[?25h[?25l[36m][m[46m+[m/,[5;22H[K[5;18H[36m[46m][m+[85;143H8[5;18H[?25h[?25l[36m][m[46m+[m/,[5;21H[K[5;17H[36m[46m][m+[85;143H7[5;17H[?25h[?25l[36m][m[46m+[m/,[5;20H[K[5;16H[36m[46m][m+[85;143H6[5;16H[?25h[?25l[36m][m[46m+[m/,[5;19H[K[5;15H[36m[46m][m+[85;143H5[5;15H[?25h[?25l[36m][m[46m+[m/,[5;18H[K[5;14H[36m[46m][m+[85;143H4[5;14H[?25h[?25l[36m][m[46m+[m/,[5;17H[K[5;13H[36m[46m][m+[85;143H3[5;13H[?25h[?25l[36m][m[46m+[m/,[5;16H[K[5;12H[36m[46m][m+[85;143H2[5;12H[?25h[?25l[36m][m[46m+[m/,[5;15H[K[5;11H[36m[46m][m+[85;143H1[5;11H[?25h[?25l[36m][m[46m+[m/,[5;14H[K[5;10H[36m[46m][m+[85;143H0[5;10H[?25h[?25l[36m][m[46m+[m/,[5;13H[K[5;9H[36m[46m][m+[85;142H9 [5;9H[?25h[?25l[46m^[m[36m][m+/,^[36m[46m][m[85;142H10[5;10H[?25h[?25l[36m[46m\[m[36m][m+/,[36m\[m[36m[46m][m[85;143H1[5;11H[?25h[?25l[46mw[m[36m][m+/,w[36m[46m][m[85;143H2[5;12H[?25h[?25l[46m+[m[36m][m+/,+[36m[46m][m[85;143H3[5;13H[?25h[?25l[46m$[m[36m][m+/,$[36m[46m][m[85;143H4[5;14H[?25h[85;1H[K[5;13H[?25l[85;130H^[[5;13H[85;130H  [5;14H[36m[[5C][m[85;140H5,13[10CAll[5;13H[?25h[?25l[85;130H:[5;13H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex2.mjs" 6L, 177C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clearvim lex2.mjs [17@./lexer.mjs lex2.mjs data.txt[C
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt clear[Kvim lex2.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex2.mjs" 6L, 177C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
  ID: /[36m[[m^[36m\[mw+$[36m][m+/,
[36m}[m;
[1m[34m~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H5,13[10CAll[5;13H[?25h[?1000l[?1002h[?25l[85;130Ha[5;13H[85;130H [5;14H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H5,14[10CAll[5;8H[36m[46m[[5C][?25h[?25l[m[36m][m[46m+[m/,[5;17H[K[5;13H[36m[46m][m+[85;143H3[5;13H[?25h[85;1H[K[5;12H[?25l[85;130H^[[5;12H[85;130H  [5;13H[36m[[4C][m[85;140H5,12[10CAll[5;12H[?25h[?25l[85;130H:[5;12H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex2.mjs" 6L, 176C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clearvim lex2.mjs [17@./lexer.mjs lex2.mjs data.txt[C
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt clear[Kvim lex2.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex2.mjs" 6L, 176C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
  ID: /[36m[[m^[36m\[mw+[36m][m+/,
[36m}[m;
[1m[34m~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H5,12[10CAll[5;12H[?25h[?1000l[?1002h[?25l[85;130H~@k[5;12H[85;130H   [4;12H[85;140H4[4;12H[?25h[?25l[85;130H~@k[4;12H[85;130H   [3;12H[85;140H3[3;12H[?25h[?25l[85;130H~@k[3;12H[85;130H   [4;12H[85;140H4[4;12H[?25h[?25l[85;130H~@k[4;12H[85;130H   [5;12H[85;140H5[5;12H[?25h[?25l[85;130H~@k[5;12H[85;130H   [6;2H[85;140H6,2 [6;2H[?25h[?25l[85;130H~@k[6;2H[85;130H   [5;12H[85;140H5,12[5;12H[?25h[?25l[85;130H~@k[5;12H[85;130H   [5;13H[36m[46m[[4C][m[85;143H3[5;13H[?25h[?25l[85;130H~@k[5;13H[85;130H   [5;14H[36m[[4C][m[85;143H4[5;14H[?25h[?25l[85;130H~@k[5;14H[85;130H   [5;15H[85;143H5[5;15H[?25h[?25l[85;130H~@k[5;15H[85;130H   [5;16H[85;143H6[5;16H[?25h[?25l[85;130H~@k[5;16H[85;130H   [5;16H[?25h[?25l[85;130H~@k[5;16H[85;130H   [4;16H[85;140H4[4;16H[?25h[?25l[5;8H[36m[46m[[4C][m[85;140H5,13[5;13H[?25h[?25l[85;130H~@k[5;13H[85;130H   [5;12H[36m[[4C][m[85;143H2[5;12H[?25h[?25l[85;130H~@k[5;12H[85;130H   [5;13H[36m[46m[[4C][m[85;143H3[5;13H[?25h[?25l[85;130Ha[5;13H[85;130H [5;14H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H5,14[10CAll[5;14H[?25h[?25l[85;143H3[5;13H[?25h[?25l[36m][m[46m+[m/,[5;16H[K[5;12H[36m[46m][m+[85;143H2[5;12H[?25h[?25l[36m[[3C][m[85;143H1[5;11H[?25h[?25l[85;143H0[5;10H[?25h[?25l[36m\[mw[36m][m+/,[5;15H[K[5;8H[36m[46m[[2C][m[85;142H9 [5;9H[?25h[?25l[36m[\[mw[36m][m[85;142H10[5;10H[?25h[?25l[36m[46m[[2C][m[85;143H1[5;11H[?25h[?25l[85;143H2[5;12H[?25h[?25l[36m[\[mw[36m][m[85;143H3[5;13H[?25h[?25l/,[5;14H[K[5;8H[36m[46m[[2C][m[85;143H2[5;12H[?25h[?25l*/,[5;8H[36m[\[mw[36m][m[85;143H3[5;13H[?25h[85;1H[K[5;12H[?25l[85;130H^[[5;12H[85;130H  [5;13H[85;140H5,12[10CAll[5;12H[?25h[?25l[85;130H:[5;12H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex2.mjs" 6L, 174C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clearvim lex2.mjs [17@./lexer.mjs lex2.mjs data.txt[C
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt clear[Kvim lex2.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex2.mjs" 6L, 174C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
  ID: /[36m[\[mw[36m][m*/,
[36m}[m;
[1m[34m~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H5,12[10CAll[5;12H[?25h[?1000l[?1002h[?25l[85;142H9 [5;9H[?25h[?25l[85;130H~@k[5;9H[85;130H   [5;8H[36m[46m[[2C][m[85;142H8[5;8H[?25h[?25l[85;142H11[5;11H[?25h[?25l[85;130H~@k[5;11H[85;130H   [5;12H[36m[\[mw[36m][m[85;143H2[5;12H[?25h[?25l[85;130H~@k[5;12H[85;130H   [5;11H[36m[46m[[2C][m[85;143H1[5;11H[?25h[?25l[85;130H~@k[5;11H[85;130H   [5;10H[36m[\[mw[36m][m[85;143H0[5;10H[?25h[?25l[85;130H~@k[5;10H[85;130H   [5;9H[85;142H9 [5;9H[?25h[?25l[85;130H~@k[5;9H[85;130H   [5;8H[36m[46m[[2C][m[85;142H8[5;8H[?25h[?25l[85;130Ha[5;8H[85;130H [5;9H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H5,9[11CAll[5;9H[?25h[?25l[36m[\[mw[36m][m[85;142H10[5;10H[?25h[?25l[36m[46m[[2C][m[85;143H1[5;11H[?25h[?25l[36m][m[46m*[m/,[5;14H[K[5;10H[36m[46m][m*[85;143H0[5;10H[?25h[?25l[36m][m[46m*[m/,[5;13H[K[5;9H[36m[46m][m*[85;142H9 [5;9H[?25h[?25l[36m[][m[85;142H4[5;4H[?25h[?25lD: /[36m[46m[][m[85;142H9[5;9H[?25h[?25l[46m+[m[36m][m*/,+[36m[46m][m[85;142H10[5;10H[?25h[?25l[36m][m[46m*[m/,[5;13H[K[5;9H[36m[46m][m*[85;142H9 [5;9H[?25h[?25l[46m_[m[36m][m*/,_[36m[46m][m[85;142H10[5;10H[?25h[?25l[46m0[m[36m][m*/,0[36m[46m][m[85;143H1[5;11H[?25h[?25l[46m-[m[36m][m*/,-[36m[46m][m[85;143H2[5;12H[?25h[?25l[46m9[m[36m][m*/,9[36m[46m][m[85;143H3[5;13H[?25h[?25l[36m[[m_0-9[36m][m[85;140H6,3 [6;3H[?25h[?25l[5;8H[36m[46m[[m_0-9[36m[46m][m[85;140H5,13[5;13H[?25h[?25l[36m][m[46m*[m/,[5;16H[K[5;12H[36m[46m][m*[85;143H2[5;12H[?25h[?25l[36m][m[46m*[m/,[5;15H[K[5;11H[36m[46m][m*[85;143H1[5;11H[?25h[?25l[36m][m[46m*[m/,[5;14H[K[5;10H[36m[46m][m*[85;143H0[5;10H[?25h[?25l[46ma[m[36m][m*/,a[36m[46m][m[85;143H1[5;11H[?25h[?25l[46m-[m[36m][m*/,-[36m[46m][m[85;143H2[5;12H[?25h[?25l[46mz[m[36m][m*/,z[36m[46m][m[85;143H3[5;13H[?25h[?25l[46mA[m[36m][m*/,A[36m[46m][m[85;143H4[5;14H[?25h[?25l[46m-[m[36m][m*/,-[36m[46m][m[85;143H5[5;15H[?25h[?25l[46mZ[m[36m][m*/,Z[36m[46m][m[85;143H6[5;16H[?25h[?25l[46m0[m[36m][m*/,0[36m[46m][m[85;143H7[5;17H[?25h[?25l[46m-[m[36m][m*/,-[36m[46m][m[85;143H8[5;18H[?25h[?25l[46m9[m[36m][m*/,9[36m[46m][m[85;143H9[5;19H[?25h[?25l[85;142H20[5;20H[?25h[?25l[85;142H19[5;19H[?25h[?25l[36m[46m\[m[36m][m*/,[36m\[m[36m[46m][m[85;142H20[5;20H[?25h[?25l[46m-[m[36m][m*/,-[36m[46m][m[85;143H1[5;21H[?25h[?25l[36m[46m\[m[36m][m*/,[36m\[m[36m[46m][m[85;143H2[5;22H[?25h[85;1H[K[5;21H[?25l[85;130H^[[5;21H[85;130H  [5;22H[5;8H[36m[[13C][m[85;140H5,21[10CAll[5;21H[?25h[?25l[85;130H:[5;21H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex2.mjs" 6L, 185C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clearvim lex2.mjs [17@./lexer.mjs lex2.mjs data.txt[C
SyntaxError: Invalid regular expression: missing /
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt clear[Kvim lex2.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex2.mjs" 6L, 185C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
  ID: /[36m[[m_a-zA-Z0-9[36m\[m-[36m\][m*/,
[36m}[m;
[1m[34m~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H5,21[10CAll[5;21H[?25h[?1000l[?1002h[?25l[85;130H~@k[5;21H[85;130H   [5;22H[5;8H[36m[46m[[13C][m[85;143H2[5;22H[?25h[?25l[85;130H~@k[5;22H[85;130H   [5;21H[5;8H[36m[[13C][m[85;143H1[5;21H[?25h[?25l[85;130H~@k[5;21H[85;130H   [5;20H[85;143H0[5;20H[?25h[?25l[85;130H~@k[5;20H[85;130H   [5;21H[85;143H1[5;21H[?25h[?25l[85;130H~@k[5;21H[85;130H   [5;22H[5;8H[36m[46m[[13C][m[85;143H2[5;22H[?25h[?25l[85;130H~@k[5;22H[85;130H   [5;23H[5;8H[36m[[13C][m[85;143H3[5;23H[?25h[?25l[85;130H~@k[5;23H[85;130H   [5;22H[5;8H[36m[46m[[13C][m[85;143H2[5;22H[?25h[?25l[85;130H~@k[5;22H[85;130H   [5;23H[5;8H[36m[[13C][m[85;143H3[5;23H[?25h[?25l[85;130H~@k[5;23H[85;130H   [5;24H[85;143H4[5;24H[?25h[?25l[85;130H~@k[5;24H[85;130H   [5;25H[85;143H5[5;25H[?25h[?25l[85;130H~@k[5;25H[85;130H   [5;24H[85;143H4[5;24H[?25h[?25l[85;130H~@k[5;24H[85;130H   [5;23H[85;143H3[5;23H[?25h[?25l[5;8H[36m[46m[[13C][m[85;143H2[5;22H[?25h[?25l[85;130Ha[5;22H[85;130H [5;23H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H5,23[10CAll[5;23H[?25h[?25l[85;143H2[5;22H[?25h[?25l[36m][m[46m*[m/,[5;25H[K[5;21H[36m[46m][m*[85;143H1[5;21H[?25h[?25l[36m][m[46m*[m/,[5;24H[K[5;20H[36m[46m][m*[85;143H0[5;20H[?25h[?25l[36m][m[46m*[m/,[5;23H[K[5;19H[36m[46m][m*[85;142H19[5;19H[?25h[?25l[36m][m[46m*[m/,[5;22H[K[5;18H[36m[46m][m*[85;143H8[5;18H[?25h[?25l[36m][m[46m*[m/,[5;21H[K[5;17H[36m[46m][m*[85;143H7[5;17H[?25h[?25l[36m][m[46m*[m/,[5;20H[K[5;16H[36m[46m][m*[85;143H6[5;16H[?25h[?25l[36m][m[46m*[m/,[5;19H[K[5;15H[36m[46m][m*[85;143H5[5;15H[?25h[?25l[36m][m[46m*[m/,[5;18H[K[5;14H[36m[46m][m*[85;143H4[5;14H[?25h[?25l[36m][m[46m*[m/,[5;17H[K[5;13H[36m[46m][m*[85;143H3[5;13H[?25h[?25l[36m][m[46m*[m/,[5;16H[K[5;12H[36m[46m][m*[85;143H2[5;12H[?25h[?25l[36m][m[46m*[m/,[5;15H[K[5;11H[36m[46m][m*[85;143H1[5;11H[?25h[?25l[36m][m[46m*[m/,[5;14H[K[5;10H[36m[46m][m*[85;143H0[5;10H[?25h[?25l[36m][m[46m*[m/,[5;13H[K[5;9H[36m[46m][m*[85;142H9 [5;9H[?25h[?25l[85;142H10[5;10H[?25h[?25l[46m*[m/,[5;12H[K[5;8H[36m[[m*[85;142H9 [5;9H[?25h[?25l[34m/*/,[m[5;11H[K[6;1H[34m};[m[85;142H8[5;8H[?25h[?25l/[36m\[m*/,
[36m}[m;[85;142H9[5;9H[?25h[?25lw*/,[85;142H10[5;10H[?25h[?25l[85;140H4[4;10H[?25h[?25l[85;140H5[5;10H[?25h[?25l[85;143H1[5;11H[?25h[?25l/,[5;12H[K[85;143H0[5;10H[?25h[?25l+/,[85;143H1[5;11H[?25h[85;1H[K[5;10H[?25l[85;130H^[[5;10H[85;130H  [5;11H[85;140H5,10[10CAll[5;10H[?25h[?25l[85;130H:[5;10H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex2.mjs" 6L, 172C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clearvim lex2.mjs [17@./lexer.mjs lex2.mjs data.txt[C
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt clear[Kvim lex2.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex2.mjs" 6L, 172C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
  ID: /[36m\[mw+/,
[36m}[m;
[1m[34m~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H5,10[10CAll[5;10H[?25h[?1000l[?1002h[?25l[85;130H~@k[5;10H[85;130H   [5;11H[85;143H1[5;11H[?25h[?25l[85;130H~@k[5;11H[85;130H   [5;10H[85;143H0[5;10H[?25h[?25l[85;130H~@k[5;10H[85;130H   [5;11H[85;143H1[5;11H[?25h[?25l[85;130H~@k[5;11H[85;130H   [5;10H[85;143H0[5;10H[?25h[?25l[85;130H~@k[5;10H[85;130H   [5;11H[85;143H1[5;11H[?25h[?25l[85;130H~@k[5;11H[85;130H   [5;10H[85;143H0[5;10H[?25h[?25l[85;130H~@k[5;10H[85;130H   [5;11H[85;143H1[5;11H[?25h[?25l[85;130H~@k[5;11H[85;130H   [5;10H[85;143H0[5;10H[?25h[?25l[85;130H~@k[5;10H[85;130H   [5;11H[85;143H1[5;11H[?25h[?25l[85;130H~@k[5;11H[85;130H   [5;10H[85;143H0[5;10H[?25h[?25l[85;130H~@k[5;10H[85;130H   [5;11H[85;143H1[5;11H[?25h[?25l[85;130Ha[5;11H[85;130H [5;12H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H5,12[10CAll[5;12H[?25h[?25l[85;143H1[5;11H[?25h[?25l/,[5;12H[K[85;143H0[5;10H[?25h[?25l/,[5;11H[K[85;142H9 [5;9H[?25h[?25l[34m//,[m[5;10H[K[85;142H8[5;8H[?25h[?25l/[36m[[m/,[85;142H9[5;9H[?25h[?25la/,[85;142H10[5;10H[?25h[?25l-/,[85;143H1[5;11H[?25h[?25lZ/,[85;143H2[5;12H[?25h[?25l/,[5;13H[K[85;143H1[5;11H[?25h[?25lz/,[85;143H2[5;12H[?25h[?25lA/,[85;143H3[5;13H[?25h[?25l-/,[85;143H4[5;14H[?25h[?25lz/,[85;143H5[5;15H[?25h[?25l/,[5;16H[K[85;143H4[5;14H[?25h[?25lZ/,[85;143H5[5;15H[?25h[?25l_/,[85;143H6[5;16H[?25h[?25l[36m][m/,[5;8H[36m[46m[[7C][m[85;143H7[5;17H[?25h[?25l*/,[5;8H[36m[[7C][m[85;143H8[5;18H[?25h[?25l[36m[[m/,[85;143H9[5;19H[?25h[?25l/,[5;20H[K[85;143H8[5;18H[?25h[?25l/,[5;19H[K[5;8H[36m[46m[[7C][m[85;143H7[5;17H[?25h[?25l[36m[[m/,[5;8H[36m[[7C][m[85;143H8[5;18H[?25h[?25l[36m\[m/,[85;143H9[5;19H[?25h[?25lw/,[85;142H20[5;20H[?25h[?25l+/,[85;143H1[5;21H[?25h[?25l[36m][m/,[5;17H[36m[46m[[3C][m[85;143H2[5;22H[?25h[85;1H[K[5;21H[?25l[85;130H^[[5;21H[85;130H  [5;22H[85;140H5,21[10CAll[5;21H[?25h[?25l[85;130H:[5;21H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex2.mjs" 6L, 183C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clearvim lex2.mjs [17@./lexer.mjs lex2.mjs data.txt[C
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt clear[Kvim lex2.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex2.mjs" 6L, 183C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
  ID: /[36m[[ma-zA-Z_[36m][m[36m[46m[[m[36m\[mw+[36m[46m][m/,
[36m}[m;
[1m[34m~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H5,21[10CAll[5;21H[?25h[?1000l[?1002h[?25l[36m[\[mw+[36m][m[85;140H6,2 [6;2H[?25h[?25l[85;130H~@k[6;2H[85;130H   [6;2H[?25h[?25l[85;130Ha[6;2H[85;130H [6;3H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H6,3[11CAll[6;3H[?25h[85;1H[K[6;2H[?25l[85;130H^[[6;2H[85;130H  [6;3H[85;140H6,2[11CAll[6;2H[?25h[?25l[85;130H:[6;2H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clearvim lex2.mjs [17@./lexer.mjs lex2.mjs data.txt[C
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt clear[Kvim lex2.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex2.mjs" 6L, 183C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
  ID: /[36m[[ma-zA-Z_[36m][\[mw+[36m][m/,
[36m}[m;
[1m[34m~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H6,2[11CAll[6;2H[?25h[?1000l[?1002h[?25l[85;140H4,11[4;11H[?25h[?25l[85;130H~@k[4;11H[85;130H   [4;10H[85;143H0[4;10H[?25h[?25l[85;130H~@k[4;10H[85;130H   [4;11H[85;143H1[4;11H[?25h[?25l[85;140H3[3;11H[?25h[?25l[85;140H4[4;11H[?25h[?25l[85;130Ha[4;11H[85;130H [4;12H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H4,12[10CAll[4;12H[?25h[?25l[85;143H1[4;11H[?25h[?25l[34m//,       //single char: must be last[m[4;46H[K[85;143H0[4;10H[?25h[?25l/./,       [1C[34m/single char: must be last[m[85;143H1[4;11H[?25h[?25l[85;140H5,24[5;24H[?25h[?25l[5;17H[36m[46m[[3C][m[85;143H1[5;21H[?25h[?25l[85;143H2[5;22H[?25h[?25l[85;143H1[5;21H[?25h[?25l[85;143H2[5;22H[?25h[?25la/,[5;17H[36m[\[mw+[36m][m[85;143H3[5;23H[?25h[?25l/,[5;24H[K[5;17H[36m[46m[[3C][m[85;143H2[5;22H[?25h[?25l+/,[5;17H[36m[\[mw+[36m][m[85;143H3[5;23H[?25h[?25l/,[5;24H[K[5;17H[36m[46m[[3C][m[85;143H2[5;22H[?25h[?25l[85;143H1[5;21H[?25h[?25l[36m[\[mw+[36m][m[85;143H0[5;20H[?25h[?25l[36m[46m[[3C][m[85;143H1[5;21H[?25h[?25l[85;143H2[5;22H[?25h[?25l[36m[\[mw+[36m][m[85;143H3[5;23H[?25h[?25l[36m[46m[[3C][m[85;143H2[5;22H[?25h[?25l[36m[\[mw+[36m][m[85;140H6,3 [6;3H[?25h[?25l[85;4H[1m(insert)- VISUAL --[m[85;140H[K[85;130H1[6;3H[85;140H6,3[11CAll[6;3H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[85;130H [6;3H[?25h[?25l[85;130H1[6;3H[?25h[?25l[85;130H [5;18H[85;4H[1mINSERTt --[m[85;13H[K[85;140H5,18[10CAll[5;17H[36m[46m[[3C][?25h[?25l[5;8H[[7C][m[36m[\[mw+[36m][m[85;143H6[5;16H[?25h[?25l[85;142H9 [5;9H[?25h[?25l[85;142H8[5;8H[?25h[?25l[85;142H9[5;9H[?25h[?25l[36m[[7C][m[85;142H10[5;10H[?25h[?25l[85;143H1[5;11H[?25h[?25l[85;143H2[5;12H[?25h[?25l[85;143H3[5;13H[?25h[?25l[85;143H4[5;14H[?25h[?25l[85;143H5[5;15H[?25h[?25l[5;8H[36m[46m[[7C][m[85;143H6[5;16H[?25h[?25l[5;8H[36m[[7C][m[36m[46m[[3C][m[85;143H7[5;17H[?25h[?25l[85;143H8[5;18H[?25h[?25l[36m[\[mw+[36m][m[85;143H9[5;19H[?25h[?25l[85;142H20[5;20H[?25h[?25l[36m[46m[[3C][m[85;143H1[5;21H[?25h[?25l[85;143H2[5;22H[?25h[?25l[85;143H1[5;21H[?25h[?25l[36m[\[mw+[36m][m[85;143H0[5;20H[?25h[?25l[85;142H19[5;19H[?25h[?25l[36m[46m[[3C][m[85;143H8[5;18H[?25h[?25l[36m[\[mw+[36m][m[85;143H9[5;19H[?25h[?25l[85;142H20[5;20H[?25h[?25l[36m[46m[[3C][m[85;143H1[5;21H[?25h[?25l[46ma[m[36m][m/,a[36m[46m][m[85;143H2[5;22H[?25h[?25l[36m[\[mw+a[36m][m[85;143H1[5;21H[?25h[?25l[36m[46m[[4C][m[85;143H2[5;22H[?25h[?25l[36m][m[46m/[m,[5;24H[K[5;21H[36m[46m][m/[85;143H1[5;21H[?25h[?25l[36m][m[46m/[m,[5;23H[K[5;20H[36m[46m][m/[85;143H0[5;20H[?25h[?25l[85;143H1[5;21H[?25h[?25l+/,[5;17H[36m[\[mw[36m][m[85;143H2[5;22H[?25h[?25l[36m[46m[[2C][m[85;143H1[5;21H[?25h[?25l[46m+[m/,[5;23H[K[5;17H[36m[[m[2C+[85;143H0[5;20H[?25h[?25l[85;142H19[5;19H[?25h[?25l[85;143H8[5;18H[?25h[?25l[36m\[mw+/,[5;22H[K[5;8H[36m[46m[[7C][m[85;143H7[5;17H[?25h[?25l[5;8H[36m[[7C][m[85;143H8[5;18H[?25h[?25l[85;143H9[5;19H[?25h[?25l[85;142H20[5;20H[?25h[?25l[85;143H1[5;21H[?25h[?25l[85;143H2[5;22H[?25h[85;1H[K[5;21H[?25l[85;130H^[[5;21H[85;130H  [5;22H[85;140H5,21[10CAll[5;21H[?25h[?25l[85;130H:[5;21H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex2.mjs" 6L, 181C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clearvim lex2.mjs [17@./lexer.mjs lex2.mjs data.txt[C
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt clear[Kvim lex2.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex2.mjs" 6L, 181C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
  ID: /[36m[[ma-zA-Z_[36m]\[mw+/,
[36m}[m;
[1m[34m~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H5,21[10CAll[5;21H[?25h[?1000l[?1002h[?25l[85;130H~@k[5;21H[85;130H   [4;21H[85;140H4[4;21H[?25h[?25l[85;130H~@k[4;21H[85;130H   [3;21H[85;140H3[3;21H[?25h[?25l[85;130H~@k[3;21H[85;130H   [2;21H[85;140H2[2;21H[?25h[?25l[85;130H~@k[2;21H[85;130H   [3;21H[85;140H3[3;21H[?25h[?25l[85;140H5,20[5;20H[?25h[?25l[85;130H~@k[5;20H[85;130H   [5;19H[85;142H19[5;19H[?25h[?25l[85;130H~@k[5;19H[85;130H   [5;18H[85;143H8[5;18H[?25h[?25l[85;130H~@k[5;18H[85;130H   [5;19H[85;143H9[5;19H[?25h[?25l[85;130H~@k[5;19H[85;130H   [5;18H[85;143H8[5;18H[?25h[?25l[85;130Ha[5;18H[85;130H [5;19H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H5,19[10CAll[5;19H[?25h[?25l[85;142H20[5;20H[?25h[?25l/,[5;21H[K[85;142H19[5;19H[?25h[?25l/,[5;20H[K[85;143H8[5;18H[?25h[?25l/,[5;19H[K[5;8H[36m[46m[[7C][m[85;143H7[5;17H[?25h[?25l[46m/[m,[5;18H[K[5;8H[36m[[m[7C/[85;143H6[5;16H[?25h[?25l/,[5;17H[K[85;143H5[5;15H[?25h[?25l/,[5;16H[K[85;143H4[5;14H[?25h[?25l/,[5;15H[K[85;143H3[5;13H[?25h[?25l/,[5;14H[K[85;143H2[5;12H[?25h[?25l/,[5;13H[K[85;143H1[5;11H[?25h[?25l/,[5;12H[K[85;143H0[5;10H[?25h[?25l/,[5;11H[K[85;142H9 [5;9H[?25h[?25l[34m//,[m[5;10H[K[85;142H8[5;8H[?25h[?25l[85;142H9[5;9H[?25h[?25l[85;142H8[5;8H[?25h[?25l/[36m[[m/,[85;142H9[5;9H[?25h[?25l[36m][m/,[36m[46m[][m[85;142H10[5;10H[?25h[?25l[85;142H9 [5;9H[?25h[?25l[46ma[m[36m][m/,a[36m[46m][m[85;142H10[5;10H[?25h[?25l[46m-[m[36m][m/,-[36m[46m][m[85;143H1[5;11H[?25h[?25l[46mz[m[36m][m/,z[36m[46m][m[85;143H2[5;12H[?25h[?25l[36m][m[46m/[m,[5;14H[K[5;11H[36m[46m][m/[85;143H1[5;11H[?25h[?25l[46mz[m[36m][m/,z[36m[46m][m[85;143H2[5;12H[?25h[?25l[46mA[m[36m][m/,A[36m[46m][m[85;143H3[5;13H[?25h[?25l[46m-[m[36m][m/,-[36m[46m][m[85;143H4[5;14H[?25h[?25l[46mz[m[36m][m/,z[36m[46m][m[85;143H5[5;15H[?25h[?25l[36m][m[46m/[m,[5;17H[K[5;14H[36m[46m][m/[85;143H4[5;14H[?25h[?25l[46mZ[m[36m][m/,Z[36m[46m][m[85;143H5[5;15H[?25h[?25l[46m0[m[36m][m/,0[36m[46m][m[85;143H6[5;16H[?25h[?25l[36m][m[46m/[m,[5;18H[K[5;15H[36m[46m][m/[85;143H5[5;15H[?25h[?25l[46m_[m[36m][m/,_[36m[46m][m[85;143H6[5;16H[?25h[?25l[5;8H[36m[[7C][m[85;140H6,3 [6;3H[?25h[?25l[85;140H5,10[5;10H[?25h[?25l[85;143H1[5;11H[?25h[?25l[85;143H0[5;10H[?25h[?25l[85;143H1[5;11H[?25h[?25l[85;143H2[5;12H[?25h[?25laA-Z_[36m][m/,[85;143H3[5;13H[?25h[?25l[85;143H2[5;12H[?25h[?25l[85;143H3[5;13H[?25h[?25lA-Z_[36m][m/,[5;19H[K[85;143H2[5;12H[?25h[?25l|A-Z_[36m][m/,[85;143H3[5;13H[?25h[?25l[85;143H4[5;14H[?25h[?25l[85;143H5[5;15H[?25h[?25l[85;143H6[5;16H[?25h[?25ll_[36m][m/,[85;143H7[5;17H[?25h[?25l_[36m][m/,[5;20H[K[85;143H6[5;16H[?25h[?25l|_[36m][m/,[85;143H7[5;17H[?25h[?25l[5;8H[36m[46m[[9C][m[85;143H8[5;18H[?25h[?25l[85;143H9[5;19H[?25h[?25l[5;8H[36m[[9C][m[85;142H20[5;20H[?25h[?25l[5;8H[36m[46m[[9C][m[85;142H19[5;19H[?25h[?25l[5;8H[36m[[9C][m[85;142H20[5;20H[?25h[?25l[5;8H[36m[46m[[9C][m[85;142H19[5;19H[?25h[?25la/,[5;8H[36m[[9C][m[85;142H20[5;20H[?25h[?25l/,[5;21H[K[5;8H[36m[46m[[9C][m[85;142H19[5;19H[?25h[?25l[46m/[m,[5;20H[K[5;8H[36m[[m[9C/[85;143H8[5;18H[?25h[?25l[36m}[m/,[1;16H[36m[46m{[5;18H}[m[85;143H9[5;19H[?25h[?25l[85;143H8[5;18H[?25h[?25l[1;16H[36m{[5;18H}[m[85;143H7[5;17H[?25h[?25l[85;143H6[5;16H[?25h[?25l[85;143H5[5;15H[?25h[?25l[85;143H6[5;16H[?25h[?25l[85;143H7[5;17H[?25h[?25l[1;16H[36m[46m{[5;18H}[m[85;143H8[5;18H[?25h[?25l[85;143H9[5;19H[?25h[?25l[46m/[m,[5;20H[K[1;16H[36m{[m[5;18H/[85;143H8[5;18H[?25h[?25l)/,[85;143H9[5;19H[?25h[?25l[85;143H8[5;18H[?25h[?25l[85;143H7[5;17H[?25h[?25l[85;143H6[5;16H[?25h[?25l[85;143H5[5;15H[?25h[?25l[85;143H4[5;14H[?25h[?25l[85;143H3[5;13H[?25h[?25l[85;143H2[5;12H[?25h[?25l[85;143H1[5;11H[?25h[?25l[85;143H0[5;10H[?25h[?25l[85;142H9 [5;9H[?25h[?25la-z|A-Z|_)/,[5;20H[K[85;142H8[5;8H[?25h[?25l(a-z|A-Z|_)/,[5;8H[46m([9C)[m[85;142H9[5;9H[?25h[?25l([9C)[85;142H10[5;10H[?25h[?25l[85;143H1[5;11H[?25h[?25l[85;143H2[5;12H[?25h[?25l[85;143H3[5;13H[?25h[?25l[85;143H4[5;14H[?25h[?25l[85;143H5[5;15H[?25h[?25l[85;143H6[5;16H[?25h[?25l[85;143H7[5;17H[?25h[?25l[5;8H[46m([9C)[m[85;143H8[5;18H[?25h[?25l[85;143H9[5;19H[?25h[?25l[36m\[m/,[5;8H([9C)[85;142H20[5;20H[?25h[?25lw/,[85;143H1[5;21H[?25h[?25l+/,[85;143H2[5;22H[?25h[85;1H[K[5;21H[?25l[85;130H^[[5;21H[85;130H  [5;22H[85;140H5,21[10CAll[5;21H[?25h[?25l[85;130H:[5;21H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex2.mjs" 6L, 183C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clearvim lex2.mjs [17@./lexer.mjs lex2.mjs data.txt[C
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt clear[Kvim lex2.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex2.mjs" 6L, 183C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
  ID: /(a-z|A-Z|_)[36m\[mw+/,
[36m}[m;
[1m[34m~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H5,21[10CAll[5;21H[?25h[?1000l[?1002h[?25l[85;130H~@k[5;21H[85;130H   [5;22H[85;143H2[5;22H[?25h[?25l[85;130Ha[5;22H[85;130H [5;23H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H5,23[10CAll[5;23H[?25h[?25l[85;143H2[5;22H[?25h[?25l/,[5;23H[K[85;143H1[5;21H[?25h[?25l/,[5;22H[K[85;143H0[5;20H[?25h[?25l/,[5;21H[K[5;8H[46m([9C)[m[85;142H19[5;19H[?25h[?25l[5;8H([9C)[85;142H21[5;21H[?25h[85;1H[K[5;20H[?25l[85;130H^[[5;20H[85;130H  [5;21H[85;140H5,20[10CAll[5;20H[?25h[?25l[85;130H~@k[5;20H[85;130H   [5;19H[85;142H19[5;19H[?25h[?25l[85;130H~@k[5;19H[85;130H   [5;20H[85;142H20[5;20H[?25h[?25l[85;130H~@k[5;20H[85;130H   [5;20H[?25h[?25l[85;130HY[5;20H[85;130H [5;20H[85;130Hyy[5;20H[85;130H  [5;20H[?25h[?25l[85;130HV[5;20H[85;130H1[5;20H[7m  ID: /(a-z|A-Z|_)/[m,[7m [m[85;1H[1m-- VISUAL LINE --[m[85;130H[K[85;130H1[5;20H[85;140H5,20[10CAll[5;20H[?25h[?25l[85;130Hy[5;20H[85;130H [5;1H  ID: /(a-z|A-Z|_)/[5;21H[K[85;1H[K[85;140H5,1[11CAll[5;1H[?25h[?25l[85;130H~@k[5;1H[85;130H   [4;1H[85;140H4[4;1H[?25h[?25l[85;130H~@k[4;1H[85;130H   [3;1H[85;140H3[3;1H[?25h[?25l[85;130H~@k[3;1H[85;130H   [2;1H[85;140H2[2;1H[?25h[?25l[85;130H~@k[2;1H[85;130H   [2;2H[85;142H2[2;2H[?25h[?25l[85;130H~@k[2;2H[85;130H   [3;2H[85;140H3[3;2H[?25h[?25l[85;130H~@k[3;2H[85;130H   [3;3H[85;142H3[3;3H[?25h[?25l[85;130Ha[3;3H[85;130H [3;4H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H3,4[11CAll[3;4H[?25h[?25l[85;142H3[3;3H[?25h[?25l[4;84r[4;1H[L[1;85r[3;3H[K[4;9HINT: /[36m\[md+/,      [34m//token with kind INT        [m[85;140H[K[85;140H4,2-9[9CAll[4;9H[?25h[?25lINT: /[36m\[md+/,      [34m//token with kind INT        [m[4;47H[K[85;142H1  [4;1H[?25h[?25l INT: /[36m\[md+/,      [1C[34m/token with kind INT[7C [m[85;142H2[4;2H[?25h[?25l INT: /[36m\[md+/,      [1C[34m/token with kind INT[7C [m[85;142H3[4;3H[?25h[?25l[85;140H3[3;3H[?25h[85;1H[K[3;2H[?25l[85;130H^[[3;2H[85;130H  [3;3H[85;140H3,2[11CAll[3;2H[?25h[?25l[85;130Hp[3;2H[85;130H [4;3H[4;84r[4;1H[L[1;85r[4;3HID: /(a-z|A-Z|_)/,[85;140H[K[85;140H4,3[11CAll[4;3H[?25h[?25l[85;130Ha[4;3H[85;130H [4;4H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H4,4[11CAll[4;4H[?25h[?25l[85;142H3[4;3H[?25h[?25lID: /(a-z|A-Z|_)/,[4;20H[K[85;142H2[4;2H[?25h[?25lID: /(a-z|A-Z|_)/,[4;19H[K[85;142H1[4;1H[?25h[?25l[3;84r[84;1H
[1;85r[3;1H  ID: /(a-z|A-Z|_)/,[84;1H[1m[34m~                                                                                                                                                            [m[85;140H[K[85;140H3,3[11CAll[3;3H[?25h[?25l[85;140H4[4;3H[?25h[?25l[85;140H5[5;3H[?25h[?25l[85;140H6[6;3H[?25h[85;1H[K[6;2H[?25l[85;130H^[[6;2H[85;130H  [6;3H[85;140H6,2[11CAll[6;2H[?25h[?25l[85;130Hd[6;2H[?25h[?25l[85;131Hf[6;2H[?25h[?25l[85;132Hd[6;2H[85;130H   [6;2H[?25h[?25l[85;130Hd[6;2H[?25h[?25l[85;131Hd[6;2H[85;130H  [6;1H[1;16H[36m[46m{[6;1H}[m;[6;3H[K[7;1H[1m[34m~                                                                                                                                                            [m[85;142H1[6;1H[?25h[?25l[85;130H~@k[6;1H[85;130H   [6;2H[1;16H[36m{[6;1H}[m[85;142H2[6;2H[?25h[?25l[85;130H~@k[6;2H[85;130H   [5;2H[85;140H5[5;2H[?25h[?25l[85;130H~@k[5;2H[85;130H   [4;2H[85;140H4[4;2H[?25h[?25l[85;130H~@k[4;2H[85;130H   [4;3H[85;142H3[4;3H[?25h[?25l[85;130H~@k[4;3H[85;130H   [3;3H[85;140H3[3;3H[?25h[?25l[85;130H~@k[3;3H[85;130H   [3;4H[85;142H4[3;4H[?25h[?25l[85;130H~@k[3;4H[85;130H   [3;5H[85;142H5[3;5H[?25h[?25l[85;130H~@k[3;5H[85;130H   [3;6H[85;142H6[3;6H[?25h[?25l[85;130H~@k[3;6H[85;130H   [3;7H[85;142H7[3;7H[?25h[?25l[85;130H~@k[3;7H[85;130H   [3;8H[46m([9C)[m[85;142H8[3;8H[?25h[?25l[85;130H~@k[3;8H[85;130H   [3;9H([9C)[85;142H9[3;9H[?25h[?25l[85;130H~@k[3;9H[85;130H   [3;10H[85;142H10[3;10H[?25h[?25l[85;130H~@k[3;10H[85;130H   [3;11H[85;143H1[3;11H[?25h[?25l[85;130H~@k[3;11H[85;130H   [3;12H[85;143H2[3;12H[?25h[?25l[85;130H~@k[3;12H[85;130H   [3;13H[85;143H3[3;13H[?25h[?25l[85;130H~@k[3;13H[85;130H   [3;14H[85;143H4[3;14H[?25h[?25l[85;130H~@k[3;14H[85;130H   [3;15H[85;143H5[3;15H[?25h[?25l[85;130H~@k[3;15H[85;130H   [3;16H[85;143H6[3;16H[?25h[?25l[85;130H~@k[3;16H[85;130H   [3;17H[85;143H7[3;17H[?25h[?25l[85;130H~@k[3;17H[85;130H   [3;18H[3;8H[46m([9C)[m[85;143H8[3;18H[?25h[?25l[85;130H~@k[3;18H[85;130H   [3;19H[3;8H([9C)[85;143H9[3;19H[?25h[?25l[85;130H~@k[3;19H[85;130H   [3;20H[85;142H20[3;20H[?25h[?25l[85;130H~@k[3;20H[85;130H   [3;20H[?25h[?25l[85;130H~@k[3;20H[85;130H   [3;20H[?25h[?25l[85;130H~@k[3;20H[85;130H   [3;19H[85;142H19[3;19H[?25h[?25l[85;130Ha[3;19H[85;130H [3;20H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H3,20[10CAll[3;20H[?25h[?25l[3;8H[46m([9C)[m[85;142H19[3;19H[?25h[?25l[46m/[m,[3;20H[K[3;8H([9C/[85;143H8[3;18H[?25h[?25l[36m][m/,[85;143H9[3;19H[?25h[?25l[85;143H8[3;18H[?25h[?25l[85;143H7[3;17H[?25h[?25l[85;143H6[3;16H[?25h[?25l[85;143H5[3;15H[?25h[?25l[85;143H4[3;14H[?25h[?25l[85;143H3[3;13H[?25h[?25l[85;143H2[3;12H[?25h[?25l[85;143H1[3;11H[?25h[?25l[85;143H0[3;10H[?25h[?25l[85;142H9 [3;9H[?25h[?25la-z|A-Z|_[36m][m/,[3;20H[K[85;142H8[3;8H[?25h[?25l[36m[[ma-z|A-Z|_[36m][m/,[3;8H[36m[46m[[9C][m[85;142H9[3;9H[?25h[?25l[36m[[9C][m[85;142H10[3;10H[?25h[?25l[85;143H1[3;11H[?25h[?25l[85;143H2[3;12H[?25h[?25l[85;143H3[3;13H[?25h[?25l[85;143H4[3;14H[?25h[?25l[85;143H5[3;15H[?25h[?25l[85;143H6[3;16H[?25h[?25l[85;143H7[3;17H[?25h[?25l[3;8H[36m[46m[[9C][m[85;143H8[3;18H[?25h[?25l[85;143H9[3;19H[?25h[?25l[36m\[m/,[3;8H[36m[[9C][m[85;142H20[3;20H[?25h[?25lw/,[85;143H1[3;21H[?25h[?25l+/,[85;143H2[3;22H[?25h[85;1H[K[3;21H[?25l[85;130H^[[3;21H[85;130H  [3;22H[85;140H3,21[10CAll[3;21H[?25h[?25l[85;130H:[3;21H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex2.mjs" 6L, 183C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1tc
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ lear
bash: lear: command not found
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ lear[K[K[K[Kclear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear[1Plearvim lex2.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex2.mjs" 6L, 183C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  ID: /[36m[[ma-z|A-Z|_[36m]\[mw+/,
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
[36m}[m;
[1m[34m~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H3,21[10CAll[3;21H[?25h[?1000l[?1002h[?25l[85;130H^[[3;21H[85;130H  [3;21H[85;130H^[[3;21H[85;130H  [3;21H[?25h[?25l[85;130H:[3;21H[85;1H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ vim lex2.mjs [8Pclear[1Plearvim lex2.mjs [17@./lexer.mjs lex2.mjs data.txt[C
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ q!
bash: q!: command not found
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ cp lex2.mjs lex3.mjs
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ls
data.txt  lex1.mjs  lex2.mjs  lex3.mjs	lexer.mjs  table-lexer.mjs
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ vim lex3.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex3.mjs" 6L, 183C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  ID: /[36m[[ma-z|A-Z|_[36m]\[mw+/,
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
[36m}[m;
[1m[34m~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H1,1[11CAll[1;1H[?25h[?1000l[?1002h[?25l[85;130H~@k[1;1H[85;130H   [2;1H[85;140H2[2;1H[?25h[?25l[85;130H~@k[2;1H[85;130H   [3;1H[85;140H3[3;1H[?25h[?25l[85;130H~@k[3;1H[85;130H   [3;2H[85;142H2[3;2H[?25h[?25l[85;130H~@k[3;2H[85;130H   [3;3H[85;142H3[3;3H[?25h[?25l[85;130H^M[3;3H[85;130H  [4;3H[85;140H4[4;3H[?25h[?25l[85;130H~@k[4;3H[85;130H   [3;3H[85;140H3[3;3H[?25h[?25l[85;130Ha[3;3H[85;130H [3;4H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H3,4[11CAll[3;4H[?25h[?25l[85;142H3[3;3H[?25h[?25l[4;84r[4;1H[L[1;85r[3;3H[K[4;9HID: /[36m[[ma-z|A-Z|_[36m]\[mw+/,[85;140H[K[85;140H4,2-9[9CAll[4;9H[?25h[?25lID: /[36m[[ma-z|A-Z|_[36m]\[mw+/,[4;22H[K[85;142H1  [4;1H[?25h[?25l ID: /[36m[[ma-z|A-Z|_[36m]\[mw+/,[85;142H2[4;2H[?25h[?25l ID: /[36m[[ma-z|A-Z|_[36m]\[mw+/,[85;142H3[4;3H[?25h[?25l[85;140H3[3;3H[?25h[?25l$[85;142H4[3;4H[?25h[?25lI[85;142H5[3;5H[?25h[?25lg[85;142H6[3;6H[?25h[?25ln[85;142H7[3;7H[?25h[?25lm[85;142H8[3;8H[?25h[?25l[3;7H[K[85;142H7[3;7H[?25h[?25lo[85;142H8[3;8H[?25h[?25lr[85;142H9[3;9H[?25h[?25le[85;142H10[3;10H[?25h[?25l:[85;143H1[3;11H[?25h[?25l[85;143H2[3;12H[?25h[?25l/[85;143H3[3;13H[?25h[?25l[36m\[m[85;143H4[3;14H[?25h[?25l/[85;143H5[3;15H[?25h[?25l[3;14H[K[85;143H4[3;14H[?25h[?25l[3;13H[K[85;143H3[3;13H[?25h[?25l[36m[[m[85;143H4[3;14H[?25h[?25l/[85;143H5[3;15H[?25h[?25l[3;14H[K[85;143H4[3;14H[?25h[?25l[36m\[m[85;143H5[3;15H[?25h[?25l/[85;143H6[3;16H[?25h[?25l[36m\[m[85;143H7[3;17H[?25h[?25l/[85;143H8[3;18H[?25h[?25l[36m][m[36m[46m[[4C][m[85;143H9[3;19H[?25h[?25l,[3;13H[36m[[4C][m[85;142H20[3;20H[?25h[85;1H[K[3;19H[?25l[85;130H^[[3;19H[85;130H  [3;20H[85;140H3,19[10CAll[3;19H[?25h[?25l[85;130H:[3;19H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex3.mjs" 7L, 203C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clearvim lex3.mjs ls[Kcp lex2.mjs lex3.mjslear[K[3Pq!./lexer.mjs lex2.mjs data.txt [1P[1@3
SyntaxError: Invalid regular expression: missing /
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt clear[Kvim lex3.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex3.mjs" 7L, 203C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  $Ignore: /[36m[\[m/[36m\[m/[36m][m,
  ID: /[36m[[ma-z|A-Z|_[36m]\[mw+/,
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
[36m}[m;
[1m[34m~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H3,19[10CAll[3;19H[?25h[?1000l[?1002h[?25l[85;130H~@k[3;19H[85;130H   [3;19H[?25h[?25l[85;130H~@k[3;19H[85;130H   [3;18H[36m[46m[[4C][m[85;143H8[3;18H[?25h[?25l[85;130H~@k[3;18H[85;130H   [3;19H[36m[[4C][m[85;143H9[3;19H[?25h[?25l[85;130Ha[3;19H[85;130H [3;20H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H3,20[10CAll[3;20H[?25h[?25l[3;13H[36m[46m[[4C][m[85;142H19[3;19H[?25h[?25l/,[3;13H[36m[[4C][m[85;142H20[3;20H[?25h[85;1H[K[3;19H[?25l[85;130H^[[3;19H[85;130H  [3;20H[85;140H3,19[10CAll[3;19H[?25h[?25l[85;130H:[3;19H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex3.mjs" 7L, 204C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clearvim lex3.mjs [17@./lexer.mjs lex3.mjs data.txt[C
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt clear[Kvim lex3.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex3.mjs" 7L, 204C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  $Ignore: /[36m[\[m/[36m\[m/[36m][m/,
  ID: /[36m[[ma-z|A-Z|_[36m]\[mw+/,
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
[36m}[m;
[1m[34m~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H3,19[10CAll[3;19H[?25h[?1000l[?1002h[?25l[85;130H~@k[3;19H[85;130H   [3;18H[36m[46m[[4C][m[85;143H8[3;18H[?25h[?25l[85;130H~@k[3;18H[85;130H   [3;19H[36m[[4C][m[85;143H9[3;19H[?25h[?25l[85;130H~@k[3;19H[85;130H   [3;18H[36m[46m[[4C][m[85;143H8[3;18H[?25h[?25l[85;130Ha[3;18H[85;130H [3;19H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H3,19[10CAll[3;19H[?25h[?25l[85;143H8[3;18H[?25h[?25l[36m][m[46m/[m,[3;20H[K[3;17H[36m[46m][m/[85;143H7[3;17H[?25h[?25l[36m][m[46m/[m,[3;19H[K[3;16H[36m[46m][m/[85;143H6[3;16H[?25h[?25l[36m][m[46m/[m,[3;18H[K[3;15H[36m[46m][m/[85;143H5[3;15H[?25h[?25l[36m][m[46m/[m,[3;17H[K[3;14H[36m[46m][m/[85;143H4[3;14H[?25h[?25l[85;143H5[3;15H[?25h[?25l[46m/[m,[3;16H[K[3;13H[36m[[m/[85;143H4[3;14H[?25h[?25l[34m//,[m[3;15H[K[85;143H3[3;13H[?25h[?25l/(/,[85;143H4[3;14H[?25h[?25l[34m//,[m[3;15H[K[85;143H3[3;13H[?25h[?25l/[36m[[m/,[85;143H4[3;14H[?25h[?25l[36m\[m/,[85;143H5[3;15H[?25h[?25l[34m//,[m[85;143H6[3;16H[?25h[?25l/[36m][m/,[36m[46m[[2C][m[85;143H7[3;17H[?25h[?25l[36m[[m/,[3;13H[36m[\[m/[36m][m[85;143H8[3;18H[?25h[?25l[36m\[m/,[85;143H9[3;19H[?25h[?25l[34m//,[m[85;142H20[3;20H[?25h[?25l/[36m][m/,[36m[46m[[2C][m[85;143H1[3;21H[?25h[85;1H[K[3;20H[?25l[85;130H^[[3;20H[85;130H  [3;21H[85;140H3,20[10CAll[3;20H[?25h[?25l[85;130H:[3;20H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex3.mjs" 7L, 206C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ vim lex3.mjs [17@./lexer.mjs lex3.mjs data.txt[C
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pvim lex3.mjs[C[17@./lexer.mjs lex3.mjs data.txt[C[17Pvim lex3.mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex3.mjs" 7L, 206C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m
  $Ignore: /[36m[\[m/[36m][m[36m[46m[[m[36m\[m/[36m[46m][m/,
  ID: /[36m[[ma-z|A-Z|_[36m]\[mw+/,
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
[36m}[m;
[1m[34m~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H3,20[10CAll[3;20H[?25h[?1000l[?1002h[?25l[85;130H~@k[3;20H[85;130H   [3;21H[36m[\[m/[36m][m[85;143H1[3;21H[?25h[?25l[85;142H14[3;14H[?25h[?25l[85;130HA[3;14H[85;130H [3;23H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H3,23[10CAll[3;23H[?25h[?25l[85;143H2[3;22H[?25h[?25l[36m[46m[[2C][m[85;143H1[3;21H[?25h[?25l[85;143H0[3;20H[?25h[?25l[36m[\[m/[36m][m[85;142H19[3;19H[?25h[?25l[36m[46m[[2C][m[85;143H8[3;18H[?25h[?25l[85;143H7[3;17H[?25h[?25l[36m[46m[[2C][m[36m[\[m/[36m][m[85;143H6[3;16H[?25h[?25l[36m[\[m/[36m][m[85;143H5[3;15H[?25h[?25l[36m[46m[[2C][m[85;143H4[3;14H[?25h[?25l[36m[\[m/[36m][m[85;143H5[3;15H[?25h[?25l[36m[46m[[2C][m[85;143H4[3;14H[?25h[?25lA[36m\[m[46m/[m[36m][\[m/[36m][m/,[3;13H[36m[[m[2C/[85;143H5[3;15H[?25h[?25l[36m\[m/[36m][\[m/[36m][m/,[3;23H[K[3;13H[36m[46m[[2C][m[85;143H4[3;14H[?25h[?25l^[36m\[m[46m/[m[36m][\[m/[36m][m/,[3;13H[36m[[m[2C/[85;143H5[3;15H[?25h[?25l[85;143H6[3;16H[?25h[?25l[36m[46m[[3C][m[85;143H7[3;17H[?25h[?25l[36m[[3C][m[36m[46m[[2C][m[85;143H8[3;18H[?25h[?25l[85;143H9[3;19H[?25h[?25l^[36m\[m[46m/[m[36m][m/,[3;18H[36m[[m[2C/[85;142H20[3;20H[?25h[?25l[85;143H1[3;21H[?25h[?25l[36m[46m[[3C][m[85;143H2[3;22H[?25h[?25l[85;143H3[3;23H[?25h[?25l[36m[[3C][m[85;143H4[3;24H[?25h[?25l[36m[46m[[3C][m[85;143H3[3;23H[?25h[?25l[36m[[3C][m[85;143H4[3;24H[?25h[?25la,[85;143H5[3;25H[?25h[?25l,[3;25H[K[85;143H4[3;24H[?25h[?25l,[3;24H[K[3;18H[36m[46m[[3C][m[85;143H3[3;23H[?25h[?25l[46m,[m[3;23H[K[3;18H[36m[[m[3C,[85;143H2[3;22H[?25h[?25l,[3;22H[K[85;143H1[3;21H[?25h[?25l,[3;21H[K[85;143H0[3;20H[?25h[?25l,[3;20H[K[85;142H19[3;19H[?25h[?25l,[3;19H[K[3;13H[36m[46m[[3C][m[85;143H8[3;18H[?25h[?25l[46m,[m[3;18H[K[3;13H[36m[[m[3C,[85;143H7[3;17H[?25h[?25l,[3;17H[K[85;143H6[3;16H[?25h[?25l,[3;16H[K[85;143H5[3;15H[?25h[?25l,[3;15H[K[85;143H4[3;14H[?25h[?25l,[3;14H[K[85;143H3[3;13H[?25h[?25l,[3;13H[K[85;143H2[3;12H[?25h[?25l,[3;12H[K[85;143H1[3;11H[?25h[?25l,[3;11H[K[85;143H0[3;10H[?25h[?25l,[3;10H[K[85;142H9 [3;9H[?25h[?25l,[3;9H[K[85;142H8[3;8H[?25h[?25l,[3;8H[K[85;142H7[3;7H[?25h[?25l,[3;7H[K[85;142H6[3;6H[?25h[?25l,[3;6H[K[85;142H5[3;5H[?25h[?25l,[3;5H[K[85;142H4[3;4H[?25h[?25l,[3;4H[K[85;142H3[3;3H[?25h[?25l,[3;3H[K[85;142H2[3;2H[?25h[?25l[85;142H3[3;3H[?25h[?25l[3;2H[K[85;142H2[3;2H[?25h[?25l[85;142H1[3;1H[?25h[?25l[2;84r[84;1H
[1;85r[2;3H$Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m[84;1H[1m[34m~                                                                                                                                                            [m[85;140H[K[85;140H2,43[10CAll[2;43H[?25h[?25l[3;84r[3;1H[L[1;85r[85;140H[K[85;140H3,2-9[9CAll[3;9H[?25h[?25l[85;142H1  [3;1H[?25h[?25l[85;142H2[3;2H[?25h[?25l[85;142H3[3;3H[?25h[?25l$[85;142H4[3;4H[?25h[?25lI[85;142H5[3;5H[?25h[?25lg[85;142H6[3;6H[?25h[?25ln[85;142H7[3;7H[?25h[?25lo[85;142H8[3;8H[?25h[?25lr[85;142H9[3;9H[?25h[?25le[85;142H10[3;10H[?25h[?25l:[85;143H1[3;11H[?25h[?25l[85;143H2[3;12H[?25h[?25l/[85;143H3[3;13H[?25h[?25l[34m//[m[85;143H4[3;14H[?25h[?25l[34m,[m[85;143H5[3;15H[?25h[?25l[85;143H4[3;14H[?25h[?25l[85;143H3[3;13H[?25h[?25l/[36m\[m/,[85;143H4[3;14H[?25h[?25l[34m//,[m[85;143H5[3;15H[?25h[?25l/,[3;16H[K[85;143H4[3;14H[?25h[?25l[34m//,[m[3;15H[K[85;143H3[3;13H[?25h[?25l/[36m[[m/,[85;143H4[3;14H[?25h[?25l[85;143H6[3;16H[?25h[?25l[3;15H[K[85;143H5[3;15H[?25h[?25l[3;14H[K[85;143H4[3;14H[?25h[?25l[3;13H[K[85;143H3[3;13H[?25h[?25l[3;12H[K[85;143H2[3;12H[?25h[?25l[85;143H1[3;11H[?25h[?25l[3;10H[K[85;143H0[3;10H[?25h[?25l[3;9H[K[85;142H9 [3;9H[?25h[?25l[3;8H[K[85;142H8[3;8H[?25h[?25l[3;7H[K[85;142H7[3;7H[?25h[?25l[3;6H[K[85;142H6[3;6H[?25h[?25l[3;5H[K[85;142H5[3;5H[?25h[?25l[3;4H[K[85;142H4[3;4H[?25h[?25l[3;3H[K[85;142H3[3;3H[?25h[?25l[85;142H2[3;2H[?25h[?25l[85;142H1[3;1H[?25h[?25l[2;84r[84;1H
[1;85r[2;3H$Ignore: /[36m\[ms+/,  [34m//this will be ignored.[m[84;1H[1m[34m~                                                                                                                                                            [m[85;140H[K[85;140H2,43[10CAll[2;43H[?25h[?25l[85;143H2[2;42H[?25h[?25l[85;143H1[2;41H[?25h[?25l[85;143H0[2;40H[?25h[?25l[85;142H39[2;39H[?25h[?25l[85;143H8[2;38H[?25h[?25l[85;143H7[2;37H[?25h[?25l[85;143H6[2;36H[?25h[?25l[85;143H5[2;35H[?25h[?25l[85;143H4[2;34H[?25h[?25l[85;143H3[2;33H[?25h[?25l[85;143H2[2;32H[?25h[?25l[85;143H1[2;31H[?25h[?25l[85;143H0[2;30H[?25h[?25l[85;142H29[2;29H[?25h[?25l[85;143H8[2;28H[?25h[?25l[85;143H7[2;27H[?25h[?25l[85;143H6[2;26H[?25h[?25l[85;143H5[2;25H[?25h[?25l[85;143H4[2;24H[?25h[?25l[85;143H3[2;23H[?25h[?25l[85;143H2[2;22H[?25h[?25l[85;143H1[2;21H[?25h[?25l[85;143H0[2;20H[?25h[?25l[85;142H19[2;19H[?25h[?25l[85;143H8[2;18H[?25h[?25l[85;143H7[2;17H[?25h[?25l[85;143H6[2;16H[?25h[?25l[85;143H5[2;15H[?25h[?25l[85;143H6[2;16H[?25h[?25l|/,  [1C[34m/this will be ignored.[m[85;143H7[2;17H[?25h[?25l[36m[[m/,  [1C[34m/this will be ignored.[m[85;143H8[2;18H[?25h[?25l[34m//,  //this will be ignored.[m[85;143H9[2;19H[?25h[?25l/,  [34m//this will be ignored.[m[2;45H[K[85;143H8[2;18H[?25h[?25l[36m\[m/,  [1C[34m/this will be ignored.[m[85;143H9[2;19H[?25h[?25l[34m//,  //this will be ignored.[m[85;142H20[2;20H[?25h[?25l/[36m\[m/,  [1C[34m/this will be ignored.[m[85;143H1[2;21H[?25h[?25l[34m//,  //this will be ignored.[m[85;143H2[2;22H[?25h[?25l/,  [34m//this will be ignored.[m[2;48H[K[85;143H1[2;21H[?25h[?25l[34m//,  //this will be ignored.[m[2;47H[K[85;143H0[2;20H[?25h[?25l/[36m][m/,  [1C[34m/this will be ignored.[m[2;17H[36m[46m[[2C][m[85;143H1[2;21H[?25h[?25l[36m[[m/,  [1C[34m/this will be ignored.[m[2;17H[36m[\[m/[36m][m[85;143H2[2;22H[?25h[?25l[36m\[m/,  [1C[34m/this will be ignored.[m[85;143H3[2;23H[?25h[?25l[34m//,  //this will be ignored.[m[85;143H4[2;24H[?25h[?25l/[36m][m/,  [1C[34m/this will be ignored.[m[2;21H[36m[46m[[2C][m[85;143H5[2;25H[?25h[?25l[36m[\[m/[36m][m[85;143H6[2;26H[?25h[?25l[85;143H7[2;27H[?25h[?25l[85;143H6[2;26H[?25h[?25l[36m[46m[[2C][m[85;143H5[2;25H[?25h[?25l[36m[\[m/[36m][m[85;143H6[2;26H[?25h[?25l[36m[46m[[2C][m[85;143H5[2;25H[?25h[?25l./,  [1C[34m/this will be ignored.[m[2;21H[36m[\[m/[36m][m[85;143H6[2;26H[?25h[?25l/,  [34m//this will be ignored.[m[2;52H[K[2;21H[36m[46m[[2C][m[85;143H5[2;25H[?25h[?25l(/,  [1C[34m/this will be ignored.[m[2;21H[36m[\[m/[36m][m[85;143H6[2;26H[?25h[?25l/,  [34m//this will be ignored.[m[2;52H[K[2;21H[36m[46m[[2C][m[85;143H5[2;25H[?25h[?25l[36m[[m/,  [1C[34m/this will be ignored.[m[2;21H[36m[\[m/[36m][m[85;143H6[2;26H[?25h[?25l(/,  [1C[34m/this will be ignored.[m[85;143H7[2;27H[?25h[?25l./,  [1C[34m/this will be ignored.[m[85;143H8[2;28H[?25h[?25l*/,  [1C[34m/this will be ignored.[m[85;143H9[2;29H[?25h[?25l)/,  [1C[34m/this will be ignored.[m[2;26H[46m([m.*[46m)[m[85;142H30[2;30H[?25h[?25l[34m//,  //this will be ignored.[m[2;26H(.*)[85;143H1[2;31H[?25h[?25l/g/,  [1C[34m/this will be ignored.[m[85;143H2[2;32H[?25h[?25l[36m][m/,  [1C[34m/this will be ignored.[m[2;25H[36m[46m[[m(.*)/g[36m[46m][m[85;143H3[2;33H[?25h[85;1H[K[2;32H[?25l[85;130H^[[2;32H[85;130H  [2;33H[85;140H2,32[10CAll[2;32H[?25h[?25l[85;130H:[2;32H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex3.mjs" 6L, 200C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clearvim lex3.mjs [17@./lexer.mjs lex3.mjs data.txt[C
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt clear[Kvim lex3.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex3.mjs" 6L, 200C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+|[36m[\[m/[36m][\[m/[36m][m[36m[46m[[m(.*)/g[36m[46m][m/,  [34m//this will be ignored.[m
  ID: /[36m[[ma-z|A-Z|_[36m]\[mw+/,
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
[36m}[m;
[1m[34m~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H2,32[10CAll[2;32H[?25h[?1000l[?1002h[?25l[85;130H~@k[2;32H[85;130H   [2;33H[2;25H[36m[[m(.*)/g[36m][m[85;143H3[2;33H[?25h[?25l[85;130H~@k[2;33H[85;130H   [2;32H[2;25H[36m[46m[[m(.*)/g[36m[46m][m[85;143H2[2;32H[?25h[?25l[85;130H~@k[2;32H[85;130H   [2;31H[36m[[m(.*)/g[36m][m[85;143H1[2;31H[?25h[?25l[85;130H~@k[2;31H[85;130H   [2;32H[2;25H[36m[46m[[m(.*)/g[36m[46m][m[85;143H2[2;32H[?25h[?25l[85;130H~@k[2;32H[85;130H   [2;33H[2;25H[36m[[m(.*)/g[36m][m[85;143H3[2;33H[?25h[?25l[85;130Ha[2;33H[85;130H [2;34H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H2,34[10CAll[2;34H[?25h[?25l[2;25H[36m[46m[[m(.*)/g[36m[46m][m[85;143H3[2;33H[?25h[?25l[46m/[m,  [34m//this will be ignored.[m[2;59H[K[2;25H[36m[[m(.*)/g/[85;143H2[2;32H[?25h[?25l[34m//,  //this will be ignored.[m[2;58H[K[85;143H1[2;31H[?25h[?25l/,  [34m//this will be ignored.[m[2;57H[K[2;26H[46m([m.*[46m)[m[85;143H0[2;30H[?25h[?25l[46m/[m,  [34m//this will be ignored.[m[2;56H[K[2;26H(.*/[85;142H29[2;29H[?25h[?25l/,  [34m//this will be ignored.[m[2;55H[K[85;143H8[2;28H[?25h[?25l/,  [34m//this will be ignored.[m[2;54H[K[85;143H7[2;27H[?25h[?25l/,  [34m//this will be ignored.[m[2;53H[K[85;143H6[2;26H[?25h[?25l/,  [34m//this will be ignored.[m[2;52H[K[2;21H[36m[46m[[2C][m[85;143H5[2;25H[?25h[?25l[36m[\[m/[36m][m[85;143H6[2;26H[?25h[?25l[36m[46m[[2C][m[85;143H5[2;25H[?25h[85;1H[K[2;24H[?25l[85;130H^[[2;24H[85;130H  [2;25H[85;140H2,24[10CAll[2;24H[?25h[?25l[85;130Hd[2;24H[?25h[?25l[85;131H~@k[2;24H[85;130H    [2;24H[36m[[m[1C[34m//,  //this will be ignored.[m[2;51H[K[2;24H[?25h[?25l[85;130H^[[2;24H[85;130H  [2;24H[85;130H^[[2;24H[85;130H  [2;24H[?25h[?25l[85;130Hz[2;24H[?25h[?25l[85;131Hu[2;24H[?25h[?25l[85;132H^[[2;24H[85;132H  [2;24H[85;132H^[[2;24H[85;130H    [2;24H[?25h[?25l[85;130Hu[2;24H[85;1H1 change; before #2  8 seconds ago[85;130H[K[2;24H[36m[46m[[m[1C/[36m[46m][m/,  [1C[34m/this will be ignored.[m[85;140H2,24[10CAll[85;140H[K[85;140H2,24[10CAll[2;24H[?25h[?25l[85;130Hu[2;24H[85;19H1  18 seconds ago[85;130H[K[2;33H[2;21H[36m[\[m/[36m][[m(.*)/g[36m][m/,  [34m//this will be ignored.[m[85;140H2,33[10CAll[85;140H[K[85;140H2,33[10CAll[2;33H[?25h[?25l[85;130H~@k[2;33H[85;130H   [2;32H[2;25H[36m[46m[[m(.*)/g[36m[46m][m[85;143H2[2;32H[?25h[?25l[85;130H~@k[2;32H[85;130H   [2;33H[2;25H[36m[[m(.*)/g[36m][m[85;143H3[2;33H[?25h[?25l[85;130Ha[2;33H[85;130H [2;34H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H2,34[10CAll[2;34H[?25h[?25l[2;25H[36m[46m[[m(.*)/g[36m[46m][m[85;143H3[2;33H[?25h[?25l*/,  [1C[34m/this will be ignored.[m[2;25H[36m[[m(.*)/g[36m][m[85;143H4[2;34H[?25h[?25l[85;143H5[2;35H[?25h[?25l[85;143H4[2;34H[?25h[85;1H[K[2;33H[?25l[85;130H^[[2;33H[85;130H  [2;34H[85;140H2,33[10CAll[2;33H[?25h[?25l[85;130H:[2;33H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex3.mjs" 6L, 201C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clearvim lex3.mjs [17@./lexer.mjs lex3.mjs data.txt[C
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt clear[Kvim lex3.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex3.mjs" 6L, 201C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+|[36m[\[m/[36m][\[m/[36m][[m(.*)/g[36m][m*/,  [34m//this will be ignored.[m
  ID: /[36m[[ma-z|A-Z|_[36m]\[mw+/,
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
[36m}[m;
[1m[34m~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H2,33[10CAll[2;33H[?25h[?1000l[?1002h[?25l[85;130H~@k[2;33H[85;130H   [2;34H[85;143H4[2;34H[?25h[?25l[85;130H~@k[2;34H[85;130H   [2;33H[85;143H3[2;33H[?25h[?25l[85;130H~@k[2;33H[85;130H   [2;34H[85;143H4[2;34H[?25h[?25l[85;130H~@k[2;34H[85;130H   [2;33H[85;143H3[2;33H[?25h[?25l[85;130H~@k[2;33H[85;130H   [2;34H[85;143H4[2;34H[?25h[?25l[85;130H~@k[2;34H[85;130H   [2;33H[85;143H3[2;33H[?25h[?25l[85;130H~@k[2;33H[85;130H   [2;34H[85;143H4[2;34H[?25h[?25l[85;130H~@k[2;34H[85;130H   [2;33H[85;143H3[2;33H[?25h[?25l[85;130Ha[2;33H[85;130H [2;34H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H2,34[10CAll[2;34H[?25h[?25l[2;25H[36m[46m[[m(.*)/g[36m[46m][m[85;143H3[2;33H[?25h[?25l[2;25H[36m[[m(.*)/g[36m][m[85;143H4[2;34H[?25h[?25l[2;25H[36m[46m[[m(.*)/g[36m[46m][m[85;143H3[2;33H[?25h[?25l[85;143H2[2;32H[?25h[?25l[36m][m[46m*[m/,  [34m//this will be ignored.[m[2;60H[K[2;31H[36m[46m][m*[85;143H1[2;31H[?25h[?25l[36m][m[46m*[m/,  [34m//this will be ignored.[m[2;59H[K[2;30H[36m[46m][m*[85;143H0[2;30H[?25h[?25l[85;143H1[2;31H[?25h[?25l[85;143H0[2;30H[?25h[?25l[36m[[m[46m([m.*[46m)[m[36m][m[85;142H29[2;29H[?25h[?25l)[36m[46m][m*/,  [34m//this will be ignored.[m[2;58H[K[2;28H[46m)[m[36m][m[85;143H8[2;28H[?25h[?25l[36m[46m[[m(.)[36m[46m][m[85;143H9[2;29H[?25h[?25l[36m][m[46m*[m/,  [34m//this will be ignored.[m[2;57H[K[2;28H[36m[46m][m*[85;143H8[2;28H[?25h[?25l[36m[[m(.[36m][m[85;143H7[2;27H[?25h[?25l.[36m][m*/,  [34m//this will be ignored.[m[2;56H[K[2;25H[36m[46m[[m.[36m[46m][m[85;143H6[2;26H[?25h[85;1H[K[2;25H[?25l[85;130H^[[2;25H[85;130H  [2;26H[85;140H2,25[10CAll[2;25H[?25h[?25l[85;130H:[2;25H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex3.mjs" 6L, 196C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clearvim lex3.mjs [17@./lexer.mjs lex3.mjs data.txt[C
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt clear[Kvim lex3.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lex3.mjs" 6L, 196C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[33mexport[m [33mdefault[m [36m{[m
  $Ignore: /[36m\[ms+|[36m[\[m/[36m][\[m/[36m][m[36m[46m[[m.[36m[46m][m*/,  [34m//this will be ignored.[m
  ID: /[36m[[ma-z|A-Z|_[36m]\[mw+/,
  INT: /[36m\[md+/,      [34m//token with kind INT        [m
  CHAR: /./,[7C[34m//single char: must be last[m
[36m}[m;
[1m[34m~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H2,25[10CAll[2;25H[?25h[?1000l[?1002h[?25l[85;130H~@k[2;25H[85;130H   [2;26H[36m[[m.[36m][m[85;143H6[2;26H[?25h[?25l[85;130H~@k[2;26H[85;130H   [2;27H[36m[46m[[m.[36m[46m][m[85;143H7[2;27H[?25h[?25l[85;130H~@k[2;27H[85;130H   [2;28H[36m[[m.[36m][m[85;143H8[2;28H[?25h[?25l[85;130H~@k[2;28H[85;130H   [2;29H[85;143H9[2;29H[?25h[?25l[85;130H~@k[2;29H[85;130H   [2;30H[85;142H30[2;30H[?25h[?25l[85;130H~@k[2;30H[85;130H   [2;31H[85;143H1[2;31H[?25h[?25l[85;130H~@k[2;31H[85;130H   [2;32H[85;143H2[2;32H[?25h[?25l[85;130H~@k[2;32H[85;130H   [2;33H[85;143H3[2;33H[?25h[?25l[85;130H~@k[2;33H[85;130H   [2;34H[85;143H4[2;34H[?25h[?25l[85;130H~@k[2;34H[85;130H   [2;35H[85;143H5[2;35H[?25h[?25l[85;130H~@k[2;35H[85;130H   [2;36H[85;143H6[2;36H[?25h[?25l[85;130H~@k[2;36H[85;130H   [2;37H[85;143H7[2;37H[?25h[?25l[85;130H~@k[2;37H[85;130H   [2;38H[85;143H8[2;38H[?25h[?25l[85;130H~@k[2;38H[85;130H   [2;39H[85;143H9[2;39H[?25h[?25l[85;130H~@k[2;39H[85;130H   [2;40H[85;142H40[2;40H[?25h[?25l[85;130H~@k[2;40H[85;130H   [2;41H[85;143H1[2;41H[?25h[?25l[85;130H~@k[2;41H[85;130H   [2;42H[85;143H2[2;42H[?25h[?25l[85;130H~@k[2;42H[85;130H   [2;43H[85;143H3[2;43H[?25h[?25l[85;130H~@k[2;43H[85;130H   [2;44H[85;143H4[2;44H[?25h[?25l[85;130H~@k[2;44H[85;130H   [2;45H[85;143H5[2;45H[?25h[?25l[85;130H~@k[2;45H[85;130H   [2;46H[85;143H6[2;46H[?25h[?25l[85;130H~@k[2;46H[85;130H   [2;47H[85;143H7[2;47H[?25h[?25l[85;130H~@k[2;47H[85;130H   [2;48H[85;143H8[2;48H[?25h[?25l[85;130H~@k[2;48H[85;130H   [2;49H[85;143H9[2;49H[?25h[?25l[85;130H~@k[2;49H[85;130H   [2;50H[85;142H50[2;50H[?25h[?25l[85;130H~@k[2;50H[85;130H   [2;51H[85;143H1[2;51H[?25h[?25l[85;130H~@k[2;51H[85;130H   [2;52H[85;143H2[2;52H[?25h[?25l[85;130H~@k[2;52H[85;130H   [2;53H[85;143H3[2;53H[?25h[?25l[85;130H~@k[2;53H[85;130H   [2;52H[85;143H2[2;52H[?25h[?25l[85;130H~@k[2;52H[85;130H   [2;51H[85;143H1[2;51H[?25h[?25l[85;130H~@k[2;51H[85;130H   [2;50H[85;143H0[2;50H[?25h[?25l[85;130H~@k[2;50H[85;130H   [2;49H[85;142H49[2;49H[?25h[?25l[85;130H~@k[2;49H[85;130H   [2;48H[85;143H8[2;48H[?25h[?25l[85;130H~@k[2;48H[85;130H   [2;47H[85;143H7[2;47H[?25h[?25l[85;130H~@k[2;47H[85;130H   [2;46H[85;143H6[2;46H[?25h[?25l[85;130H~@k[2;46H[85;130H   [2;45H[85;143H5[2;45H[?25h[?25l[85;130H~@k[2;45H[85;130H   [2;44H[85;143H4[2;44H[?25h[?25l[85;130H~@k[2;44H[85;130H   [2;43H[85;143H3[2;43H[?25h[?25l[85;130H~@k[2;43H[85;130H   [2;42H[85;143H2[2;42H[?25h[?25l[85;130H~@k[2;42H[85;130H   [2;41H[85;143H1[2;41H[?25h[?25l[85;130H~@k[2;41H[85;130H   [2;40H[85;143H0[2;40H[?25h[?25l[85;130H~@k[2;40H[85;130H   [2;39H[85;142H39[2;39H[?25h[?25l[85;130H~@k[2;39H[85;130H   [2;38H[85;143H8[2;38H[?25h[?25l[85;130H~@k[2;38H[85;130H   [2;37H[85;143H7[2;37H[?25h[?25l[85;130H~@k[2;37H[85;130H   [2;36H[85;143H6[2;36H[?25h[?25l[85;130H~@k[2;36H[85;130H   [2;35H[85;143H5[2;35H[?25h[?25l[85;130H~@k[2;35H[85;130H   [2;34H[85;143H4[2;34H[?25h[?25l[85;130H~@k[2;34H[85;130H   [2;33H[85;143H3[2;33H[?25h[?25l[85;130H~@k[2;33H[85;130H   [2;32H[85;143H2[2;32H[?25h[?25l[85;130H~@k[2;32H[85;130H   [2;31H[85;143H1[2;31H[?25h[?25l[85;130H~@k[2;31H[85;130H   [2;30H[85;143H0[2;30H[?25h[?25l[85;130H~@k[2;30H[85;130H   [2;29H[85;142H29[2;29H[?25h[?25l[85;130H~@k[2;29H[85;130H   [2;28H[85;143H8[2;28H[?25h[?25l[85;130H~@k[2;28H[85;130H   [2;27H[36m[46m[[m.[36m[46m][m[85;143H7[2;27H[?25h[?25l[85;130H~@k[2;27H[85;130H   [2;26H[36m[[m.[36m][m[85;143H6[2;26H[?25h[?25l[85;130H~@k[2;26H[85;130H   [2;27H[36m[46m[[m.[36m[46m][m[85;143H7[2;27H[?25h[?25l[36m[[m.[36m][m[85;140H6,2 [6;2H[?25h[?25l[85;140H2,28[2;28H[?25h[?25l[85;130H~@k[2;28H[85;130H   [2;27H[36m[46m[[m.[36m[46m][m[85;143H7[2;27H[?25h[?25l[85;130H~@k[2;27H[85;130H   [2;28H[36m[[m.[36m][m[85;143H8[2;28H[?25h[?25l[85;130Ha[2;28H[85;130H [2;29H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H2,29[10CAll[2;29H[?25h[?25l[36m[46m[[m.[36m[46m][m[85;143H8[2;28H[?25h[?25l[46m*[m/,  [34m//this will be ignored.[m[2;55H[K[2;25H[36m[[m.*[85;143H7[2;27H[?25h[?25l[85;143H6[2;26H[?25h[?25l.*/,  [34m//this will be ignored.[m[2;54H[K[2;21H[36m[46m[[2C][m[85;143H5[2;25H[?25h[?25l[36m[\[m/[36m][m[85;143H6[2;26H[?25h[?25l[85;143H7[2;27H[?25h[85;1H[K[2;26H[?25l[85;130H^[[2;26H[85;130H  [2;27H[85;140H2,26[10CAll[2;26H[?25h[?25l[85;130H:[2;26H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lex3.mjs" 6L, 194C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clearvim lex3.mjs [17@./lexer.mjs lex3.mjs data.txt[C
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ x
bash: x: command not found
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ :x[K[Kx
bash: x: command not found
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/regex$ clearx[K./lexer.mjs lex3.mjs data.txt x[Kclear[Kcd ..
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises$ cd lexer/
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ ls
data.txt  lexer.mjs  lexer.py
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py
usage: ./lexer.py DATA_FILE
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt \[K
Token(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='A', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='I', lexeme='I')
Token(kind='D', lexeme='D')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='44')
Token(kind='/', lexeme='/')
Token(kind='/', lexeme='/')
Token(kind='a', lexeme='a')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='f', lexeme='f')
Token(kind='s', lexeme='s')
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ vim l[Klexer.py 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lexer.py" 57L, 1633C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple

[34m#Using the next_match() function provides a workaround for the fact
#that Python 3.7 does not support assignment expressions.  In fact,
#the clumsy nested if-then-else handling in exactly this situation of
#regex matching is cited as part of the rationale for the recent
#addition of assignment expressions using the `:=` walrus operator to
#Python 3.8.
#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>


#returns pair containing regex match-object and token kind.  If token
#should be ignored, kind should be returned as None.
#note that m.group() gives lexeme after a successful match[m
[33mdef[m [36mnext_match[m(text):
    m = re.compile([31mr'\s+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [36mNone[m)  [34m#None kind means ignore[m[23;5Hm = re.compile([31mr'\d+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[26;5Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m
    [33mif[m (m): [33mreturn[m (m, m.group())


[33mdef[m [36mscan[m(text):
    tokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[33;9H(match, kind) = next_match(text)[34;9Hlexeme = match.group()[35;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[36;9Htext = text[[36mlen[m(lexeme):]
    [33mreturn[m tokens

[33mdef[m [36mmain[m():
    [33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    tokens = scan(contents)
    [33mfor[m t [33min[m tokens: [36mprint[m(t)

[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[47;9Hcontent = [36mfile[m.read()
    [33mreturn[m content

Token = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():
    [36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)

[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H1,1[11CAll[1;1H[?25h[?1000l[?1002h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[27;20H[46m([12C)[m[85;140H27,33[27;33H[?25h[?25l[85;130H^[[27;33H[85;130H  [27;33H[85;130H^[[27;33H[85;130H  [27;33H[?25h[?25l[85;130H:[27;33H[85;1H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ vim lexer.py [7@./lexer.py data.txt[C[K data.txt [7Pvim lexer.py[C[7@./lexer.py data.txt[C[7Pvim lexer.py[C[Kvim lexer.py 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lexer.py" 57L, 1633C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple

[34m#Using the next_match() function provides a workaround for the fact
#that Python 3.7 does not support assignment expressions.  In fact,
#the clumsy nested if-then-else handling in exactly this situation of
#regex matching is cited as part of the rationale for the recent
#addition of assignment expressions using the `:=` walrus operator to
#Python 3.8.
#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>


#returns pair containing regex match-object and token kind.  If token
#should be ignored, kind should be returned as None.
#note that m.group() gives lexeme after a successful match[m
[33mdef[m [36mnext_match[m(text):
    m = re.compile([31mr'\s+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [36mNone[m)  [34m#None kind means ignore[m[23;5Hm = re.compile([31mr'\d+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[26;5Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m
    [33mif[m (m): [33mreturn[m [46m([mm, m.group()[46m)[m


[33mdef[m [36mscan[m(text):
    tokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[33;9H(match, kind) = next_match(text)[34;9Hlexeme = match.group()[35;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[36;9Htext = text[[36mlen[m(lexeme):]
    [33mreturn[m tokens

[33mdef[m [36mmain[m():
    [33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    tokens = scan(contents)
    [33mfor[m t [33min[m tokens: [36mprint[m(t)

[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[47;9Hcontent = [36mfile[m.read()
    [33mreturn[m content

Token = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():
    [36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)

[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H27,33[9CAll[27;33H[?25h[?1000l[?1002h[?25l[85;130H~@k[27;33H[85;130H   [28;1H[27;20H([12C)[85;141H8,0-1[28;1H[?25h[?25l[85;130H~@k[28;1H[85;130H   [27;33H[27;20H[46m([12C)[m[85;141H7,33 [27;33H[?25h[?25l[85;130H~@k[27;33H[85;130H   [28;1H[27;20H([12C)[85;141H8,0-1[28;1H[?25h[?25l[85;130H~@k[28;1H[85;130H   [29;1H[85;141H9[29;1H[?25h[?25l[85;130H~@k[29;1H[85;130H   [30;15H[85;140H30,15 [30;15H[?25h[?25l[85;130H~@k[30;15H[85;130H   [31;15H[46m[][m[85;141H1[31;15H[?25h[?25l[85;130H~@k[31;15H[85;130H   [32;26H[31;14H[][85;141H2,26[32;26H[?25h[?25l[85;130H~@k[32;26H[85;130H   [33;33H[85;141H3,33[33;33H[?25h[?25l[85;130H~@k[33;33H[85;130H   [34;30H[46m()[m[85;141H4,30[34;30H[?25h[?25l[85;130H~@k[34;30H[85;130H   [35;33H[34;29H()[35;33H[46m([19C)[m[85;141H5,33[35;33H[?25h[?25l[85;130H~@k[35;33H[85;130H   [36;33H[35;33H([19C)[36;20H[46m[[12C][m[85;141H6[36;33H[?25h[?25l[85;130H~@k[36;33H[85;130H   [37;17H[36;20H[[12C][85;141H7,17[37;17H[?25h[?25l[85;130H~@k[37;17H[85;130H   [38;1H[85;141H8,0-1[38;1H[?25h[?25l[85;130H~@k[38;1H[85;130H   [39;11H[85;141H9,11 [39;11H[?25h[?25l[85;130H~@k[39;11H[85;130H   [40;33H[85;140H40,33[40;33H[?25h[?25l[85;130H~@k[40;33H[85;130H   [41;33H[46m[[1C][m[85;141H1[41;33H[?25h[?25l[85;130H~@k[41;33H[85;130H   [42;27H[41;33H[[1C][42;18H[46m([8C)[m[85;141H2,27[42;27H[?25h[?25l[85;130H~@k[42;27H[85;130H   [42;27H[?25h[?25l[85;130H~@k[42;27H[85;130H   [43;29H[42;18H([8C)[43;27H[46m([mt[46m)[m[85;141H3,29[43;29H[?25h[?25l[85;130H~@k[43;29H[85;130H   [42;27H[42;18H[46m([8C)[m[43;27H(t)[85;141H2,27[42;27H[?25h[?25l[85;130H~@k[42;27H[85;130H   [43;29H[42;18H([8C)[43;27H[46m([mt[46m)[m[85;141H3,29[43;29H[?25h[?25l[85;130H~@k[43;29H[85;130H   [42;27H[42;18H[46m([8C)[m[43;27H(t)[85;141H2,27[42;27H[?25h[?25l[85;130H~@k[42;27H[85;130H   [43;29H[42;18H([8C)[43;27H[46m([mt[46m)[m[85;141H3,29[43;29H[?25h[?25l[85;130H~@k[43;29H[85;130H   [42;27H[42;18H[46m([8C)[m[43;27H(t)[85;141H2,27[42;27H[?25h[?25l[85;130Ha[42;27H[85;130H [42;28H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H42,28[9CAll[42;28H[?25h[?25l[43;84r[43;1H[L[1;85r[85;140H[K[85;140H43,5[10CAll[42;18H([8C)
    [?25h[?25lp[85;143H6[43;6H[?25h[?25lr[85;143H7[43;7H[?25h[?25li[85;143H8[43;8H[?25h[?25ln[85;143H9[43;9H[?25h[?25l[36mprint[m[85;143H10[43;10H[?25h[?25l[85;144H1[43;11H[?25h[?25lr[85;144H2[43;12H[?25h[?25lo[85;144H3[43;13H[?25h[?25l[43;12H[K[85;144H2[43;12H[?25h[?25l[43;11H[K[85;144H1[43;11H[?25h[?25lt[85;144H2[43;12H[?25h[?25lo[85;144H3[43;13H[?25h[?25le[85;144H4[43;14H[?25h[?25ln[85;144H5[43;15H[?25h[?25l[43;14H[K[85;144H4[43;14H[?25h[?25l[43;13H[K[85;144H3[43;13H[?25h[?25lk[85;144H4[43;14H[?25h[?25le[85;144H5[43;15H[?25h[?25ln[85;144H6[43;16H[?25h[?25ls[85;144H7[43;17H[?25h[?25l[85;141H4[44;17H[?25h[?25l[85;144H6[44;16H[?25h[?25l[85;144H5[44;15H[?25h[?25l[85;144H4[44;14H[?25h[?25l[85;144H3[44;13H[?25h[?25l[85;144H2[44;12H[?25h[?25l[85;144H1[44;11H[?25h[?25l[85;144H0[44;10H[?25h[?25l[85;143H9 [44;9H[?25h[?25l[85;143H8[44;8H[?25h[?25l[85;143H7[44;7H[?25h[?25l[85;143H6[44;6H[?25h[?25l[85;143H5[44;5H[?25h[?25l[34m#for t in tokens: print(t)[m[85;143H6[44;6H[?25h[85;1H[K[44;5H[?25l[85;130H^[[44;5H[85;130H  [44;6H[85;140H44,5[10CAll[44;5H[?25h[?25l[85;130H:[44;5H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lexer.py" 58L, 1651C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ cl[K[Kvim lexer.py [7@./lexer.py data.txt[C
  File "./lexer.py", line 43
    print tokens
               ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(tokens)?
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$  [K./lexer.py data.txt [7Pvim lexer.py[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lexer.py" 58L, 1651C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple

[34m#Using the next_match() function provides a workaround for the fact
#that Python 3.7 does not support assignment expressions.  In fact,
#the clumsy nested if-then-else handling in exactly this situation of
#regex matching is cited as part of the rationale for the recent
#addition of assignment expressions using the `:=` walrus operator to
#Python 3.8.
#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>


#returns pair containing regex match-object and token kind.  If token
#should be ignored, kind should be returned as None.
#note that m.group() gives lexeme after a successful match[m
[33mdef[m [36mnext_match[m(text):
    m = re.compile([31mr'\s+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [36mNone[m)  [34m#None kind means ignore[m[23;5Hm = re.compile([31mr'\d+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[26;5Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m
    [33mif[m (m): [33mreturn[m (m, m.group())


[33mdef[m [36mscan[m(text):
    tokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[33;9H(match, kind) = next_match(text)[34;9Hlexeme = match.group()[35;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[36;9Htext = text[[36mlen[m(lexeme):]
    [33mreturn[m tokens

[33mdef[m [36mmain[m():
    [33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    tokens = scan(contents)
    [36mprint[m tokens
    [34m#for t in tokens: print(t)[m

[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[48;9Hcontent = [36mfile[m.read()
    [33mreturn[m content

Token = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():
    [36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)

[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H44,5[10CAll[44;5H[?25h[?1000l[?1002h[?25l[85;130H~@k[44;5H[85;130H   [45;1H[85;141H5,0-1[45;1H[?25h[?25l[85;130H~@k[45;1H[85;130H   [44;5H[85;141H4,5  [44;5H[?25h[?25l[85;130H~@k[44;5H[85;130H   [43;5H[85;141H3[43;5H[?25h[?25l[85;130H~@k[43;5H[85;130H   [43;6H[85;143H6[43;6H[?25h[?25l[85;130H~@k[43;6H[85;130H   [43;7H[85;143H7[43;7H[?25h[?25l[85;130H~@k[43;7H[85;130H   [43;8H[85;143H8[43;8H[?25h[?25l[85;130H~@k[43;8H[85;130H   [43;9H[85;143H9[43;9H[?25h[?25l[85;130H~@k[43;9H[85;130H   [43;10H[85;143H10[43;10H[?25h[?25l[85;130Ha[43;10H[85;130H [43;11H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H43,11[9CAll[43;11H[?25h[?25l    printtokens[43;16H[K[85;144H0[43;10H[?25h[?25l[36mprint[m(tokens[85;144H1[43;11H[?25h[?25l[85;144H2[43;12H[?25h[?25l[85;144H3[43;13H[?25h[?25l[85;144H4[43;14H[?25h[?25l[85;144H5[43;15H[?25h[?25l[85;144H6[43;16H[?25h[?25l[85;144H7[43;17H[?25h[?25l)[43;10H[46m([mtokens[46m)[m[85;144H8[43;18H[?25h[?25l[31m1[m[43;10H(tokens)[85;144H9[43;19H[?25h[?25l`[85;143H20[43;20H[?25h[?25l[43;19H[K[85;143H19[43;19H[?25h[?25l[43;18H[K[43;10H[46m([mtokens[46m)[m[85;144H8[43;18H[?25h[85;1H[K[43;17H[?25l[85;130H^[[43;17H[85;130H  [43;18H[85;140H43,17[9CAll[43;17H[?25h[?25l[85;130H:[43;17H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lexer.py" 58L, 1652C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ vim lexer.py [7@./lexer.py data.txt[C[7Pvim lexer.py[C[7@./lexer.py data.txt[C
[Token(kind='INT', lexeme='21'), Token(kind='INT', lexeme='23'), Token(kind='A', lexeme='A'), Token(kind='INT', lexeme='34'), Token(kind='_', lexeme='_'), Token(kind='INT', lexeme='22'), Token(kind='I', lexeme='I'), Token(kind='D', lexeme='D'), Token(kind='_', lexeme='_'), Token(kind='INT', lexeme='44'), Token(kind='/', lexeme='/'), Token(kind='/', lexeme='/'), Token(kind='a', lexeme='a'), Token(kind='s', lexeme='s'), Token(kind='d', lexeme='d'), Token(kind='s', lexeme='s'), Token(kind='d', lexeme='d'), Token(kind='f', lexeme='f'), Token(kind='s', lexeme='s')]
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt [7Pvim lexer.py[C[7@./lexer.py data.txt[C[7Pvim lexer.py[C[7@./lexer.py data.txt[C[K./lexer.py data.txt [7Pvim lexer.py[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lexer.py" 58L, 1652C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple

[34m#Using the next_match() function provides a workaround for the fact
#that Python 3.7 does not support assignment expressions.  In fact,
#the clumsy nested if-then-else handling in exactly this situation of
#regex matching is cited as part of the rationale for the recent
#addition of assignment expressions using the `:=` walrus operator to
#Python 3.8.
#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>


#returns pair containing regex match-object and token kind.  If token
#should be ignored, kind should be returned as None.
#note that m.group() gives lexeme after a successful match[m
[33mdef[m [36mnext_match[m(text):
    m = re.compile([31mr'\s+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [36mNone[m)  [34m#None kind means ignore[m[23;5Hm = re.compile([31mr'\d+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[26;5Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m
    [33mif[m (m): [33mreturn[m (m, m.group())


[33mdef[m [36mscan[m(text):
    tokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[33;9H(match, kind) = next_match(text)[34;9Hlexeme = match.group()[35;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[36;9Htext = text[[36mlen[m(lexeme):]
    [33mreturn[m tokens

[33mdef[m [36mmain[m():
    [33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    tokens = scan(contents)
    [36mprint[m[46m([mtokens[46m)[m
    [34m#for t in tokens: print(t)[m

[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[48;9Hcontent = [36mfile[m.read()
    [33mreturn[m content

Token = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():
    [36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)

[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H43,17[9CAll[43;17H[?25h[?1000l[?1002h[?25l[85;130H~@k[43;17H[85;130H   [44;17H[43;10H(tokens)[85;141H4[44;17H[?25h[?25l[85;130H~@k[44;17H[85;130H   [43;17H[43;10H[46m([mtokens[46m)[m[85;141H3[43;17H[?25h[?25l[85;130H~@k[43;17H[85;130H   [44;17H[43;10H(tokens)[85;141H4[44;17H[?25h[?25l[85;130H~@k[44;17H[85;130H   [43;17H[43;10H[46m([mtokens[46m)[m[85;141H3[43;17H[?25h[?25l[85;130H~@k[43;17H[85;130H   [43;17H[?25h[?25l[85;130Ha[43;17H[85;130H [43;18H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H43,18[9CAll[43;18H[?25h[?25l[43;17H[K[43;10H([85;144H7[43;17H[?25h[?25l[43;16H[K[85;144H6[43;16H[?25h[?25l[43;15H[K[85;144H5[43;15H[?25h[?25l[43;14H[K[85;144H4[43;14H[?25h[?25l[43;13H[K[85;144H3[43;13H[?25h[?25l[43;12H[K[85;144H2[43;12H[?25h[?25l[43;11H[K[85;144H1[43;11H[?25h[?25l[43;10H[K[85;144H0[43;10H[?25h[?25lprin[43;9H[K[85;143H9 [43;9H[?25h[?25l[43;8H[K[85;143H8[43;8H[?25h[?25l[43;7H[K[85;143H7[43;7H[?25h[?25l[43;6H[K[85;143H6[43;6H[?25h[?25l[43;5H[K[85;143H5[43;5H[?25h[?25l[85;141H4[44;5H[?25h[?25l[85;143H6[44;6H[?25h[?25l[33mfor[m t [33min[m tokens: [36mprint[m(t)[44;30H[K[85;143H5[44;5H[?25h[?25l[85;141H3[43;5H[?25h[?25l[85;141H4[44;5H[?25h[?25l[85;141H3[43;5H[?25h[?25l[85;141H4[44;5H[?25h[?25l[85;141H3[43;5H[?25h[?25l[85;143H1[43;1H[?25h[?25l[42;84r[84;1H
[1;85r[42;5Htokens = scan(contents)[84;1H[1m[34m~                                                                                                                                                            [m[85;140H[K[85;140H42,28[9CAll[42;18H[46m([8C)[?25h[?25l[m[42;18H([8C)[43;27H[46m([mt[46m)[m[85;141H3[43;28H[?25h[?25l[42;18H[46m([8C)[m[43;27H(t)[85;141H2[42;28H[?25h[85;1H[K[42;27H[?25l[85;130H^[[42;27H[85;130H  [42;28H[85;140H42,27[9CAll[42;27H[?25h[?25l[85;130H:[42;27H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lexer.py" 57L, 1633C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ vim lexer.py [7@./lexer.py data.txt[C[7Pvim lexer.py[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lexer.py" 57L, 1633C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple

[34m#Using the next_match() function provides a workaround for the fact
#that Python 3.7 does not support assignment expressions.  In fact,
#the clumsy nested if-then-else handling in exactly this situation of
#regex matching is cited as part of the rationale for the recent
#addition of assignment expressions using the `:=` walrus operator to
#Python 3.8.
#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>


#returns pair containing regex match-object and token kind.  If token
#should be ignored, kind should be returned as None.
#note that m.group() gives lexeme after a successful match[m
[33mdef[m [36mnext_match[m(text):
    m = re.compile([31mr'\s+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [36mNone[m)  [34m#None kind means ignore[m[23;5Hm = re.compile([31mr'\d+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[26;5Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m
    [33mif[m (m): [33mreturn[m (m, m.group())


[33mdef[m [36mscan[m(text):
    tokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[33;9H(match, kind) = next_match(text)[34;9Hlexeme = match.group()[35;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[36;9Htext = text[[36mlen[m(lexeme):]
    [33mreturn[m tokens

[33mdef[m [36mmain[m():
    [33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    tokens = scan[46m([mcontents[46m)[m
    [33mfor[m t [33min[m tokens: [36mprint[m(t)

[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[47;9Hcontent = [36mfile[m.read()
    [33mreturn[m content

Token = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():
    [36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)

[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H42,27[9CAll[42;27H[?25h[?1000l[?1002h[?25l[85;130H^[[42;27H[85;130H  [42;27H[85;130H^[[42;27H[85;130H  [42;27H[?25h[?25l[85;130H:[42;27H[85;1H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ vim lexer.py [7@./lexer.py data.txt[C
Token(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='A', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='I', lexeme='I')
Token(kind='D', lexeme='D')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='44')
Token(kind='/', lexeme='/')
Token(kind='/', lexeme='/')
Token(kind='a', lexeme='a')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='f', lexeme='f')
Token(kind='s', lexeme='s')
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt [7Pvim lexer.py[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lexer.py" 57L, 1633C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple

[34m#Using the next_match() function provides a workaround for the fact
#that Python 3.7 does not support assignment expressions.  In fact,
#the clumsy nested if-then-else handling in exactly this situation of
#regex matching is cited as part of the rationale for the recent
#addition of assignment expressions using the `:=` walrus operator to
#Python 3.8.
#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>


#returns pair containing regex match-object and token kind.  If token
#should be ignored, kind should be returned as None.
#note that m.group() gives lexeme after a successful match[m
[33mdef[m [36mnext_match[m(text):
    m = re.compile([31mr'\s+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [36mNone[m)  [34m#None kind means ignore[m[23;5Hm = re.compile([31mr'\d+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[26;5Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m
    [33mif[m (m): [33mreturn[m (m, m.group())


[33mdef[m [36mscan[m(text):
    tokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[33;9H(match, kind) = next_match(text)[34;9Hlexeme = match.group()[35;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[36;9Htext = text[[36mlen[m(lexeme):]
    [33mreturn[m tokens

[33mdef[m [36mmain[m():
    [33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    tokens = scan[46m([mcontents[46m)[m
    [33mfor[m t [33min[m tokens: [36mprint[m(t)

[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[47;9Hcontent = [36mfile[m.read()
    [33mreturn[m content

Token = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():
    [36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)

[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H42,27[9CAll[42;27H[?25h[?1000l[?1002h[?25l[85;130H~@k[42;27H[85;130H   [41;27H[42;18H([8C)[85;141H1[41;27H[?25h[?25l[85;130H~@k[41;27H[85;130H   [40;27H[40;8H[46m([18C)[m[85;141H0[40;27H[?25h[?25l[85;130H~@k[40;27H[85;130H   [39;11H[40;8H([18C)[85;140H39,11[39;11H[?25h[?25l[85;130H~@k[39;11H[85;130H   [38;1H[85;141H8,0-1[38;1H[?25h[?25l[85;130H~@k[38;1H[85;130H   [37;17H[85;141H7,17 [37;17H[?25h[?25l[85;130H~@k[37;17H[85;130H   [36;27H[85;141H6,2[36;27H[?25h[?25l[85;130H~@k[36;27H[85;130H   [35;27H[85;141H5[35;27H[?25h[?25l[85;130H~@k[35;27H[85;130H   [34;27H[85;141H4[34;27H[?25h[?25l[85;130H~@k[34;27H[85;130H   [33;27H[85;141H3[33;27H[?25h[?25l[85;130H~@k[33;27H[85;130H   [32;26H[85;141H2,26[32;26H[?25h[?25l[85;141H4,22[34;22H[?25h[?25l[85;143H17[34;17H[?25h[?25l[85;141H5,18[35;18H[?25h[?25l[85;130H~@k[35;18H[85;130H   [35;17H[46m([mkind[46m)[m[85;144H7[35;17H[?25h[?25l[85;130H~@k[35;17H[85;130H   [35;18H(kind)[85;144H8[35;18H[?25h[?25l[85;130H~@k[35;18H[85;130H   [35;19H[85;144H9[35;19H[?25h[?25l[85;130H~@k[35;19H[85;130H   [35;18H[85;144H8[35;18H[?25h[?25l[85;130H~@k[35;18H[85;130H   [35;19H[85;144H9[35;19H[?25h[?25l[85;130H~@k[35;19H[85;130H   [35;20H[85;143H20[35;20H[?25h[?25l[85;130H~@k[35;20H[85;130H   [35;19H[85;143H19[35;19H[?25h[?25l[85;130Ha[35;19H[85;130H [35;20H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H35,20[9CAll[35;20H[?25h[?25l[36;84r[36;1H[L[1;85r[35;20H[K[36;13Htokens.append(Token(kind, lexeme))[85;140H[K[85;140H36,13[9CAll[36;13H[?25h[?25l[35;12H[46m([mkind[46m)[m[85;141H5[35;13H[?25h[?25l(kind)[85;144H4[35;14H[?25h[?25l[85;144H5[35;15H[?25h[?25l[85;144H6[35;16H[?25h[?25l[46m([mkind[46m)[m[85;144H7[35;17H[?25h[?25l[85;144H8[35;18H[?25h[?25l(kind)[85;144H9[35;19H[?25h[?25l[85;143H20[35;20H[?25h[?25l[85;143H19[35;19H[?25h[?25l[35;12H[46m([mkind[46m)[m[85;144H8[35;18H[?25h[?25l[85;144H7[35;17H[?25h[?25l[85;144H8[35;18H[?25h[?25l(kind)[85;144H9[35;19H[?25h[?25l[35;12H[46m([mkind[46m)[m[85;144H8[35;18H[?25h[?25l[85;144H7[35;17H[?25h[?25l[85;144H8[35;18H[?25h[?25l(kind)[85;144H9[35;19H[?25h[?25l[85;143H20[35;20H[?25h[?25l[85;140H[K[85;140H35,20[9CAll[35;20H[?25h[?25l[85;140H[K[85;140H35,20[9CAll[35;20H[?25h[?25l[85;140H[K[85;140H35,20[9CAll[35;20H[?25h[?25l[85;140H[K[85;140H35,20[9CAll[35;20H[?25h[85;1H[K[35;19H[?25l[85;130H^[[35;19H[85;130H  [35;20H[85;140H35,19[9CAll[35;19H[?25h[?25l[85;130H:[35;19H[85;130H[K[85;1H:[?2004h[?25hq[?25l[?25h[?25l[85;2H[K[85;2H[?25hx[?25l[?25h[?25l[?1002l[?2004l"lexer.py" 58L, 1646C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ vim lexer.py [7@./lexer.py data.txt[C[7Pvim lexer.py[C[7@./lexer.py data.txt[C
Token(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='A', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='I', lexeme='I')
Token(kind='D', lexeme='D')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='44')
Token(kind='/', lexeme='/')
Token(kind='/', lexeme='/')
Token(kind='a', lexeme='a')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='f', lexeme='f')
Token(kind='s', lexeme='s')
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt [7Pvim lexer.py[C[7@./lexer.py data.txt[C[7Pvim lexer.py[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lexer.py" 58L, 1646C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple

[34m#Using the next_match() function provides a workaround for the fact
#that Python 3.7 does not support assignment expressions.  In fact,
#the clumsy nested if-then-else handling in exactly this situation of
#regex matching is cited as part of the rationale for the recent
#addition of assignment expressions using the `:=` walrus operator to
#Python 3.8.
#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>


#returns pair containing regex match-object and token kind.  If token
#should be ignored, kind should be returned as None.
#note that m.group() gives lexeme after a successful match[m
[33mdef[m [36mnext_match[m(text):
    m = re.compile([31mr'\s+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [36mNone[m)  [34m#None kind means ignore[m[23;5Hm = re.compile([31mr'\d+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[26;5Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m
    [33mif[m (m): [33mreturn[m (m, m.group())


[33mdef[m [36mscan[m(text):
    tokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[33;9H(match, kind) = next_match(text)[34;9Hlexeme = match.group()[35;9H[33mif[m (kind):[36;13Htokens.append(Token(kind, lexeme))[37;9Htext = text[[36mlen[m(lexeme):]
    [33mreturn[m tokens

[33mdef[m [36mmain[m():
    [33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    tokens = scan(contents)
    [33mfor[m t [33min[m tokens: [36mprint[m(t)

[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[48;9Hcontent = [36mfile[m.read()
    [33mreturn[m content

Token = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():
    [36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)

[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H35,19[9CAll[35;19H[?25h[?1000l[?1002h[?25l[85;130H~@k[35;19H[85;130H   [36;19H[85;141H6[36;19H[?25h[?25l[85;130H~@k[36;19H[85;130H   [35;19H[85;141H5[35;19H[?25h[?25l[85;130H~@k[35;19H[85;130H   [35;18H[85;144H8[35;18H[?25h[?25l[85;130H~@k[35;18H[85;130H   [35;19H[85;144H9[35;19H[?25h[?25l[85;130H~@k[35;19H[85;130H   [34;19H[85;141H4[34;19H[?25h[?25l[85;130H~@k[34;19H[85;130H   [34;20H[85;143H20[34;20H[?25h[?25l[85;130H~@k[34;20H[85;130H   [34;21H[85;144H1[34;21H[?25h[?25l[85;130H~@k[34;21H[85;130H   [34;22H[85;144H2[34;22H[?25h[?25l[85;130H~@k[34;22H[85;130H   [34;23H[85;144H3[34;23H[?25h[?25l[85;130H~@k[34;23H[85;130H   [34;24H[85;144H4[34;24H[?25h[?25l[85;130H~@k[34;24H[85;130H   [34;25H[85;144H5[34;25H[?25h[?25l[85;130H~@k[34;25H[85;130H   [34;26H[85;144H6[34;26H[?25h[?25l[85;130H~@k[34;26H[85;130H   [34;27H[85;144H7[34;27H[?25h[?25l[85;130H~@k[34;27H[85;130H   [34;28H[85;144H8[34;28H[?25h[?25l[85;130H~@k[34;28H[85;130H   [34;29H[46m()[m[85;144H9[34;29H[?25h[?25l[85;130H~@k[34;29H[85;130H   [34;30H[85;143H30[34;30H[?25h[?25l[85;130H~@k[34;30H[85;130H   [34;30H[?25h[?25l[85;130H~@k[34;30H[85;130H   [34;30H[?25h[?25l[85;130H~@k[34;30H[85;130H   [34;30H[?25h[?25l[85;130H~@k[34;30H[85;130H   [34;30H[?25h[?25l[85;130H~@k[34;30H[85;130H   [34;30H[?25h[?25l[85;130H~@k[34;30H[85;130H   [34;30H[?25h[?25l[85;130H~@k[34;30H[85;130H   [34;30H[?25h[?25l[85;130Ha[34;30H[85;130H [34;31H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H34,31[9CAll[34;31H[?25h[?25l[35;84r[35;1H[L[1;85r[85;140H[K[85;140H35,9[10CAll[34;29H()[35;9H[?25h[?25li[85;143H10[35;10H[?25h[?25l[33mif[m[85;144H1[35;11H[?25h[?25l([85;144H2[35;12H[?25h[?25l[35;11H[K[85;144H1[35;11H[?25h[?25l([85;144H2[35;12H[?25h[?25lk[85;144H3[35;13H[?25h[?25li[85;144H4[35;14H[?25h[?25ln[85;144H5[35;15H[?25h[?25ld[85;144H6[35;16H[?25h[?25l[85;144H7[35;17H[?25h[?25l=[85;144H8[35;18H[?25h[?25l=[85;144H9[35;19H[?25h[?25l[85;143H20[35;20H[?25h[?25l[31m'
        if (kind): 
            tokens.append(Token(kind, lexeme))
        text = text[len(lexeme):]
    return tokens

def main():
    if (len(sys.argv) != 2): usage();
    contents = readFile(sys.argv[1]);
    tokens = scan(contents)
    for t in tokens: print(t)

def readFile(path):
    with open(path, 'r') as file:
        content = file.read()
    return content

Token = namedtuple([m[1CToken[1C[31m, [[m[1Ckind[1C[31m, [m[1Clexeme[1C[31m])

def usage():
    print(f[m[1Cusage: {sys.argv[[1C]} DATA_FILE[1C[31m)
    sys.exit(1)

if __name__ == [10C:
    main()[m[85;144H1[35;21H[?25h[?25l[31m/[m[85;144H2[35;22H[?25h[?25l[31m'[m
        [33mif[m (kind): 
            tokens.append(Token(kind, lexeme))
        text = text[[36mlen[m(lexeme):]
    [33mreturn[m tokens

[33mdef[m [36mmain[m():
    [33mif[m ([36mlen[m(sys.argv) != [1C): usage();
    contents = readFile(sys.argv[[1C]);
    tokens = scan(contents)
    [33mfor[m t [33min[m tokens: [36mprint[m(t)

[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [3C) [33mas[m [36mfile[m:
        content = [36mfile[m.read()
    [33mreturn[m content

Token = namedtuple([1C[31mToken[m[1C, [[1C[31mkind[m[1C, [1C[31mlexeme[m[1C])

[33mdef[m [36musage[m():
    [36mprint[m(f[1C[31musage: {sys.argv[0]} DATA_FILE[m[1C)
    sys.exit([1C)

[33mif[m __name__ == [10C:
    main()[85;144H3[35;23H[?25h[?25l)[35;11H[46m([11C)[m[85;144H4[35;24H[?25h[?25l:[35;11H([11C)[85;144H5[35;25H[?25h[?25l[36;84r[36;1H[L[1;85r[85;140H[K[85;140H36,13[9CAll[36;13H[?25h[?25lc[85;144H4[36;14H[?25h[?25lo[85;144H5[36;15H[?25h[?25lm[85;144H6[36;16H[?25h[?25lm[85;144H7[36;17H[?25h[?25le[85;144H8[36;18H[?25h[?25ln[85;144H9[36;19H[?25h[?25lt[85;143H20[36;20H[?25h[?25l[85;144H1[36;21H[?25h[?25l+[85;144H2[36;22H[?25h[?25l+[85;144H3[36;23H[?25h[?25l[36;22H[K[85;144H2[36;22H[?25h[?25l[36;21H[K[85;144H1[36;21H[?25h[?25l+[85;144H2[36;22H[?25h[?25l=[85;144H3[36;23H[?25h[?25l[85;144H4[36;24H[?25h[?25lc[85;144H5[36;25H[?25h[?25lo[85;144H6[36;26H[?25h[?25lm[85;144H7[36;27H[?25h[?25lm[85;144H8[36;28H[?25h[?25le[85;144H9[36;29H[?25h[?25ln[85;143H30[36;30H[?25h[?25lt[85;144H1[36;31H[?25h[?25l[85;141H5,25[35;25H[?25h[?25l[34;29H[46m()[m[85;141H4,31[34;31H[?25h[?25l()[85;141H3[33;31H[?25h[?25l[85;141H2,27[32;27H[?25h[?25l[31;14H[46m[][m[85;141H1,16[31;16H[?25h[?25l[32;84r[32;1H[L[1;85r[85;140H[K[85;140H32,5[10CAll[31;14H[]
    [?25h[?25lc[85;143H6[32;6H[?25h[?25lo[85;143H7[32;7H[?25h[?25lm[85;143H8[32;8H[?25h[?25lm[85;143H9[32;9H[?25h[?25le[85;143H10[32;10H[?25h[?25ln[85;144H1[32;11H[?25h[?25lt[85;144H2[32;12H[?25h[?25l[85;144H3[32;13H[?25h[?25l=[85;144H4[32;14H[?25h[?25l[85;144H5[32;15H[?25h[?25l[31m0[m[85;144H6[32;16H[?25h[?25l;[85;144H7[32;17H[?25h[?25l[32;16H[K[85;144H6[32;16H[?25h[?25l[33;15H[46m([mtext[46m)[m[85;141H3[33;16H[?25h[?25l(text)[85;141H4[34;16H[?25h[?25l[85;141H5[35;16H[?25h[?25l[85;141H6[36;16H[?25h[?25l[85;144H7[36;17H[?25h[?25l[85;141H7[37;17H[?25h[?25l[85;144H8[37;18H[?25h[?25l[85;144H9[37;19H[?25h[?25l[85;143H20[37;20H[?25h[?25l[85;144H1[37;21H[?25h[?25l[85;144H2[37;22H[?25h[?25l[85;144H3[37;23H[?25h[?25l[85;144H4[37;24H[?25h[?25l[85;144H5[37;25H[?25h[?25l[85;144H6[37;26H[?25h[?25l[85;144H7[37;27H[?25h[?25l[85;144H8[37;28H[?25h[?25l[85;144H9[37;29H[?25h[?25l[85;143H30[37;30H[?25h[?25l[85;144H1[37;31H[?25h[?25la[85;144H2[37;32H[?25h[?25l<F12>[85;144H7[37;37H[?25h[?25l[37;36H[K[85;144H6[37;36H[?25h[?25l[37;35H[K[85;144H5[37;35H[?25h[?25l[37;34H[K[85;144H4[37;34H[?25h[?25l[37;33H[K[85;144H3[37;33H[?25h[?25l[37;32H[K[85;144H2[37;32H[?25h[?25l[37;31H[K[85;144H1[37;31H[?25h[?25l[85;141H8,20[38;20H[?25h[?25l[85;143H19[38;19H[?25h[?25l[38;12H[46m([mkind[46m)[m[85;144H8[38;18H[?25h[?25l[85;144H7[38;17H[?25h[?25l[46m [m): [46m)[m[85;144H8[38;18H[?25h[?25l[46m&[m):&[46m)[m[85;144H9[38;19H[?25h[?25l[46m&[m):&[46m)[m[85;143H20[38;20H[?25h[?25l[46m [m): [46m)[m[85;144H1[38;21H[?25h[?25l[46mc[m):c[46m)[m[85;144H2[38;22H[?25h[?25l[46mo[m):o[46m)[m[85;144H3[38;23H[?25h[?25l[46mm[m):m[46m)[m[85;144H4[38;24H[?25h[?25l[46mm[m):m[46m)[m[85;144H5[38;25H[?25h[?25l[46me[m):e[46m)[m[85;144H6[38;26H[?25h[?25l[46mn[m):n[46m)[m[85;144H7[38;27H[?25h[?25l[46mt[m):t[46m)[m[85;144H8[38;28H[?25h[?25l[46m [m): [46m)[m[85;144H9[38;29H[?25h[?25l[46m![m):![46m)[m[85;143H30[38;30H[?25h[?25l[46m=[m):=[46m)[m[85;144H1[38;31H[?25h[?25l[46m [m): [46m)[m[85;144H2[38;32H[?25h[?25l[31m[46m3[m):[31m3[m[46m)[m[85;144H3[38;33H[?25h[?25l)[46m:[m [46m)[m:[85;144H2[38;32H[?25h[?25l[31m[46m2[m):[31m2[m[46m)[m[85;144H3[38;33H[?25h[85;1H[K[38;32H[?25l[85;130H^[[38;32H[85;130H  [38;33H[38;12H([20C)[85;140H38,32[9CAll[38;32H[?25h[?25l[85;130H:[38;32H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lexer.py" 61L, 1734C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ vim lexer.py [7@./lexer.py data.txt[C[7Pvim lexer.py[C[7@./lexer.py data.txt[C
  File "./lexer.py", line 38
    if (kind && comment != 2): 
              ^
SyntaxError: invalid syntax
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt [7Pvim lexer.py[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lexer.py" 61L, 1734C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple

[34m#Using the next_match() function provides a workaround for the fact
#that Python 3.7 does not support assignment expressions.  In fact,
#the clumsy nested if-then-else handling in exactly this situation of
#regex matching is cited as part of the rationale for the recent
#addition of assignment expressions using the `:=` walrus operator to
#Python 3.8.
#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>


#returns pair containing regex match-object and token kind.  If token
#should be ignored, kind should be returned as None.
#note that m.group() gives lexeme after a successful match[m
[33mdef[m [36mnext_match[m(text):
    m = re.compile([31mr'\s+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [36mNone[m)  [34m#None kind means ignore[m[23;5Hm = re.compile([31mr'\d+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[26;5Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m
    [33mif[m (m): [33mreturn[m (m, m.group())


[33mdef[m [36mscan[m(text):
    tokens = []
    comment = [31m0[m
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[34;9H(match, kind) = next_match(text)[35;9Hlexeme = match.group()[36;9H[33mif[m(kind == [31m'/'[m):[37;13Hcomment += comment[38;9H[33mif[m (kind && comment != [31m2[m):[39;13Htokens.append(Token(kind, lexeme))[40;9Htext = text[[36mlen[m(lexeme):]
    [33mreturn[m tokens

[33mdef[m [36mmain[m():
    [33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    tokens = scan(contents)
    [33mfor[m t [33min[m tokens: [36mprint[m(t)

[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[51;9Hcontent = [36mfile[m.read()
    [33mreturn[m content

Token = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():
    [36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)

[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H38,32[9CAll[38;32H[?25h[?1000l[?1002h[?25l[85;130H~@k[38;32H[85;130H   [39;32H[46m([12C)[m[85;141H9[39;32H[?25h[?25l[85;130H~@k[39;32H[85;130H   [39;31Hn([12C)[85;144H1[39;31H[?25h[?25l[85;130H~@k[39;31H[85;130H   [38;31H[85;141H8[38;31H[?25h[?25l[85;130H~@k[38;31H[85;130H   [38;30H[85;144H0[38;30H[?25h[?25l[85;130H~@k[38;30H[85;130H   [38;29H[85;143H29[38;29H[?25h[?25l[85;130H~@k[38;29H[85;130H   [39;29H[85;141H9[39;29H[?25h[?25l[85;130H~@k[39;29H[85;130H   [39;28H[85;144H8[39;28H[?25h[?25l[85;130H~@k[39;28H[85;130H   [38;28H[85;141H8[38;28H[?25h[?25l[85;130H~@k[38;28H[85;130H   [38;27H[85;144H7[38;27H[?25h[?25l[85;130H~@k[38;27H[85;130H   [38;26H[85;144H6[38;26H[?25h[?25l[85;130H~@k[38;26H[85;130H   [38;25H[85;144H5[38;25H[?25h[?25l[85;130H~@k[38;25H[85;130H   [38;24H[85;144H4[38;24H[?25h[?25l[85;130H~@k[38;24H[85;130H   [38;23H[85;144H3[38;23H[?25h[?25l[85;130H~@k[38;23H[85;130H   [38;22H[85;144H2[38;22H[?25h[?25l[85;130H~@k[38;22H[85;130H   [38;21H[85;144H1[38;21H[?25h[?25l[85;130H~@k[38;21H[85;130H   [38;20H[85;144H0[38;20H[?25h[?25l[85;130Ha[38;20H[85;130H [38;21H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H38,21[9CAll[38;21H[?25h[?25l[85;144H0[38;20H[?25h[?25l comment != [31m2[m): [85;143H19[38;19H[?25h[?25l comment != [31m2[m): [85;144H8[38;18H[?25h[?25la comment != [31m2[m):[85;144H9[38;19H[?25h[?25ln comment != [31m2[m):[85;143H20[38;20H[?25h[?25l[33mand[m comment != [31m2[m):[85;144H1[38;21H[?25h[85;1H[K[38;20H[?25l[85;130H^[[38;20H[85;130H  [38;21H[85;140H38,20[9CAll[38;20H[?25h[?25l[85;130H:[38;20H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lexer.py" 61L, 1735C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ vim lexer.py [7@./lexer.py data.txt[C
Token(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='A', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='I', lexeme='I')
Token(kind='D', lexeme='D')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='44')
Token(kind='/', lexeme='/')
Token(kind='/', lexeme='/')
Token(kind='a', lexeme='a')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='f', lexeme='f')
Token(kind='s', lexeme='s')
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt [7Pvim lexer.py[C[7@./lexer.py data.txt[C
Token(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='A', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='I', lexeme='I')
Token(kind='D', lexeme='D')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='44')
Token(kind='/', lexeme='/')
Token(kind='/', lexeme='/')
Token(kind='a', lexeme='a')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='f', lexeme='f')
Token(kind='s', lexeme='s')
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt [7Pvim lexer.py[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lexer.py" 61L, 1735C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple

[34m#Using the next_match() function provides a workaround for the fact
#that Python 3.7 does not support assignment expressions.  In fact,
#the clumsy nested if-then-else handling in exactly this situation of
#regex matching is cited as part of the rationale for the recent
#addition of assignment expressions using the `:=` walrus operator to
#Python 3.8.
#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>


#returns pair containing regex match-object and token kind.  If token
#should be ignored, kind should be returned as None.
#note that m.group() gives lexeme after a successful match[m
[33mdef[m [36mnext_match[m(text):
    m = re.compile([31mr'\s+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [36mNone[m)  [34m#None kind means ignore[m[23;5Hm = re.compile([31mr'\d+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[26;5Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m
    [33mif[m (m): [33mreturn[m (m, m.group())


[33mdef[m [36mscan[m(text):
    tokens = []
    comment = [31m0[m
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[34;9H(match, kind) = next_match(text)[35;9Hlexeme = match.group()[36;9H[33mif[m(kind == [31m'/'[m):[37;13Hcomment += comment[38;9H[33mif[m (kind [33mand[m comment != [31m2[m):[39;13Htokens.append(Token(kind, lexeme))[40;9Htext = text[[36mlen[m(lexeme):]
    [33mreturn[m tokens

[33mdef[m [36mmain[m():
    [33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    tokens = scan(contents)
    [33mfor[m t [33min[m tokens: [36mprint[m(t)

[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[51;9Hcontent = [36mfile[m.read()
    [33mreturn[m content

Token = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():
    [36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)

[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H38,20[9CAll[38;20H[?25h[?1000l[?1002h[?25l[85;130H~@k[38;20H[85;130H   [38;21H[85;144H1[38;21H[?25h[?25l[85;130H~@k[38;21H[85;130H   [37;21H[85;141H7[37;21H[?25h[?25l[85;130H~@k[37;21H[85;130H   [36;21H[85;141H6[36;21H[?25h[?25l[85;130H~@k[36;21H[85;130H   [37;21H[85;141H7[37;21H[?25h[?25l[85;130H~@k[37;21H[85;130H   [36;21H[85;141H6[36;21H[?25h[?25l[85;130H~@k[36;21H[85;130H   [37;21H[85;141H7[37;21H[?25h[?25l[85;130H~@k[37;21H[85;130H   [37;22H[85;144H2[37;22H[?25h[?25l[85;130H~@k[37;22H[85;130H   [37;23H[85;144H3[37;23H[?25h[?25l[85;130H~@k[37;23H[85;130H   [37;24H[85;144H4[37;24H[?25h[?25l[85;130H~@k[37;24H[85;130H   [37;25H[85;144H5[37;25H[?25h[?25l[85;130H~@k[37;25H[85;130H   [37;26H[85;144H6[37;26H[?25h[?25l[85;130H~@k[37;26H[85;130H   [37;27H[85;144H7[37;27H[?25h[?25l[85;130H~@k[37;27H[85;130H   [37;28H[85;144H8[37;28H[?25h[?25l[85;130H~@k[37;28H[85;130H   [37;29H[85;144H9[37;29H[?25h[?25l[85;130H~@k[37;29H[85;130H   [37;30H[85;143H30[37;30H[?25h[?25l[85;130H~@k[37;30H[85;130H   [37;30H[?25h[?25l[85;130H~@k[37;30H[85;130H   [37;30H[?25h[?25l[85;130Ha[37;30H[85;130H [37;31H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H37,31[9CAll[37;31H[?25h[?25l[37;30H[K[85;144H0[37;30H[?25h[?25l[37;29H[K[85;143H29[37;29H[?25h[?25l[37;28H[K[85;144H8[37;28H[?25h[?25l[37;27H[K[85;144H7[37;27H[?25h[?25l[37;26H[K[85;144H6[37;26H[?25h[?25l[37;25H[K[85;144H5[37;25H[?25h[?25l[37;24H[K[85;144H4[37;24H[?25h[?25l[31m1[m[85;144H5[37;25H[?25h[85;1H[K[37;24H[?25l[85;130H^[[37;24H[85;130H  [37;25H[85;140H37,24[9CAll[37;24H[?25h[?25l[85;130H:[37;24H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lexer.py" 61L, 1729C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ clearvim lexer.py [7@./lexer.py data.txt[C
Token(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='A', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='I', lexeme='I')
Token(kind='D', lexeme='D')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='44')
Token(kind='/', lexeme='/')
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt clear[Kvim lexer.py 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lexer.py" 61L, 1729C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple

[34m#Using the next_match() function provides a workaround for the fact
#that Python 3.7 does not support assignment expressions.  In fact,
#the clumsy nested if-then-else handling in exactly this situation of
#regex matching is cited as part of the rationale for the recent
#addition of assignment expressions using the `:=` walrus operator to
#Python 3.8.
#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>


#returns pair containing regex match-object and token kind.  If token
#should be ignored, kind should be returned as None.
#note that m.group() gives lexeme after a successful match[m
[33mdef[m [36mnext_match[m(text):
    m = re.compile([31mr'\s+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [36mNone[m)  [34m#None kind means ignore[m[23;5Hm = re.compile([31mr'\d+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[26;5Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m
    [33mif[m (m): [33mreturn[m (m, m.group())


[33mdef[m [36mscan[m(text):
    tokens = []
    comment = [31m0[m
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[34;9H(match, kind) = next_match(text)[35;9Hlexeme = match.group()[36;9H[33mif[m(kind == [31m'/'[m):[37;13Hcomment += [31m1[m[38;9H[33mif[m (kind [33mand[m comment != [31m2[m):[39;13Htokens.append(Token(kind, lexeme))[40;9Htext = text[[36mlen[m(lexeme):]
    [33mreturn[m tokens

[33mdef[m [36mmain[m():
    [33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    tokens = scan(contents)
    [33mfor[m t [33min[m tokens: [36mprint[m(t)

[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[51;9Hcontent = [36mfile[m.read()
    [33mreturn[m content

Token = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():
    [36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)

[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H37,24[9CAll[37;24H[?25h[?1000l[?1002h[?25l[85;130Ha[37;24H[85;130H [37;25H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H37,25[9CAll[37;25H[?25h[?25l[37;24H[K[85;144H4[37;24H[?25h[?25l[31m1[m[85;144H5[37;25H[?25h[?25l[85;141H8[38;25H[?25h[?25l[85;144H6[38;26H[?25h[?25l[85;144H7[38;27H[?25h[?25l[85;144H8[38;28H[?25h[?25l[85;144H9[38;29H[?25h[?25l[85;143H30[38;30H[?25h[?25l[85;144H1[38;31H[?25h[?25l[85;144H2[38;32H[?25h[?25l[85;144H3[38;33H[?25h[?25la2):[85;144H4[38;34H[?25h[?25l[38;12H[46m([22C)[m[85;144H5[38;35H[?25h[?25l)[46m:[m [46m)[m:[85;144H4[38;34H[?25h[?25l)[46m:[m [46m)[m:[85;144H3[38;33H[?25h[?25l[38;12H([20C)[85;141H7,25[37;25H[?25h[?25l[85;141H6[36;25H[?25h[?25l[35;29H[46m()[m[85;141H5,31[35;31H[?25h[?25l()[85;141H4,33[34;33H[?25h[?25l[85;141H3,27[33;27H[?25h[?25l[34;84r[34;1H[L[1;85r[85;140H[K[85;140H34,9[10CAll[34;9H[?25h[?25lc[85;143H10[34;10H[?25h[?25lo[85;144H1[34;11H[?25h[?25li[85;144H2[34;12H[?25h[?25lm[85;144H3[34;13H[?25h[?25lm[85;144H4[34;14H[?25h[?25l[34;13H[K[85;144H3[34;13H[?25h[?25l[34;12H[K[85;144H2[34;12H[?25h[?25l[34;11H[K[85;144H1[34;11H[?25h[?25l,[85;144H2[34;12H[?25h[?25l[34;11H[K[85;144H1[34;11H[?25h[?25l,[85;144H2[34;12H[?25h[?25l[34;11H[K[85;144H1[34;11H[?25h[?25lm[85;144H2[34;12H[?25h[?25lm[85;144H3[34;13H[?25h[?25le[85;144H4[34;14H[?25h[?25ln[85;144H5[34;15H[?25h[?25lt[85;144H6[34;16H[?25h[?25l[34;15H[K[85;144H5[34;15H[?25h[?25l[34;14H[K[85;144H4[34;14H[?25h[?25ln[85;144H5[34;15H[?25h[?25lt[85;144H6[34;16H[?25h[?25l[34;15H[K[85;144H5[34;15H[?25h[?25l[34;14H[K[85;144H4[34;14H[?25h[?25l[34;13H[K[85;144H3[34;13H[?25h[?25l[34;12H[K[85;144H2[34;12H[?25h[?25l[34;11H[K[85;144H1[34;11H[?25h[?25l[34;10H[K[85;144H0[34;10H[?25h[?25l[34;9H[K[85;143H9 [34;9H[?25h[?25li[85;143H10[34;10H[?25h[?25l[33mif[m[85;144H1[34;11H[?25h[?25l([85;144H2[34;12H[?25h[?25lt[85;144H3[34;13H[?25h[?25le[85;144H4[34;14H[?25h[?25lx[85;144H5[34;15H[?25h[?25lt[85;144H6[34;16H[?25h[?25l[34;15H[K[85;144H5[34;15H[?25h[?25l[34;14H[K[85;144H4[34;14H[?25h[?25l[34;13H[K[85;144H3[34;13H[?25h[?25l[34;12H[K[85;144H2[34;12H[?25h[?25l[34;11H[K[85;144H1[34;11H[?25h[?25li[34;10H[K[85;144H0[34;10H[?25h[?25l[34;9H[K[85;143H9 [34;9H[?25h[?25l[85;143H5[34;5H[?25h[?25l[85;143H1[34;1H[?25h[?25l[85;143H5[34;5H[?25h[?25l[85;143H1[34;1H[?25h[?25l[33;84r[84;1H
[1;85r[33;5H[33mwhile[m ([36mlen[m(text) > [31m0[m):[84;1H[1m[34m~                                                                                                                                                            [m[85;140H[K[85;140H33,27[9CAll[33;27H[?25h[85;1H[K[33;26H[?25l[85;130H^[[33;26H[85;130H  [33;27H[85;140H33,26[9CAll[33;26H[?25h[?25l[85;130H:[33;26H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lexer.py" 61L, 1728C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ clearvim lexer.py [7@./lexer.py data.txt[C
  File "./lexer.py", line 38
    if (kind and comment != ): 
                            ^
SyntaxError: invalid syntax
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt clear[Kvim lexer.py 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lexer.py" 61L, 1728C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple

[34m#Using the next_match() function provides a workaround for the fact
#that Python 3.7 does not support assignment expressions.  In fact,
#the clumsy nested if-then-else handling in exactly this situation of
#regex matching is cited as part of the rationale for the recent
#addition of assignment expressions using the `:=` walrus operator to
#Python 3.8.
#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>


#returns pair containing regex match-object and token kind.  If token
#should be ignored, kind should be returned as None.
#note that m.group() gives lexeme after a successful match[m
[33mdef[m [36mnext_match[m(text):
    m = re.compile([31mr'\s+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [36mNone[m)  [34m#None kind means ignore[m[23;5Hm = re.compile([31mr'\d+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[26;5Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m
    [33mif[m (m): [33mreturn[m (m, m.group())


[33mdef[m [36mscan[m(text):
    tokens = []
    comment = [31m0[m
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[34;9H(match, kind) = next_match(text)[35;9Hlexeme = match.group()[36;9H[33mif[m(kind == [31m'/'[m):[37;13Hcomment += [31m1[m[38;9H[33mif[m (kind [33mand[m comment != ):[39;13Htokens.append(Token(kind, lexeme))[40;9Htext = text[[36mlen[m(lexeme):]
    [33mreturn[m tokens

[33mdef[m [36mmain[m():
    [33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    tokens = scan(contents)
    [33mfor[m t [33min[m tokens: [36mprint[m(t)

[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[51;9Hcontent = [36mfile[m.read()
    [33mreturn[m content

Token = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():
    [36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)

[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H33,26[9CAll[33;26H[?25h[?1000l[?1002h[?25l[85;130H~@k[33;26H[85;130H   [34;26H[85;141H4[34;26H[?25h[?25l[85;130H~@k[34;26H[85;130H   [35;26H[85;141H5[35;26H[?25h[?25l[85;130H~@k[35;26H[85;130H   [36;24H[85;141H6,24[36;24H[?25h[?25l[85;130H~@k[36;24H[85;130H   [37;24H[85;141H7[37;24H[?25h[?25l[85;130H~@k[37;24H[85;130H   [38;26H[85;141H8,26[38;26H[?25h[?25l[85;130H~@k[38;26H[85;130H   [39;26H[46m([19C)[m[85;141H9[39;26H[?25h[?25l[85;130H~@k[39;26H[85;130H   [39;27H([19C)[85;144H7[39;27H[?25h[?25l[85;130H~@k[39;27H[85;130H   [38;27H[85;141H8[38;27H[?25h[?25l[85;130H~@k[38;27H[85;130H   [38;28H[85;144H8[38;28H[?25h[?25l[85;130H~@k[38;28H[85;130H   [38;29H[85;144H9[38;29H[?25h[?25l[85;130H~@k[38;29H[85;130H   [38;30H[85;143H30[38;30H[?25h[?25l[85;130H~@k[38;30H[85;130H   [38;31H[85;144H1[38;31H[?25h[?25l[85;130H~@k[38;31H[85;130H   [38;32H[85;144H2[38;32H[?25h[?25l[85;130Ha[38;32H[85;130H [38;33H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H38,33[9CAll[38;12H[46m([20C)[?25h[?25l[m[31m[46m1[m):[31m1[m[46m)[m[85;144H4[38;34H[?25h[?25l[38;12H([21C)[85;141H7,25[37;25H[?25h[85;1H[K[37;24H[?25l[85;130H^[[37;24H[85;130H  [37;25H[85;140H37,24[9CAll[37;24H[?25h[?25l[85;130H:[37;24H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lexer.py" 61L, 1729C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ clearvim lexer.py [7@./lexer.py data.txt[C
Token(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='A', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='I', lexeme='I')
Token(kind='D', lexeme='D')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='44')
Token(kind='/', lexeme='/')
Token(kind='a', lexeme='a')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='f', lexeme='f')
Token(kind='s', lexeme='s')
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt clear[Kvim lexer.py 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lexer.py" 61L, 1729C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple

[34m#Using the next_match() function provides a workaround for the fact
#that Python 3.7 does not support assignment expressions.  In fact,
#the clumsy nested if-then-else handling in exactly this situation of
#regex matching is cited as part of the rationale for the recent
#addition of assignment expressions using the `:=` walrus operator to
#Python 3.8.
#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>


#returns pair containing regex match-object and token kind.  If token
#should be ignored, kind should be returned as None.
#note that m.group() gives lexeme after a successful match[m
[33mdef[m [36mnext_match[m(text):
    m = re.compile([31mr'\s+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [36mNone[m)  [34m#None kind means ignore[m[23;5Hm = re.compile([31mr'\d+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[26;5Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m
    [33mif[m (m): [33mreturn[m (m, m.group())


[33mdef[m [36mscan[m(text):
    tokens = []
    comment = [31m0[m
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[34;9H(match, kind) = next_match(text)[35;9Hlexeme = match.group()[36;9H[33mif[m(kind == [31m'/'[m):[37;13Hcomment += [31m1[m[38;9H[33mif[m (kind [33mand[m comment != [31m1[m):[39;13Htokens.append(Token(kind, lexeme))[40;9Htext = text[[36mlen[m(lexeme):]
    [33mreturn[m tokens

[33mdef[m [36mmain[m():
    [33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    tokens = scan(contents)
    [33mfor[m t [33min[m tokens: [36mprint[m(t)

[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[51;9Hcontent = [36mfile[m.read()
    [33mreturn[m content

Token = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():
    [36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)

[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H37,24[9CAll[37;24H[?25h[?1000l[?1002h[?25l[85;130H~@k[37;24H[85;130H   [38;24H[85;141H8[38;24H[?25h[?25l[85;130H~@k[38;24H[85;130H   [39;24H[85;141H9[39;24H[?25h[?25l[85;130H~@k[39;24H[85;130H   [40;24H[46m([mlexeme[46m)[m[85;140H40[40;24H[?25h[?25l[85;130H~@k[40;24H[85;130H   [41;17H[40;24H(lexeme)[85;141H1,17[41;17H[?25h[?25l[85;130H~@k[41;17H[85;130H   [42;1H[85;141H2,0-1[42;1H[?25h[?25l[85;130H~@k[42;1H[85;130H   [43;11H[85;141H3,11 [43;11H[?25h[?25l[85;130H~@k[43;11H[85;130H   [44;24H[85;141H4,24[44;24H[?25h[?25l[85;130H~@k[44;24H[85;130H   [45;24H[46m([11C)[m[85;141H5[45;24H[?25h[?25l[85;130H~@k[45;24H[85;130H   [46;24H[45;24H([11C)[85;141H6[46;24H[?25h[?25l[85;130H~@k[46;24H[85;130H   [45;24H[46m([11C)[m[85;141H5[45;24H[?25h[?25l[85;130H~@k[45;24H[85;130H   [44;24H[45;24H([11C)[85;141H4[44;24H[?25h[?25l[85;130H~@k[44;24H[85;130H   [43;11H[85;141H3,11[43;11H[?25h[?25l[85;130H~@k[43;11H[85;130H   [42;1H[85;141H2,0-1[42;1H[?25h[?25l[85;130H~@k[42;1H[85;130H   [41;17H[85;141H1,17 [41;17H[?25h[?25l[85;130H~@k[41;17H[85;130H   [40;24H[46m([mlexeme[46m)[m[85;141H0,24[40;24H[?25h[?25l[85;130H~@k[40;24H[85;130H   [39;24H[40;24H(lexeme)[85;140H39[39;24H[?25h[?25l[85;130H~@k[39;24H[85;130H   [38;24H[85;141H8[38;24H[?25h[?25l[85;130H~@k[38;24H[85;130H   [37;24H[85;141H7[37;24H[?25h[?25l[85;130H~@k[37;24H[85;130H   [38;24H[85;141H8[38;24H[?25h[?25l[85;130H~@k[38;24H[85;130H   [37;24H[85;141H7[37;24H[?25h[?25l[85;130H~@k[37;24H[85;130H   [37;24H[?25h[?25l[85;130Ha[37;24H[85;130H [37;25H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H37,25[9CAll[37;25H[?25h[?25l[37;24H[K[85;144H4[37;24H[?25h[?25l[31m2[m[85;144H5[37;25H[?25h[?25l[85;141H8[38;25H[?25h[?25l[85;144H6[38;26H[?25h[?25l[85;144H7[38;27H[?25h[?25l[85;144H8[38;28H[?25h[?25l[85;144H9[38;29H[?25h[?25l[85;143H30[38;30H[?25h[?25l[85;144H1[38;31H[?25h[?25l[85;144H2[38;32H[?25h[?25l[85;141H7,25[37;25H[?25h[?25l[37;24H[K[85;144H4[37;24H[?25h[?25l[31m1[m[85;144H5[37;25H[?25h[?25l[85;141H8[38;25H[?25h[?25l[85;144H6[38;26H[?25h[?25l[85;144H7[38;27H[?25h[?25l[85;144H8[38;28H[?25h[?25l[85;144H9[38;29H[?25h[?25l[85;143H30[38;30H[?25h[?25l[85;144H1[38;31H[?25h[?25l[85;144H2[38;32H[?25h[?25l[85;144H3[38;33H[?25h[?25l[38;12H[46m([21C)[m[85;144H4[38;34H[?25h[?25l[31m[46m2[m):[31m2[m[46m)[m[85;144H5[38;35H[?25h[?25l)[46m:[m [46m)[m:[85;144H4[38;34H[?25h[?25l)[46m:[m [46m)[m:[85;144H3[38;33H[?25h[?25l[31m[46m2[m):[31m2[m[46m)[m[85;144H4[38;34H[?25h[85;1H[K[38;33H[?25l[85;130H^[[38;33H[85;130H  [38;34H[38;12H([21C)[85;140H38,33[9CAll[38;33H[?25h[?25l[85;130H:[38;33H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lexer.py" 61L, 1729C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ vim lexer.py [7@./lexer.py data.txt[C
Token(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='A', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='I', lexeme='I')
Token(kind='D', lexeme='D')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='44')
Token(kind='/', lexeme='/')
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt [7Pvim lexer.py[C[7@./lexer.py data.txt[C
Token(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='A', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='I', lexeme='I')
Token(kind='D', lexeme='D')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='44')
Token(kind='/', lexeme='/')
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt [7Pvim lexer.py[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lexer.py" 61L, 1729C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple

[34m#Using the next_match() function provides a workaround for the fact
#that Python 3.7 does not support assignment expressions.  In fact,
#the clumsy nested if-then-else handling in exactly this situation of
#regex matching is cited as part of the rationale for the recent
#addition of assignment expressions using the `:=` walrus operator to
#Python 3.8.
#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>


#returns pair containing regex match-object and token kind.  If token
#should be ignored, kind should be returned as None.
#note that m.group() gives lexeme after a successful match[m
[33mdef[m [36mnext_match[m(text):
    m = re.compile([31mr'\s+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [36mNone[m)  [34m#None kind means ignore[m[23;5Hm = re.compile([31mr'\d+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[26;5Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m
    [33mif[m (m): [33mreturn[m (m, m.group())


[33mdef[m [36mscan[m(text):
    tokens = []
    comment = [31m0[m
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[34;9H(match, kind) = next_match(text)[35;9Hlexeme = match.group()[36;9H[33mif[m(kind == [31m'/'[m):[37;13Hcomment += [31m1[m[38;9H[33mif[m (kind [33mand[m comment != [31m2[m):[39;13Htokens.append(Token(kind, lexeme))[40;9Htext = text[[36mlen[m(lexeme):]
    [33mreturn[m tokens

[33mdef[m [36mmain[m():
    [33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    tokens = scan(contents)
    [33mfor[m t [33min[m tokens: [36mprint[m(t)

[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[51;9Hcontent = [36mfile[m.read()
    [33mreturn[m content

Token = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():
    [36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)

[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H38,33[9CAll[38;33H[?25h[?1000l[?1002h[?25l[85;130H~@k[38;33H[85;130H   [39;33H[85;141H9[39;33H[?25h[?25l[85;130H~@k[39;33H[85;130H   [38;33H[85;141H8[38;33H[?25h[?25l[85;130H~@k[38;33H[85;130H   [37;24H[85;141H7,24[37;24H[?25h[?25l[85;130H~@k[37;24H[85;130H   [36;24H[85;141H6[36;24H[?25h[?25l[85;130H~@k[36;24H[85;130H   [36;24H[?25h[?25l[85;130Ha[36;24H[85;130H [36;25H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H36,25[9CAll[36;25H[?25h[?25l[85;141H7[37;25H[?25h[?25l[38;84r[38;1H[L[1;85r[85;140H[K[85;140H38,13[9CAll[38;13H[?25h[?25lc[85;144H4[38;14H[?25h[?25lo[85;144H5[38;15H[?25h[?25ln[85;144H6[38;16H[?25h[?25lt[85;144H7[38;17H[?25h[?25li[85;144H8[38;18H[?25h[?25ln[85;144H9[38;19H[?25h[?25lu[85;143H20[38;20H[?25h[?25li[85;144H1[38;21H[?25h[?25l[38;20H[K[85;144H0[38;20H[?25h[?25l[38;13H[33mcontinue[m[85;144H1[38;21H[?25h[85;1H[K[38;20H[?25l[85;130H^[[38;20H[85;130H  [38;21H[85;140H38,20[9CAll[38;20H[?25h[?25l[85;130H:[38;20H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lexer.py" 62L, 1750C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ clearvim lexer.py [7@./lexer.py data.txt[C
^Z
[1]+  Stopped                 ./lexer.py data.txt
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt clear[Kvim lexer.py 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lexer.py" 62L, 1750C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple

[34m#Using the next_match() function provides a workaround for the fact
#that Python 3.7 does not support assignment expressions.  In fact,
#the clumsy nested if-then-else handling in exactly this situation of
#regex matching is cited as part of the rationale for the recent
#addition of assignment expressions using the `:=` walrus operator to
#Python 3.8.
#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>


#returns pair containing regex match-object and token kind.  If token
#should be ignored, kind should be returned as None.
#note that m.group() gives lexeme after a successful match[m
[33mdef[m [36mnext_match[m(text):
    m = re.compile([31mr'\s+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [36mNone[m)  [34m#None kind means ignore[m[23;5Hm = re.compile([31mr'\d+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[26;5Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m
    [33mif[m (m): [33mreturn[m (m, m.group())


[33mdef[m [36mscan[m(text):
    tokens = []
    comment = [31m0[m
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[34;9H(match, kind) = next_match(text)[35;9Hlexeme = match.group()[36;9H[33mif[m(kind == [31m'/'[m):[37;13Hcomment += [31m1[m[38;13H[33mcontinue[39;9Hif[m (kind [33mand[m comment != [31m2[m):[40;13Htokens.append(Token(kind, lexeme))[41;9Htext = text[[36mlen[m(lexeme):]
    [33mreturn[m tokens

[33mdef[m [36mmain[m():
    [33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    tokens = scan(contents)
    [33mfor[m t [33min[m tokens: [36mprint[m(t)

[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[52;9Hcontent = [36mfile[m.read()
    [33mreturn[m content

Token = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():
    [36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)

[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H38,20[9CAll[38;20H[?25h[?1000l[?1002h[?25l[85;130Ha[38;20H[85;130H [38;21H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H38,21[9CAll[38;21H[?25h[?25l[38;13Hcontinu[38;20H[K[85;144H0[38;20H[?25h[?25l[38;19H[K[85;143H19[38;19H[?25h[?25l[38;18H[K[85;144H8[38;18H[?25h[?25l[38;17H[K[85;144H7[38;17H[?25h[?25l[38;16H[K[85;144H6[38;16H[?25h[?25l[38;15H[K[85;144H5[38;15H[?25h[?25l[38;14H[K[85;144H4[38;14H[?25h[?25l[38;13H[K[85;144H3[38;13H[?25h[?25ln[85;144H4[38;14H[?25h[?25le[85;144H5[38;15H[?25h[?25lx[85;144H6[38;16H[?25h[?25l[36mnext[m[85;144H7[38;17H[?25h[?25l[85;144H8[38;18H[?25h[?25l[85;144H7[38;17H[?25h[?25lnex[38;16H[K[85;144H6[38;16H[?25h[?25l[38;15H[K[85;144H5[38;15H[?25h[?25l[38;14H[K[85;144H4[38;14H[?25h[?25l[38;13H[K[85;144H3[38;13H[?25h[?25lt[85;144H4[38;14H[?25h[?25le[85;144H5[38;15H[?25h[?25lm[85;144H6[38;16H[?25h[?25lp[85;144H7[38;17H[?25h[?25l[85;144H8[38;18H[?25h[?25l=[85;144H9[38;19H[?25h[?25l[85;143H20[38;20H[?25h[?25lt[85;144H1[38;21H[?25h[?25lr[85;144H2[38;22H[?25h[?25lu[85;144H3[38;23H[?25h[?25le[85;144H4[38;24H[?25h[?25l[38;23H[K[85;144H3[38;23H[?25h[?25l[38;22H[K[85;144H2[38;22H[?25h[?25l[38;21H[K[85;144H1[38;21H[?25h[?25l[38;20H[K[85;144H0[38;20H[?25h[?25lT[85;144H1[38;21H[?25h[?25lr[85;144H2[38;22H[?25h[?25lu[85;144H3[38;23H[?25h[?25l[36mTrue[m[85;144H4[38;24H[?25h[?25l[85;141H9[39;24H[?25h[?25l[85;144H5[39;25H[?25h[?25l[85;144H6[39;26H[?25h[?25l[85;144H7[39;27H[?25h[?25l[85;144H8[39;28H[?25h[?25l[85;144H9[39;29H[?25h[?25l[85;143H30[39;30H[?25h[?25l[85;144H1[39;31H[?25h[?25l[85;144H2[39;32H[?25h[?25l[85;144H3[39;33H[?25h[?25l[39;12H[46m([21C)[m[85;144H4[39;34H[?25h[?25l[46m [m): [46m)[m[85;144H5[39;35H[?25h[?25l[46ma[m):a[46m)[m[85;144H6[39;36H[?25h[?25l[46mn[m):n[46m)[m[85;144H7[39;37H[?25h[?25l[33man[m[33m[46md[m):[33md[m[46m)[m[85;144H8[39;38H[?25h[?25l[46m [m): [46m)[m[85;144H9[39;39H[?25h[?25l[46mt[m):t[46m)[m[85;143H40[39;40H[?25h[?25l[46me[m):e[46m)[m[85;144H1[39;41H[?25h[?25l[46mm[m):m[46m)[m[85;144H2[39;42H[?25h[?25l[46mp[m):p[46m)[m[85;144H3[39;43H[?25h[?25l[46m [m): [46m)[m[85;144H4[39;44H[?25h[?25l[46m+[m):+[46m)[m[85;144H5[39;45H[?25h[?25l)[46m:[m [46m)[m:[85;144H4[39;44H[?25h[?25l[46m=[m):=[46m)[m[85;144H5[39;45H[?25h[?25l[46m![m):![46m)[m[85;144H6[39;46H[?25h[?25l)[46m:[m [46m)[m:[85;144H5[39;45H[?25h[?25l)[46m:[m [46m)[m:[85;144H4[39;44H[?25h[?25l[46m![m):![46m)[m[85;144H5[39;45H[?25h[?25l[46m=[m):=[46m)[m[85;144H6[39;46H[?25h[?25l[46m [m): [46m)[m[85;144H7[39;47H[?25h[?25l[46mf[m):f[46m)[m[85;144H8[39;48H[?25h[?25l)[46m:[m [46m)[m:[85;144H7[39;47H[?25h[?25l[46mT[m):T[46m)[m[85;144H8[39;48H[?25h[?25l[46mr[m):r[46m)[m[85;144H9[39;49H[?25h[?25l[46mu[m):u[46m)[m[85;143H50[39;50H[?25h[?25l[36mTru[m[36m[46me[m):[36me[m[46m)[m[85;144H1[39;51H[?25h[?25l[39;12H([38C)[40;26H[46m([19C)[m[85;140H40,47[40;47H[?25h[?25l[40;26H([19C)[41;20H[46m[[12C][m[85;141H1,34[41;34H[?25h[?25l[42;84r[42;1H[L[1;85r[85;140H[K[85;140H42,9[10CAll[41;20H[[12C][42;9H[?25h[?25lt[85;143H10[42;10H[?25h[?25le[85;144H1[42;11H[?25h[?25lm[85;144H2[42;12H[?25h[?25lp[85;144H3[42;13H[?25h[?25l[85;144H4[42;14H[?25h[?25l=[85;144H5[42;15H[?25h[?25l[85;144H6[42;16H[?25h[?25lT[85;144H7[42;17H[?25h[?25lr[85;144H8[42;18H[?25h[?25lu[85;144H9[42;19H[?25h[?25l[36mTrue[m[85;143H20[42;20H[?25h[?25l[41;20H[46m[[12C][m[85;141H1[41;20H[?25h[?25l[[12C][85;141H0[40;20H[?25h[?25l[85;140H39[39;20H[?25h[?25l[85;141H8[38;20H[?25h[?25l[85;144H1[38;21H[?25h[?25l[85;144H2[38;22H[?25h[?25l[85;144H3[38;23H[?25h[?25l[85;144H4[38;24H[?25h[?25l[85;141H7[37;24H[?25h[?25l[36;11H[46m([11C)[m[85;141H6[36;24H[?25h[?25l[36;11H([11C)[85;141H5[35;24H[?25h[?25l[85;141H4[34;24H[?25h[?25l[85;141H3[33;24H[?25h[?25l[85;141H2,16[32;16H[?25h[?25l[33;84r[33;1H[L[1;85r[85;140H[K[85;140H33,5[10CAll[33;5H[?25h[?25lt[85;143H6[33;6H[?25h[?25le[85;143H7[33;7H[?25h[?25lm[85;143H8[33;8H[?25h[?25lp[85;143H9[33;9H[?25h[?25l[85;143H10[33;10H[?25h[?25l=[85;144H1[33;11H[?25h[?25l[85;144H2[33;12H[?25h[?25lf[85;144H3[33;13H[?25h[?25la[85;144H4[33;14H[?25h[?25ll[85;144H5[33;15H[?25h[?25ls[85;144H6[33;16H[?25h[?25le[85;144H7[33;17H[?25h[?25l[33;16H[K[85;144H6[33;16H[?25h[?25l[33;15H[K[85;144H5[33;15H[?25h[?25l[33;14H[K[85;144H4[33;14H[?25h[?25l[33;13H[K[85;144H3[33;13H[?25h[?25l[33;12H[K[85;144H2[33;12H[?25h[?25lF[85;144H3[33;13H[?25h[?25la[85;144H4[33;14H[?25h[?25ll[85;144H5[33;15H[?25h[?25ls[85;144H6[33;16H[?25h[?25l[36mFalse[m[85;144H7[33;17H[?25h[85;1H[K[33;16H[?25l[85;130H^[[33;16H[85;130H  [33;17H[85;140H33,16[9CAll[33;16H[?25h[?25l[85;130H:[33;16H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lexer.py" 64L, 1807C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ clearvim lexer.py [7@./lexer.py data.txt[C
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt clear[Kvim lexer.py 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lexer.py" 64L, 1807C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple

[34m#Using the next_match() function provides a workaround for the fact
#that Python 3.7 does not support assignment expressions.  In fact,
#the clumsy nested if-then-else handling in exactly this situation of
#regex matching is cited as part of the rationale for the recent
#addition of assignment expressions using the `:=` walrus operator to
#Python 3.8.
#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>


#returns pair containing regex match-object and token kind.  If token
#should be ignored, kind should be returned as None.
#note that m.group() gives lexeme after a successful match[m
[33mdef[m [36mnext_match[m(text):
    m = re.compile([31mr'\s+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [36mNone[m)  [34m#None kind means ignore[m[23;5Hm = re.compile([31mr'\d+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[26;5Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m
    [33mif[m (m): [33mreturn[m (m, m.group())


[33mdef[m [36mscan[m(text):
    tokens = []
    comment = [31m0[m
    temp = [36mFalse[m
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[35;9H(match, kind) = next_match(text)[36;9Hlexeme = match.group()[37;9H[33mif[m(kind == [31m'/'[m):[38;13Hcomment += [31m1[m[39;13Htemp = [36mTrue[m[40;9H[33mif[m (kind [33mand[m comment != [31m2[m [33mand[m temp != [36mTrue[m):[41;13Htokens.append(Token(kind, lexeme))[42;9Htext = text[[36mlen[m(lexeme):][43;9Htemp = [36mTrue[m
    [33mreturn[m tokens

[33mdef[m [36mmain[m():
    [33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    tokens = scan(contents)
    [33mfor[m t [33min[m tokens: [36mprint[m(t)

[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[54;9Hcontent = [36mfile[m.read()
    [33mreturn[m content

Token = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():
    [36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)

[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H33,16[9CAll[33;16H[?25h[?1000l[?1002h[?25l[85;130H~@k[33;16H[85;130H   [34;16H[85;141H4[34;16H[?25h[?25l[85;130H~@k[34;16H[85;130H   [35;16H[85;141H5[35;16H[?25h[?25l[85;130H~@k[35;16H[85;130H   [36;16H[85;141H6[36;16H[?25h[?25l[85;130H~@k[36;16H[85;130H   [37;16H[85;141H7[37;16H[?25h[?25l[85;130H~@k[37;16H[85;130H   [38;16H[85;141H8[38;16H[?25h[?25l[85;130H~@k[38;16H[85;130H   [39;16H[85;141H9[39;16H[?25h[?25l[85;130H~@k[39;16H[85;130H   [40;16H[85;140H40[40;16H[?25h[?25l[85;130H~@k[40;16H[85;130H   [40;17H[85;144H7[40;17H[?25h[?25l[85;130H~@k[40;17H[85;130H   [40;18H[85;144H8[40;18H[?25h[?25l[85;130H~@k[40;18H[85;130H   [40;19H[85;144H9[40;19H[?25h[?25l[85;130H~@k[40;19H[85;130H   [40;20H[85;143H20[40;20H[?25h[?25l[85;130H~@k[40;20H[85;130H   [40;21H[85;144H1[40;21H[?25h[?25l[85;130H~@k[40;21H[85;130H   [40;22H[85;144H2[40;22H[?25h[?25l[85;130H~@k[40;22H[85;130H   [40;23H[85;144H3[40;23H[?25h[?25l[85;130H~@k[40;23H[85;130H   [40;24H[85;144H4[40;24H[?25h[?25l[85;130H~@k[40;24H[85;130H   [40;25H[85;144H5[40;25H[?25h[?25l[85;130H~@k[40;25H[85;130H   [40;26H[85;144H6[40;26H[?25h[?25l[85;130H~@k[40;26H[85;130H   [40;27H[85;144H7[40;27H[?25h[?25l[85;130H~@k[40;27H[85;130H   [40;28H[85;144H8[40;28H[?25h[?25l[85;130H~@k[40;28H[85;130H   [40;29H[85;144H9[40;29H[?25h[?25l[85;130H~@k[40;29H[85;130H   [40;30H[85;143H30[40;30H[?25h[?25l[85;130H~@k[40;30H[85;130H   [40;31H[85;144H1[40;31H[?25h[?25l[85;130H~@k[40;31H[85;130H   [40;32H[85;144H2[40;32H[?25h[?25l[85;130H~@k[40;32H[85;130H   [40;33H[85;144H3[40;33H[?25h[?25l[85;130H~@k[40;33H[85;130H   [40;34H[85;144H4[40;34H[?25h[?25l[85;130H~@k[40;34H[85;130H   [40;35H[85;144H5[40;35H[?25h[?25l[85;130H~@k[40;35H[85;130H   [40;36H[85;144H6[40;36H[?25h[?25l[85;130H~@k[40;36H[85;130H   [41;36H[85;141H1[41;36H[?25h[?25l[85;130H~@k[41;36H[85;130H   [42;33H[42;20H[46m[[12C][m[85;141H2,33[42;33H[?25h[?25l[85;130H~@k[42;33H[85;130H   [43;19H[42;20H[[12C][85;141H3,19[43;19H[?25h[?25l[85;130Ha[43;19H[85;130H [43;20H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H43,20[9CAll[43;20H[?25h[?25lTru[43;19H[K[85;143H19[43;19H[?25h[?25l[43;18H[K[85;144H8[43;18H[?25h[?25l[43;17H[K[85;144H7[43;17H[?25h[?25l[43;16H[K[85;144H6[43;16H[?25h[?25lf[85;144H7[43;17H[?25h[?25la[85;144H8[43;18H[?25h[?25ll[85;144H9[43;19H[?25h[?25ls[85;143H20[43;20H[?25h[?25le[85;144H1[43;21H[?25h[?25l[43;20H[K[85;144H0[43;20H[?25h[?25l[43;19H[K[85;143H19[43;19H[?25h[?25l[43;18H[K[85;144H8[43;18H[?25h[?25l[43;17H[K[85;144H7[43;17H[?25h[?25l[43;16H[K[85;144H6[43;16H[?25h[?25lF[85;144H7[43;17H[?25h[?25la[85;144H8[43;18H[?25h[?25l;[85;144H9[43;19H[?25h[?25ls[85;143H20[43;20H[?25h[?25le[85;144H1[43;21H[?25h[?25l[43;20H[K[85;144H0[43;20H[?25h[?25l[43;19H[K[85;143H19[43;19H[?25h[?25l[43;18H[K[85;144H8[43;18H[?25h[?25ll[85;144H9[43;19H[?25h[?25ls[85;143H20[43;20H[?25h[?25l[36mFalse[m[85;144H1[43;21H[?25h[?25lFalse1[85;144H2[43;22H[?25h[?25l[36mFalse[m[43;21H[K[85;144H1[43;21H[?25h[85;1H[K[43;20H[?25l[85;130H^[[43;20H[85;130H  [43;21H[85;140H43,20[9CAll[43;20H[?25h[?25l[85;130H:[43;20H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"lexer.py" 64L, 1808C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ clearvim lexer.py [7@./lexer.py data.txt[C
Token(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='A', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='I', lexeme='I')
Token(kind='D', lexeme='D')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='44')
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt clear[Kvim lexer.py 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"lexer.py" 64L, 1808C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple

[34m#Using the next_match() function provides a workaround for the fact
#that Python 3.7 does not support assignment expressions.  In fact,
#the clumsy nested if-then-else handling in exactly this situation of
#regex matching is cited as part of the rationale for the recent
#addition of assignment expressions using the `:=` walrus operator to
#Python 3.8.
#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>


#returns pair containing regex match-object and token kind.  If token
#should be ignored, kind should be returned as None.
#note that m.group() gives lexeme after a successful match[m
[33mdef[m [36mnext_match[m(text):
    m = re.compile([31mr'\s+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [36mNone[m)  [34m#None kind means ignore[m[23;5Hm = re.compile([31mr'\d+'[m).match(text)
    [33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[26;5Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m
    [33mif[m (m): [33mreturn[m (m, m.group())


[33mdef[m [36mscan[m(text):
    tokens = []
    comment = [31m0[m
    temp = [36mFalse[m
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[35;9H(match, kind) = next_match(text)[36;9Hlexeme = match.group()[37;9H[33mif[m(kind == [31m'/'[m):[38;13Hcomment += [31m1[m[39;13Htemp = [36mTrue[m[40;9H[33mif[m (kind [33mand[m comment != [31m2[m [33mand[m temp != [36mTrue[m):[41;13Htokens.append(Token(kind, lexeme))[42;9Htext = text[[36mlen[m(lexeme):][43;9Htemp = [36mFalse[m
    [33mreturn[m tokens

[33mdef[m [36mmain[m():
    [33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    tokens = scan(contents)
    [33mfor[m t [33min[m tokens: [36mprint[m(t)

[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[54;9Hcontent = [36mfile[m.read()
    [33mreturn[m content

Token = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():
    [36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)

[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H43,20[9CAll[43;20H[?25h[?1000l[?1002h[?25l[85;130H^[[43;20H[85;130H  [43;20H[85;130H^[[43;20H[85;130H  [43;20H[?25h[?25l[85;130H:[43;20H[85;1H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/lexer$ clear[K[K[K[K[Kvim lexer.py [7@./lexer.py data.txt[Cclear[Kvim lexer.py [7@./lexer.py data.txt[C[7Pvim lexer.py[C[8Pclear./lexer.py data.txt [7Pvim lexer.py[C[Kcd ..
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises$ cd[K[Kcd calc/
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ la
bash: la: command not found
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ls
calc.mjs  calc.py  data.txt  expn-data.txt
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ cat data.txt 
1 + 2 - 3;

--2 - (3 - 4);
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs
usage: calc.mjs INPUT_FILE
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs data.txt 
[ [33m0[39m, [33m3[39m ]
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs data.txt [C[1@e[1@x[1@p[1@n[1@-
expecting ; at *
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [5P[C[C[C[C[C[C[C[C[C[Kcat data.txt [3P./calc.mjs data.txt [5@expn-[C[C[C[C[C[C[C[C[C[Kvim calc.py
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.py" 125L, 2745C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple


[31m"""
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
"""[m

[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[29;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[31;9H[33mnonlocal[m lookahead[32;9H[33mif[m (lookahead.kind == kind):[33;13Hlookahead = nextToken()[34;9H[33melse[m:[35;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[36;19H[36mfile[m=sys.stderr)[37;13Hsys.exit([31m1[m)
    [33mdef[m [36mnextToken[m():[39;9H[33mnonlocal[m index[40;9H[33mif[m (index >= [36mlen[m(tokens)):[41;13H[33mreturn[m Token([31m'EOF'[m, [31m'<EOF>'[m)[42;9H[33melse[m:[43;13Htok = tokens[index][44;13Hindex += [31m1[m[45;13H[33mreturn[m tok[47;5H[33mdef[m [36mprogram[m():[48;9Hvalues = [][49;9H[33mwhile[m ([33mnot[m check([31m'EOF'[m)):[50;13Hvalues.append(expr())[51;13Hmatch([31m';'[m)[52;9H[33mreturn[m values[54;5H[33mdef[m [36mexpr[m():[55;9Ht = term()[56;9H[33mwhile[m (check([31m'+'[m) [33mor[m (check([31m'-'[m))):[57;13Hkind = lookahead.kind[58;13Hmatch(kind)[59;13Ht1 = term()[60;13Ht += (t1 [33mif[m (kind == [31m'+'[m) [33melse[m -t1)[61;9H[33mreturn[m t[63;5H[33mdef[m [36mterm[m():[64;9H[33mif[m (check([31m'-'[m)):[65;13Hmatch([31m'-'[m)[66;13H[33mreturn[m - term()[67;9H[33melse[m:[68;13H[33mreturn[m factor()[70;5H[33mdef[m [36mfactor[m():[71;9H[33mif[m (check([31m'INT'[m)):[72;13Hvalue = [36mint[m(lookahead.lexeme)[73;13Hmatch([31m'INT'[m)[74;13H[33mreturn[m value[75;9H[33melse[m:[76;13Hmatch([31m'('[m)[77;13Hvalue = expr()[78;13Hmatch([31m')'[m)[79;13H[33mreturn[m value[81;5H[34m#begin parse()[m
    tokens = scan(text)
    index = [31m0[m
    lookahead = nextToken()[85;140H1,1[11CTop[1;1H[?25h[?1000l[?1002h[?25l[1;84r[1;1H[3M[1;85r[82;5Hvalue = program()
    [33mif[m ([33mnot[m check([31m'EOF'[m)):[84;9H[36mprint[m(f[31m'expecting <EOF>, got {lookahead.lexeme}'[m, [36mfile[m=sys.stderr)[85;1H[K[85;140H9,1[12C7%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hsys.exit([31m1[m)
    [33mreturn[m value[85;140H[K[85;140H12,1[10C14%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mdef[m [36mscan[m(text):
    [33mdef[m [36mnext_match[m(text):[84;9Hm = re.compile([31mr'\s+'[m).match(text)[85;140H[K[85;140H15,1[10C21%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9H[33mif[m (m): [33mreturn[m (m, [36mNone[m)[83;9Hm = re.compile([31mr'\d+'[m).match(text)[84;9H[33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[85;140H[K[85;140H18,1[10C29%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m[83;9H[33mif[m (m): [33mreturn[m (m, m.group())[85;140H[K[85;140H21,1[10C36%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5Htokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[84;9H(match, kind) = next_match(text)[85;140H[K[85;140H24,1[10C43%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hlexeme = match.group()[83;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[84;9Htext = text[[36mlen[m(lexeme):][85;140H[K[85;140H27,1[10C51%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mreturn[m tokens

[33mdef[m [36mmain[m():[85;140H[K[85;140H30,1[10C58%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    [36mprint[m(parse(contents))[85;140H[K[85;140H33,1[10C65%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[85;140H[K[85;140H36,1[10C73%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hcontent = [36mfile[m.read()
    [33mreturn[m content[85;140H[K[85;140H39,1[10C80%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1HToken = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():[85;140H[K[85;140H42,1[10C87%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)[85;140H[K[85;140H45,1[10C95%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [m[85;140H[K[85;140H48,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H51,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H54,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H57,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H60,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H63,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H66,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H69,0-1[8CBot[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H72,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H75,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H78,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33mdef[m [36mfactor[m():[2;9H[33mif[m (check([31m'INT'[m)):[3;13Hvalue = [36mint[m(lookahead.lexeme)[85;140H[K[85;140H78,1[10CBot[9;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33melse[m:[2;13H[33mreturn[m factor()[85;140H[K[85;140H78,1[10CBot[12;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mif[m (check([31m'-'[m)):[2;13Hmatch([31m'-'[m)[3;13H[33mreturn[m - term()[85;140H[K[85;140H78,1[10CBot[15;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mreturn[m t[3;5H[33mdef[m [36mterm[m():[85;140H[K[85;140H78,1[10CBot[18;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;13Hmatch(kind)[2;13Ht1 = term()[3;13Ht += (t1 [33mif[m (kind == [31m'+'[m) [33melse[m -t1)[85;140H[K[85;140H78,1[10CBot[21;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9Ht = term()[2;9H[33mwhile[m (check([31m'+'[m) [33mor[m (check([31m'-'[m))):[3;13Hkind = lookahead.kind[85;140H[K[85;140H78,1[10CBot[24;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mreturn[m values[3;5H[33mdef[m [36mexpr[m():[85;140H[K[85;140H78,1[10CBot[27;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mwhile[m ([33mnot[m check([31m'EOF'[m)):[2;13Hvalues.append(expr())[3;13Hmatch([31m';'[m)[85;140H[K[85;140H78,1[10CBot[30;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;5H[33mdef[m [36mprogram[m():[3;9Hvalues = [][85;140H[K[85;140H78,1[10CBot[33;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;13Htok = tokens[index][2;13Hindex += [31m1[m[3;13H[33mreturn[m tok[85;140H[K[85;140H78,1[10CBot[36;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mif[m (index >= [36mlen[m(tokens)):[2;13H[33mreturn[m Token([31m'EOF'[m, [31m'<EOF>'[m)[3;9H[33melse[m:[85;140H[K[85;140H78,1[10C95%[39;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;13Hsys.exit([31m1[m)
    [33mdef[m [36mnextToken[m():[3;9H[33mnonlocal[m index[85;140H[K[85;140H78,1[10C87%[42;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33melse[m:[2;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[3;19H[36mfile[m=sys.stderr)[85;140H[K[85;140H78,1[10C80%[45;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mnonlocal[m lookahead[2;9H[33mif[m (lookahead.kind == kind):[3;13Hlookahead = nextToken()[85;140H[K[85;140H78,1[10C73%[48;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[85;140H[K[85;140H78,1[10C65%[51;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;1H[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[85;140H[K[85;140H78,1[10C58%[54;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  | '(' expr ')'
  ;
"""[m[85;140H[K[85;140H78,1[10C51%[57;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  ;
factor
  : INT[m[85;140H[K[85;140H78,1[10C43%[60;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31mterm
  : '-' term
  | factor[m[85;140H[K[85;140H78,1[10C36%[63;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31mexpr
  : term ( ( '+' | '-' ) term )*
  ;[m[85;140H[K[85;140H78,1[10C29%[66;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  : expr ';' program
  | #empty
  ;[m[85;140H[K[85;140H78,1[10C21%[69;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;1H[31m"""
program[m[85;140H[K[85;140H78,1[10C14%[72;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple[85;140H[K[85;140H78,1[11C7%[75;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re[85;140H[K[85;140H78,1[10CTop[78;1H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[85;140H42,13[42;13H[?25h[?25l[85;130H~@k[42;13H[85;130H   [41;40H[41;25H[46m([14C)[m[85;141H1,40[41;40H[?25h[?25l[85;130H^[[41;40H[85;130H  [41;40H[85;130H^[[41;40H[85;130H  [41;40H[?25h[?25l[85;130H:[41;40H[85;130H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ./calc.py data.txt 
[0, 3]
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ./calc.py data.txt [1@e[1@x[1@p[1@n[1@-
expecting ; at *
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ vim c  [K[Kalc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 135L, 2350C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7Ht += (kind === [31m'+'[m) ? t1 : -t1;
    [36m}[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[70;7Hmatch([31m'-'[m);[71;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[74;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m
    [33mif[m (check([31m'INT'[m)) [36m{[m[80;7H[33mconst[m value = parseInt(lookahead.lexeme);[81;7Hmatch([31m'INT'[m);[82;7H[33mreturn[m value;
    [36m}[m
    [33melse[m [36m{[m[85;140H1,1[11CTop[1;1H[?25h[?1000l[?1002h[?25l[85;130H^[[1;1H[85;130H  [1;1H[85;130H^[[1;1H[85;130H  [1;1H[?25h[?25l[85;130H:[1;1H[85;1H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ vim[K[K[K./[K[Kvim calc.py 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.py" 125L, 2745C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple


[31m"""
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
"""[m

[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[29;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[31;9H[33mnonlocal[m lookahead[32;9H[33mif[m (lookahead.kind == kind):[33;13Hlookahead = nextToken()[34;9H[33melse[m:[35;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[36;19H[36mfile[m=sys.stderr)[37;13Hsys.exit([31m1[m)
    [33mdef[m [36mnextToken[m():[39;9H[33mnonlocal[m index[40;9H[33mif[m (index >= [36mlen[m(tokens)):[41;13H[33mreturn[m Token[46m([m[31m'EOF'[m, [31m'<EOF>'[m[46m)[m[42;9H[33melse[m:[43;13Htok = tokens[index][44;13Hindex += [31m1[m[45;13H[33mreturn[m tok[47;5H[33mdef[m [36mprogram[m():[48;9Hvalues = [][49;9H[33mwhile[m ([33mnot[m check([31m'EOF'[m)):[50;13Hvalues.append(expr())[51;13Hmatch([31m';'[m)[52;9H[33mreturn[m values[54;5H[33mdef[m [36mexpr[m():[55;9Ht = term()[56;9H[33mwhile[m (check([31m'+'[m) [33mor[m (check([31m'-'[m))):[57;13Hkind = lookahead.kind[58;13Hmatch(kind)[59;13Ht1 = term()[60;13Ht += (t1 [33mif[m (kind == [31m'+'[m) [33melse[m -t1)[61;9H[33mreturn[m t[63;5H[33mdef[m [36mterm[m():[64;9H[33mif[m (check([31m'-'[m)):[65;13Hmatch([31m'-'[m)[66;13H[33mreturn[m - term()[67;9H[33melse[m:[68;13H[33mreturn[m factor()[70;5H[33mdef[m [36mfactor[m():[71;9H[33mif[m (check([31m'INT'[m)):[72;13Hvalue = [36mint[m(lookahead.lexeme)[73;13Hmatch([31m'INT'[m)[74;13H[33mreturn[m value[75;9H[33melse[m:[76;13Hmatch([31m'('[m)[77;13Hvalue = expr()[78;13Hmatch([31m')'[m)[79;13H[33mreturn[m value[81;5H[34m#begin parse()[m
    tokens = scan(text)
    index = [31m0[m
    lookahead = nextToken()[85;140H41,40[9CTop[41;40H[?25h[?1000l[?1002h[?25l[85;130Hl[41;40H[85;130H [41;40H[?25h[?25l[85;130Hs[41;40H[85;130H [41;40H[85;130Hcl[41;40H[85;130H  [41;40H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H41,40[9CTop[41;40H[K[41;25H([14C[?25h[?25l[42;84r[42;1H[L[1;85r[85;140H[K[85;140H42,21[9CTop[42;21H[?25h[85;1H[K[42;1H[?25l[85;130H^[[42;1H[85;130H  [42;21H[85;140H42,0-1[8CTop[42;1H[?25h[?25l[85;130Hu[42;1H[85;1H1 line less; before #1  2 seconds ago[85;130H[K[41;40H[41;84r[84;1H
[1;85r[41;13H[33mreturn[m Token[46m([m[31m'EOF'[m, [31m'<EOF>'[m[46m)[m[84;5Hlookahead = nextToken()[85;1H[K[85;140H41,40[9CTop1 line less; before #1  2 seconds ago[85;140H[K[85;140H41,40[9CTop[41;40H[?25h[?25l[85;130Hu[41;40H[85;1HAlready at oldest change[85;25H[K[41;40H[85;140H41,40[9CTop[41;40H[?25h[?25l[85;130Hu[41;40H[85;130H[K[41;40H[85;140H41,40[9CTop[41;40H[?25h[?25l[85;130Ha[41;40H[85;130H [41;41H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H41,41[9CTop[41;41H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5Hvalue = program()
    [33mif[m ([33mnot[m check([31m'EOF'[m)):[84;9H[36mprint[m(f[31m'expecting <EOF>, got {lookahead.lexeme}'[m, [36mfile[m=sys.stderr)[85;140H[K[85;140H41,41[10C7%[38;41H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hsys.exit([31m1[m)
    [33mreturn[m value[85;140H[K[85;140H41,41[9C14%[35;41H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mdef[m [36mscan[m(text):
    [33mdef[m [36mnext_match[m(text):[84;9Hm = re.compile([31mr'\s+'[m).match(text)[85;140H[K[85;140H41,41[9C21%[32;41H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9H[33mif[m (m): [33mreturn[m (m, [36mNone[m)[83;9Hm = re.compile([31mr'\d+'[m).match(text)[84;9H[33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[85;140H[K[85;140H41,41[9C29%[29;41H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m[83;9H[33mif[m (m): [33mreturn[m (m, m.group())[85;140H[K[85;140H41,41[9C36%[26;41H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5Htokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[84;9H(match, kind) = next_match(text)[85;140H[K[85;140H41,41[9C43%[23;41H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hlexeme = match.group()[83;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[84;9Htext = text[[36mlen[m(lexeme):][85;140H[K[85;140H41,41[9C51%[20;41H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mreturn[m tokens

[33mdef[m [36mmain[m():[85;140H[K[85;140H41,41[9C58%[17;41H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    [36mprint[m(parse(contents))[85;140H[K[85;140H41,41[9C65%[14;41H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[85;140H[K[85;140H41,41[9C73%[11;41H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hcontent = [36mfile[m.read()
    [33mreturn[m content[85;140H[K[85;140H41,41[9C80%[8;41H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1HToken = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():[85;140H[K[85;140H42,14[9C87%[5;25H([14C)[6;14H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)[85;140H[K[85;140H45,23[9C95%[6;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [m[85;140H[K[85;140H48,20[9CBot[6;18H[46m[][?25h[?25l[1;84r[m[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H51,23[9CBot[3;18H[][6;18H[46m([3C)[?25h[?25l[1;84r[m[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H54,16[9CBot[3;18H([3C)[6;16H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H57,34[9CBot[6;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H60,41[9CBot[6;41H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H63,16[9CBot[6;16H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H66,28[9CBot[6;26H[46m()[?25h[?25l[1;84r[m[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H69,1[10CBot[3;26H()


[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H72,41[9CBot[6;24H[46m([16C)[?25h[?25l[1;84r[m[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H75,14[9CBot[3;24H([16C)[6;14H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H78,23[9CBot[6;18H[46m([3C)[?25h[?25l[1;84r[m[1;1H[3L[1;85r[1;5H[33mdef[m [36mfactor[m():[2;9H[33mif[m (check([31m'INT'[m)):[3;13Hvalue = [36mint[m(lookahead.lexeme)[85;140H[K[85;140H78,23[9CBot[9;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33melse[m:[2;13H[33mreturn[m factor()[85;140H[K[85;140H78,23[9CBot[12;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mif[m (check([31m'-'[m)):[2;13Hmatch([31m'-'[m)[3;13H[33mreturn[m - term()[85;140H[K[85;140H78,23[9CBot[15;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mreturn[m t[3;5H[33mdef[m [36mterm[m():[85;140H[K[85;140H78,23[9CBot[18;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;13Hmatch(kind)[2;13Ht1 = term()[3;13Ht += (t1 [33mif[m (kind == [31m'+'[m) [33melse[m -t1)[85;140H[K[85;140H78,23[9CBot[21;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9Ht = term()[2;9H[33mwhile[m (check([31m'+'[m) [33mor[m (check([31m'-'[m))):[3;13Hkind = lookahead.kind[85;140H[K[85;140H78,23[9CBot[24;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mreturn[m values[3;5H[33mdef[m [36mexpr[m():[85;140H[K[85;140H78,23[9CBot[27;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mwhile[m ([33mnot[m check([31m'EOF'[m)):[2;13Hvalues.append(expr())[3;13Hmatch([31m';'[m)[85;140H[K[85;140H78,23[9CBot[30;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;5H[33mdef[m [36mprogram[m():[3;9Hvalues = [][85;140H[K[85;140H78,23[9CBot[33;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;13Htok = tokens[index][2;13Hindex += [31m1[m[3;13H[33mreturn[m tok[85;140H[K[85;140H78,23[9CBot[36;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mif[m (index >= [36mlen[m(tokens)):[2;13H[33mreturn[m Token([31m'EOF'[m, [31m'<EOF>'[m)[3;9H[33melse[m:[85;140H[K[85;140H78,23[9C95%[39;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;13Hsys.exit([31m1[m)
    [33mdef[m [36mnextToken[m():[3;9H[33mnonlocal[m index[85;140H[K[85;140H78,23[9C87%[42;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33melse[m:[2;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[3;19H[36mfile[m=sys.stderr)[85;140H[K[85;140H78,23[9C80%[45;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mnonlocal[m lookahead[2;9H[33mif[m (lookahead.kind == kind):[3;13Hlookahead = nextToken()[85;140H[K[85;140H78,23[9C73%[48;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[85;140H[K[85;140H78,23[9C65%[51;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;1H[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[85;140H[K[85;140H78,23[9C58%[54;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  | '(' expr ')'
  ;
"""[m[85;140H[K[85;140H78,23[9C51%[57;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  ;
factor
  : INT[m[85;140H[K[85;140H78,23[9C43%[60;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31mterm
  : '-' term
  | factor[m[85;140H[K[85;140H78,23[9C36%[63;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31mexpr
  : term ( ( '+' | '-' ) term )*
  ;[m[85;140H[K[85;140H78,23[9C29%[66;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  : expr ';' program
  | #empty
  ;[m[85;140H[K[85;140H78,23[9C21%[69;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;1H[31m"""
program[m[85;140H[K[85;140H78,23[9C14%[72;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple[85;140H[K[85;140H78,23[10C7%[75;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5Hvalue = program()
    [33mif[m ([33mnot[m check([31m'EOF'[m)):[84;9H[36mprint[m(f[31m'expecting <EOF>, got {lookahead.lexeme}'[m, [36mfile[m=sys.stderr)[85;140H[K[85;140H78,23[10C7%[75;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hsys.exit([31m1[m)
    [33mreturn[m value[85;140H[K[85;140H78,23[9C14%[72;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mdef[m [36mscan[m(text):
    [33mdef[m [36mnext_match[m(text):[84;9Hm = re.compile([31mr'\s+'[m).match(text)[85;140H[K[85;140H78,23[9C21%[69;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9H[33mif[m (m): [33mreturn[m (m, [36mNone[m)[83;9Hm = re.compile([31mr'\d+'[m).match(text)[84;9H[33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[85;140H[K[85;140H78,23[9C29%[66;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m[83;9H[33mif[m (m): [33mreturn[m (m, m.group())[85;140H[K[85;140H78,23[9C36%[63;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5Htokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[84;9H(match, kind) = next_match(text)[85;140H[K[85;140H78,23[9C43%[60;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hlexeme = match.group()[83;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[84;9Htext = text[[36mlen[m(lexeme):][85;140H[K[85;140H78,23[9C51%[57;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mreturn[m tokens

[33mdef[m [36mmain[m():[85;140H[K[85;140H78,23[9C58%[54;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    [36mprint[m(parse(contents))[85;140H[K[85;140H78,23[9C65%[51;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[85;140H[K[85;140H78,23[9C73%[48;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hcontent = [36mfile[m.read()
    [33mreturn[m content[85;140H[K[85;140H78,23[9C80%[45;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1HToken = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():[85;140H[K[85;140H78,23[9C87%[42;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)[85;140H[K[85;140H78,23[9C95%[39;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [m[85;140H[K[85;140H78,23[9CBot[36;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H78,23[9CBot[33;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H78,23[9CBot[30;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H78,23[9CBot[27;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H78,23[9CBot[24;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H78,23[9CBot[21;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9Ht = term()[2;9H[33mwhile[m (check([31m'+'[m) [33mor[m (check([31m'-'[m))):[3;13Hkind = lookahead.kind[85;140H[K[85;140H78,23[9CBot[24;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mreturn[m values[3;5H[33mdef[m [36mexpr[m():[85;140H[K[85;140H78,23[9CBot[27;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mwhile[m ([33mnot[m check([31m'EOF'[m)):[2;13Hvalues.append(expr())[3;13Hmatch([31m';'[m)[85;140H[K[85;140H78,23[9CBot[30;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;5H[33mdef[m [36mprogram[m():[3;9Hvalues = [][85;140H[K[85;140H78,23[9CBot[33;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;13Htok = tokens[index][2;13Hindex += [31m1[m[3;13H[33mreturn[m tok[85;140H[K[85;140H78,23[9CBot[36;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mif[m (index >= [36mlen[m(tokens)):[2;13H[33mreturn[m Token([31m'EOF'[m, [31m'<EOF>'[m)[3;9H[33melse[m:[85;140H[K[85;140H78,23[9C95%[39;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;13Hsys.exit([31m1[m)
    [33mdef[m [36mnextToken[m():[3;9H[33mnonlocal[m index[85;140H[K[85;140H78,23[9C87%[42;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33melse[m:[2;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[3;19H[36mfile[m=sys.stderr)[85;140H[K[85;140H78,23[9C80%[45;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mnonlocal[m lookahead[2;9H[33mif[m (lookahead.kind == kind):[3;13Hlookahead = nextToken()[85;140H[K[85;140H78,23[9C73%[48;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[85;140H[K[85;140H78,23[9C65%[51;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;1H[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[85;140H[K[85;140H78,23[9C58%[54;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  | '(' expr ')'
  ;
"""[m[85;140H[K[85;140H78,23[9C51%[57;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  ;
factor
  : INT[m[85;140H[K[85;140H78,23[9C43%[60;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31mterm
  : '-' term
  | factor[m[85;140H[K[85;140H78,23[9C36%[63;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31mexpr
  : term ( ( '+' | '-' ) term )*
  ;[m[85;140H[K[85;140H78,23[9C29%[66;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m[83;9H[33mif[m (m): [33mreturn[m (m, m.group())[85;140H[K[85;140H78,23[9C36%[63;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5Htokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[84;9H(match, kind) = next_match(text)[85;140H[K[85;140H78,23[9C43%[60;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hlexeme = match.group()[83;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[84;9Htext = text[[36mlen[m(lexeme):][85;140H[K[85;140H78,23[9C51%[57;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mreturn[m tokens

[33mdef[m [36mmain[m():[85;140H[K[85;140H78,23[9C58%[54;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    [36mprint[m(parse(contents))[85;140H[K[85;140H78,23[9C65%[51;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[85;140H[K[85;140H78,23[9C73%[48;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hcontent = [36mfile[m.read()
    [33mreturn[m content[85;140H[K[85;140H78,23[9C80%[45;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1HToken = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():[85;140H[K[85;140H78,23[9C87%[42;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)[85;140H[K[85;140H78,23[9C95%[39;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [m[85;140H[K[85;140H78,23[9CBot[36;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H78,23[9CBot[33;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H78,23[9CBot[30;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;5H[33mdef[m [36mprogram[m():[3;9Hvalues = [][85;140H[K[85;140H78,23[9CBot[33;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;13Htok = tokens[index][2;13Hindex += [31m1[m[3;13H[33mreturn[m tok[85;140H[K[85;140H78,23[9CBot[36;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mif[m (index >= [36mlen[m(tokens)):[2;13H[33mreturn[m Token([31m'EOF'[m, [31m'<EOF>'[m)[3;9H[33melse[m:[85;140H[K[85;140H78,23[9C95%[39;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;13Hsys.exit([31m1[m)
    [33mdef[m [36mnextToken[m():[3;9H[33mnonlocal[m index[85;140H[K[85;140H78,23[9C87%[42;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33melse[m:[2;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[3;19H[36mfile[m=sys.stderr)[85;140H[K[85;140H78,23[9C80%[45;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mnonlocal[m lookahead[2;9H[33mif[m (lookahead.kind == kind):[3;13Hlookahead = nextToken()[85;140H[K[85;140H78,23[9C73%[48;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[85;140H[K[85;140H78,23[9C65%[51;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;1H[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[85;140H[K[85;140H78,23[9C58%[54;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  | '(' expr ')'
  ;
"""[m[85;140H[K[85;140H78,23[9C51%[57;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  ;
factor
  : INT[m[85;140H[K[85;140H78,23[9C43%[60;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31mterm
  : '-' term
  | factor[m[85;140H[K[85;140H78,23[9C36%[63;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31mexpr
  : term ( ( '+' | '-' ) term )*
  ;[m[85;140H[K[85;140H78,23[9C29%[66;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  : expr ';' program
  | #empty
  ;[m[85;140H[K[85;140H78,23[9C21%[69;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;1H[31m"""
program[m[85;140H[K[85;140H78,23[9C14%[72;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple[85;140H[K[85;140H78,23[10C7%[75;23H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[85;140H[K[85;140H78,23[9CTop[78;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5Hvalue = program()
    [33mif[m ([33mnot[m check([31m'EOF'[m)):[84;9H[36mprint[m(f[31m'expecting <EOF>, got {lookahead.lexeme}'[m, [36mfile[m=sys.stderr)[85;140H[K[85;140H78,23[10C7%[75;23H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hsys.exit([31m1[m)
    [33mreturn[m value[85;140H[K[85;140H78,23[9C14%[72;23H[?25h[?25l([3C)[85;140H49,34[43;34H[?25h[?25l[85;1H[K[85;130H~@%[43;33H[85;130H[K[85;1H"help.txt" [readonly] 236L, 8819C[1;1H[31mhelp.txt[m[8CFor [36mVim version 8.1.[m  Last change: 2019 Jan 17[2;1H[K[3;1H       [17CVIM - main help file
                    [53Ck
      Move around:  Use the cursor keys, or "h" to go left,[12Ch   l
   [17C"j" to go down, "k" to go up, "l" to go right.[7Cj
Close this window:  Use ":q[35m<Enter>[m".
   Get out of Vim:  Use ":qa![35m<Enter>[m" (careful, all changes are lost!).[9;1H[K[10;1HJump to a subject:  Position the cursor on a tag (e.g. [36mbars[m) and hit [35mCTRL-][m.
   With the mouse:  ":set mouse=a" to enable the mouse (in xterm or GUI).
          [10CDouble-click the left mouse button on a tag, e.g. [36mbars[m.
        Jump back:  Type [35mCTRL-O[m.  Repeat to go further back.[14;1H[K[15;1HGet specific help:  It is possible to go directly to whatever you want help
                    on, by giving an argument to the [36m:help[m command.
   [17CPrepend something to specify the context:  [31mhelp-context[m[18;1H[K[19;27H[35mWHAT                  PREPEND    EXAMPLE[m
                      Normal mode command[18C:help x
                      Visual mode command[9Cv_[7C:help v_u[22;23HInsert mode command[9Ci_[7C:help i_[35m<Esc>[m
                      Command-line command        :[8C:help :quit
                      Command-line editing[8Cc_[7C:help c_[35m<Del>[m[25;9H              Vim command argument[8C-[8C:help -r[26;9H              Option        [14C'[8C:help [32m'textwidth'[m[27;13H          Regular expression[10C/[8C:help /[[28;9H     [7CSee [36mhelp-summary[m for more contexts and an explanation.[29;13H[K[30;3HSearch for help:  Type ":help word", then hit [35mCTRL-D[m to see matching[31;13H        help entries for "word".
                    Or use ":helpgrep word". [36m:helpgrep[m[33;9H[K[34;3HGetting started:  Do the Vim tutor, a 20 minute interactive training for the[35;13H        basic commands, see [36mvimtutor[m.[36;9H     [7CRead the user manual from start to end: [36musr_01.txt[m[37;13H[K[38;1HVim stands for Vi IMproved.  Most of Vim was made by Bram Moolenaar, but only
through the help of many others.  See [36mcredits[m.
[35m------------------------------------------------------------------------------[m
                  [30C[31mdoc-file-list[m [31mQ_ct[m
[1m[7mhelp.txt [Help][RO]                                                                                                                        1,1            Top[m[43;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[44;21H[K[45;9H[33mnonlocal[m lookahead[46;9H[33mif[m (lookahead.kind == kind):[47;13Hlookahead = nextToken()
        [33melse[m:[48;14H[K[49;9H    [36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[50;9H          [36mfile[m=sys.stderr)[50;35H[K[51;13Hsys.exit([31m1[m)[51;24H[K[52;5H[33mdef[m [36mnextToken[m():[52;21H[K[53;9H[33mnonlocal[m index[53;23H[K[54;9H[33mif[m (index >= [36mlen[m(tokens)):[54;35H[K[55;9H    [1C[33meturn[m Token([31m'EOF'[m, [31m'<EOF>'[m)[56;9H[33melse[m:
            tok = tokens[index][58;9H    index += [31m1[m[58;23H[K[59;13H[33mreturn[m tok[60;13H[K[61;5H[33mdef[m [36mprogram[m():[62;9Hvalues = [][62;20H[K[63;9H[33mwhile[m ([33mnot[m check([31m'EOF'[m)):
            values.append(expr())[65;9H    match[2C[31m;'[m)[65;23H[K[66;9H[33mreturn[m values[66;22H[K[67;13H[K[68;5H[33mdef[m [36mexpr[m():[68;16H[K[69;9Ht = term()[70;9H[33mwhile[m (check([31m'+'[m) [33mor[m (check([31m'-'[m))):[71;13Hkind = lookahead.kind[72;19Hkind)[73;13Ht1 = term()[73;24H[K[74;13Ht += (t1 [33mif[m (kind == [31m'+'[m) [33melse[m -t1)
        [33mreturn[m t[75;17H[K[76;5H[K[77;5H[33mdef[m [36mterm[m():
        [33mif[m (check([31m'-'[m)):[78;25H[K[79;5H        match([31m'-'[m)
            [33mreturn[m - term()[81;9H[33melse[m:[81;14H[K[82;9H    [33mreturn[m factor()[83;5H[K[84;1H[7mcalc.py                                                                                                                                    49,33          33%[1;1H[?25h[?25l[m[85;147H^[[1;1H[85;147H  [1;1H[85;147H^[[1;1H[85;147H  [1;1H[?25h[?25l[85;147H:[1;1H[85;1H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?2004h[43;33H[1;1H[K[2;1H[31m"""
program[m[3;25H[K[4;1H[31m  : expr ';' program[m[4;74H[K[5;1H[31m  | #empty[m[5;12H[K[6;1H[31m  ;[m[6;21H[K[7;1H[31mexpr[m[7;5H[K[8;1H[31m  : term ( ( '+' | '-' ) term )*[m[8;33H[K[9;1H[31m  ;
term[m[10;6H[K[11;1H[31m  : '-' term[m[11;13H[K[12;1H[31m  | factor[m[12;21H[K[13;1H[31m  ;[m[13;9H[K[14;1H[31mfactor
  : INT[m[15;8H[K[16;1H[31m  | '(' expr ')'[m[16;21H[K[17;1H[31m  ;[m[17;21H[K[18;1H[31m"""[m[19;27H[K[20;1H[34m#use nested function for encapsulation.[m[20;40H[K[21;1H[33mdef[m [36mparse[m(text):[21;23H[K[22;23H[K[23;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind[23;51H[K[24;5H[33mdef[m [36mmatch[m(kind):[24;23H[K[25;9H[33mnonlocal[m lookahead[25;27H[K[26;9H[33mif[m (lookahead.kind == kind):[26;51H[K[27;13Hlookahead = nextToken()[27;36H[K[28;9H[33melse[m:[28;21H[K[29;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,
                  [36mfile[m=sys.stderr)[30;35H[K[31;13Hsys.exit([31m1[m)[31;24H[K[32;5H[33mdef[m [36mnextToken[m():[32;21H[K[33;9H[33mnonlocal[m index
        [33mif[m (index >= [36mlen[m(tokens)):[34;35H[K[35;13H[33mreturn[m Token([31m'EOF'[m, [31m'<EOF>'[m)[35;41H[K[36;9H[33melse[m:[36;21H[K[37;13Htok = tokens[index]
            index += [31m1[m[38;23H[K[39;1H            [33mreturn[m tok[39;23H[K[40;1H[K[41;5H[33mdef[m [36mprogram[m():[41;49H[K[42;1H        values = [][42;20H[K[43;5H    [33mwhile[m ([33mnot[m check([31m'EOF'[m)):[43;34H[K[44;5H        values.append(expr())[45;9H    match([31m';'[m)[45;23H[K[46;9H[33mreturn[m values[46;22H[K[47;13H[K[48;5H[33mdef[m [36mexpr[m():[49;9Ht = term()[49;19H[K[50;9H[33mwhile[m (check([31m'+'[m) [33mor[m (check([31m'-'[m))):[51;13Hkind = lookahead.kind
            match(kind)[53;9H    t1 = term()[54;9H    t += (t1 [33mif[m (kind == [31m'+'[m) [33melse[m -t1)[55;9H[33mreturn[m t[55;17H[K[56;9H[K[57;5H[33mdef[m [36mterm[m():[57;17H[K[58;9H[33mif[m (check([31m'-'[m)):[59;13Hmatch([31m'-'[m)[60;13H[33mreturn[m - term()
        [33melse[m:[61;14H[K[62;9H    [33mreturn[m factor()[63;9H[K[64;5H[33mdef[m [36mfactor[m():[64;18H[K[65;9H[33mif[m (check[2C[31mINT'[m)):[66;9H    value = [36mint[m(lookahead.lexeme)[67;13Hmatch([31m'INT'[m)
            [33mreturn[m value[69;9H[33melse[m:[69;14H[K[70;9H    match([31m'('[m)[70;23H[K[71;13Hvalue = expr()[71;27H[K[72;19H[31m')'[m)[72;23H[K[73;13H[33mreturn[m value[74;13H[K[75;5H[34m#begin parse()[m
    tokens = scan(text)
    index = [31m0[m[77;14H[K[78;5Hlookahead = nextToken()
    value = program()[79;22H[K[80;5H[33mif[m ([33mnot[m check([31m'EOF'[m)):[80;27H[K[81;9H[36mprint[m(f[31m'expecting <EOF>, got {lookahead.lexeme}'[m, [36mfile[m=sys.stderr)[82;9Hsys.exit([31m1[m)[82;20H[K[83;5H[33mreturn[m value[84;1H[K[85;140H49,33[9C14%[43;33H[?25h[?25l[85;130H^M[43;33H[85;130H  [44;13H[85;140H50,1[44;13H[?25h[?25l[85;130H^[[44;13H[85;130H  [44;13H[85;130H^[[44;13H[85;130H  [44;13H[?25h[?25l[85;130H:[44;13H[85;1H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ vim data[K[K[K[K[K[K[K[Kclear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ cat data.txt 
1 + 2 - 3;

--2 - (3 - 4);
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ cat data.txt [8Plearvim calc.py 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.py" 125L, 2745C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple


[31m"""
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
"""[m

[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[29;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[31;9H[33mnonlocal[m lookahead[32;9H[33mif[m (lookahead.kind == kind):[33;13Hlookahead = nextToken()[34;9H[33melse[m:[35;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[36;19H[36mfile[m=sys.stderr)[37;13Hsys.exit([31m1[m)
    [33mdef[m [36mnextToken[m():[39;9H[33mnonlocal[m index[40;9H[33mif[m (index >= [36mlen[m(tokens)):[41;13H[33mreturn[m Token([31m'EOF'[m, [31m'<EOF>'[m)[42;9H[33melse[m:[43;13Htok = tokens[index][44;13Hindex += [31m1[m[45;13H[33mreturn[m tok[47;5H[33mdef[m [36mprogram[m():[48;9Hvalues = [][49;9H[33mwhile[m ([33mnot[m check([31m'EOF'[m)):[50;13Hvalues.append(expr())[51;13Hmatch([31m';'[m)[52;9H[33mreturn[m values[54;5H[33mdef[m [36mexpr[m():[55;9Ht = term()[56;9H[33mwhile[m (check([31m'+'[m) [33mor[m (check([31m'-'[m))):[57;13Hkind = lookahead.kind[58;13Hmatch(kind)[59;13Ht1 = term()[60;13Ht += (t1 [33mif[m (kind == [31m'+'[m) [33melse[m -t1)[61;9H[33mreturn[m t[63;5H[33mdef[m [36mterm[m():[64;9H[33mif[m (check([31m'-'[m)):[65;13Hmatch([31m'-'[m)[66;13H[33mreturn[m - term()[67;9H[33melse[m:[68;13H[33mreturn[m factor()[70;5H[33mdef[m [36mfactor[m():[71;9H[33mif[m (check([31m'INT'[m)):[72;13Hvalue = [36mint[m(lookahead.lexeme)[73;13Hmatch([31m'INT'[m)[74;13H[33mreturn[m value[75;9H[33melse[m:[76;13Hmatch([31m'('[m)[77;13Hvalue = expr()[78;13Hmatch([31m')'[m)[79;13H[33mreturn[m value[81;5H[34m#begin parse()[m
    tokens = scan(text)
    index = [31m0[m
    lookahead = nextToken()[85;140H50,13[9CTop[50;13H[?25h[?1000l[?1002h[?25l[1;84r[1;1H[3M[1;85r[82;5Hvalue = program()
    [33mif[m ([33mnot[m check([31m'EOF'[m)):[84;9H[36mprint[m(f[31m'expecting <EOF>, got {lookahead.lexeme}'[m, [36mfile[m=sys.stderr)[85;1H[K[85;140H50,13[10C7%[47;13H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hsys.exit([31m1[m)
    [33mreturn[m value[85;140H[K[85;140H50,13[9C14%[44;13H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mdef[m [36mscan[m(text):
    [33mdef[m [36mnext_match[m(text):[84;9Hm = re.compile([31mr'\s+'[m).match(text)[85;140H[K[85;140H50,13[9C21%[41;13H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9H[33mif[m (m): [33mreturn[m (m, [36mNone[m)[83;9Hm = re.compile([31mr'\d+'[m).match(text)[84;9H[33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[85;140H[K[85;140H50,13[9C29%[38;13H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m[83;9H[33mif[m (m): [33mreturn[m (m, m.group())[85;140H[K[85;140H50,13[9C36%[35;13H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5Htokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[84;9H(match, kind) = next_match(text)[85;140H[K[85;140H50,13[9C43%[32;13H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hlexeme = match.group()[83;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[84;9Htext = text[[36mlen[m(lexeme):][85;140H[K[85;140H50,13[9C51%[29;13H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mreturn[m tokens

[33mdef[m [36mmain[m():[85;140H[K[85;140H50,13[9C58%[26;13H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    [36mprint[m(parse(contents))[85;140H[K[85;140H50,13[9C65%[23;13H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[85;140H[K[85;140H50,13[9C73%[20;13H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hcontent = [36mfile[m.read()
    [33mreturn[m content[85;140H[K[85;140H50,13[9C80%[17;13H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mnonlocal[m lookahead[2;9H[33mif[m (lookahead.kind == kind):[3;13Hlookahead = nextToken()[85;140H[K[85;140H50,13[9C73%[20;13H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[85;140H[K[85;140H50,13[9C65%[23;13H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;1H[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[85;140H[K[85;140H50,13[9C58%[26;13H[?25h[?25l[85;140H63,15[39;15H[?25h[?25l[85;130Ha[39;15H[85;130H [39;16H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H63,16[9C58%[39;16H[?25h[?25l[40;84r[40;1H[L[1;85r[85;140H[K[85;140H64,9[10C57%[40;9H[?25h[?25li[85;143H10[40;10H[?25h[?25l[40;9H[K[85;143H9 [40;9H[?25h[?25l[85;143H5[40;5H[?25h[?25l[85;143H1[40;1H[?25h[?25l[39;84r[84;1H
[1;85r[39;5H[33mdef[m [36mterm[m():[84;1H[33mdef[m [36mmain[m():[85;140H[K[85;140H63,16[9C58%[39;16H[?25h[?25l[85;141H4[40;16H[?25h[?25l[85;141H5[41;16H[?25h[?25l[85;144H7[41;17H[?25h[?25l[85;141H6[42;17H[?25h[?25l[85;144H8[42;18H[?25h[?25l[85;144H9[42;19H[?25h[?25l[85;143H20[42;20H[?25h[?25l[85;144H1[42;21H[?25h[?25l[85;144H2[42;22H[?25h[?25l[85;144H3[42;23H[?25h[?25l[85;144H4[42;24H[?25h[?25l[85;144H5[42;25H[?25h[?25lm[46m()[m[85;144H6[42;26H[?25h[?25l[85;144H7[42;27H[?25h[?25l[85;144H8[42;28H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  | '(' expr ')'
  ;
"""[m[85;140H[K[85;140H66,28[9C51%[45;28H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  ;
factor
  : INT[m[85;140H[K[85;140H66,28[9C43%[48;28H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hlexeme = match.group()[83;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[84;9Htext = text[[36mlen[m(lexeme):][85;140H[K[85;140H66,28[9C51%[45;28H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mreturn[m tokens

[33mdef[m [36mmain[m():[85;140H[K[85;140H66,28[9C58%[42;28H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    [36mprint[m(parse(contents))[85;140H[K[85;140H66,28[9C65%[39;28H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;1H[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[85;140H[K[85;140H66,28[9C58%[42;28H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  | '(' expr ')'
  ;
"""[m[85;140H[K[85;140H66,28[9C51%[45;28H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  ;
factor
  : INT[m[85;140H[K[85;140H66,28[9C43%[48;28H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31mterm
  : '-' term
  | factor[m[85;140H[K[85;140H66,28[9C36%[51;28H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31mexpr
  : term ( ( '+' | '-' ) term )*
  ;[m[85;140H[K[85;140H66,28[9C29%[54;28H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  : expr ';' program
  | #empty
  ;[m[85;140H[K[85;140H66,28[9C21%[57;28H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;1H[31m"""
program[m[85;140H[K[85;140H66,28[9C14%[60;28H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mdef[m [36mscan[m(text):
    [33mdef[m [36mnext_match[m(text):[84;9Hm = re.compile([31mr'\s+'[m).match(text)[85;140H[K[85;140H66,28[9C21%[57;28H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9H[33mif[m (m): [33mreturn[m (m, [36mNone[m)[83;9Hm = re.compile([31mr'\d+'[m).match(text)[84;9H[33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[85;140H[K[85;140H66,28[9C29%[54;28H[?25h[?25l[55;84r[55;1H[L[1;85r[85;140H[K[85;140H67,9[10C28%[54;26H()[55;9H[?25h[?25li[85;143H10[55;10H[?25h[?25l[33mif[m[85;144H1[55;11H[?25h[?25l[85;144H2[55;12H[?25h[?25l([85;144H3[55;13H[?25h[?25lc[85;144H4[55;14H[?25h[?25le[85;144H5[55;15H[?25h[?25lc[85;144H6[55;16H[?25h[?25l[55;15H[K[85;144H5[55;15H[?25h[?25l[55;14H[K[85;144H4[55;14H[?25h[?25lh[85;144H5[55;15H[?25h[?25le[85;144H6[55;16H[?25h[?25lc[85;144H7[55;17H[?25h[?25ll[85;144H8[55;18H[?25h[?25l[55;17H[K[85;144H7[55;17H[?25h[?25lk[85;144H8[55;18H[?25h[?25l([85;144H9[55;19H[?25h[?25l[31m'
        else:
            return factor()

    def factor():
        if (check([m[1CINT[1C[31m)):
            value = int(lookahead.lexeme)
            match([m[1CINT[1C[31m)
            return value
        else:
            match([m[1C([1C[31m)
            value = expr()
            match([m[1C)[1C[31m)
            return value

    #begin parse()
    tokens = scan(text)
    index = 
    lookahead = nextToken()
    value = program()
    if (not check([m[1CEOF[1C[31m)):
        print(f[m[1Cexpecting <EOF>, got {lookahead.lexeme}[1C[31m, file=sys.stderr)
        sys.exit(1)
    return value

def scan(text):
    def next_match(text):
        m = re.compile([m[2C\s+[1C[31m).match(text)
        if (m): return (m, None)
        m = re.compile([m[2C\d+[1C[31m).match(text)[m[85;143H20[55;20H[?25h[?25l[31m*[m[85;144H1[55;21H[?25h[?25l[31m*[m[85;144H2[55;22H[?25h[?25l[31m'[m
        [33melse[m:
            [33mreturn[m factor()

    [33mdef[m [36mfactor[m():
        [33mif[m (check([1C[31mINT[m[1C)):
            value = [36mint[m(lookahead.lexeme)
            match([1C[31mINT[m[1C)
            [33mreturn[m value
        [33melse[m:
            match([1C[31m([m[1C)
            value = expr()
            match([1C[31m)[m[1C)
            [33mreturn[m value

    [34m#begin parse()[m
    tokens = scan(text)
    index = 
    lookahead = nextToken()
    value = program()
    [33mif[m ([33mnot[m check([1C[31mEOF[m[1C)):
        [36mprint[m(f[1C[31mexpecting <EOF>, got {lookahead.lexeme}[m[1C, [36mfile[m=sys.stderr)
        sys.exit([1C)
    [33mreturn[m value

[33mdef[m [36mscan[m(text):
    [33mdef[m [36mnext_match[m(text):
        m = re.compile([2C[31m\s+[m[1C).match(text)
        [33mif[m (m): [33mreturn[m (m, [36mNone[m)
        m = re.compile([2C[31m\d+[m[1C).match(text)[85;144H3[55;23H[?25h[?25l)[46m([4C)[m[85;144H4[55;24H[?25h[?25l)[55;12H[46m([mcheck([4C)[46m)[m[85;144H5[55;25H[?25h[?25l:[55;12H([11C)[85;144H6[55;26H[?25h[?25l[56;84r[56;1H[L[1;85r[85;140H[K[85;140H68,13[9C27%[56;13H[?25h[?25lm[85;144H4[56;14H[?25h[?25la[85;144H5[56;15H[?25h[?25lt[85;144H6[56;16H[?25h[?25lc[85;144H7[56;17H[?25h[?25lh[85;144H8[56;18H[?25h[?25l([85;144H9[56;19H[?25h[?25l[31m"
        else:
            return factor()

    def factor():
        if (check('INT')):
            value = int(lookahead.lexeme)
            match('INT')
            return value
        else:
            match('(')
            value = expr()
            match(')')
            return value

    #begin parse()
    tokens = scan(text)
    index = 
    lookahead = nextToken()
    value = program()
    if (not check('EOF')):
        print(f[41C, file=sys.stderr)
        sys.exit(1)
    return value

def scan(text):
    def next_match(text):
        m = re.compile(r'\s+').match(text)
        if (m): return (m, None)[m[85;143H20[56;20H[?25h[?25l[56;19H[K[57;1H        [33melse[m:
            [33mreturn[m factor()

    [33mdef[m [36mfactor[m():
        [33mif[m (check([5C)):
            value = [36mint[m(lookahead.lexeme)
            match([5C)
            [33mreturn[m value
        [33melse[m:
            match([3C)
            value = expr()
            match([3C)
            [33mreturn[m value

    [34m#begin parse()[m
    tokens = scan(text)
    index = 
    lookahead = nextToken()
    value = program()
    [33mif[m ([33mnot[m check([5C)):
        [36mprint[m(f[41C, [36mfile[m=sys.stderr)
        sys.exit([1C)
    [33mreturn[m value

[33mdef[m [36mscan[m(text):
    [33mdef[m [36mnext_match[m(text):
        m = re.compile([6C).match(text)
        [33mif[m (m): [33mreturn[m (m, [36mNone[m)[85;143H19[56;19H[?25h[?25l[31m'
        else:
            return factor()

    def factor():
        if (check([m[1CINT[1C[31m)):
            value = int(lookahead.lexeme)
            match([m[1CINT[1C[31m)
            return value
        else:
            match([m[1C([1C[31m)
            value = expr()
            match([m[1C)[1C[31m)
            return value

    #begin parse()
    tokens = scan(text)
    index = 
    lookahead = nextToken()
    value = program()
    if (not check([m[1CEOF[1C[31m)):
        print(f[m[1Cexpecting <EOF>, got {lookahead.lexeme}[1C[31m, file=sys.stderr)
        sys.exit(1)
    return value

def scan(text):
    def next_match(text):
        m = re.compile([m[2C\s+[1C[31m).match(text)
        if (m): return (m, None)[m[85;143H20[56;20H[?25h[?25l[31m*[m[85;144H1[56;21H[?25h[?25l[31m*[m[85;144H2[56;22H[?25h[?25l[31m"[m[85;144H3[56;23H[?25h[?25l[56;22H[K[85;144H2[56;22H[?25h[?25l[31m'[m
        [33melse[m:
            [33mreturn[m factor()

    [33mdef[m [36mfactor[m():
        [33mif[m (check([1C[31mINT[m[1C)):
            value = [36mint[m(lookahead.lexeme)
            match([1C[31mINT[m[1C)
            [33mreturn[m value
        [33melse[m:
            match([1C[31m([m[1C)
            value = expr()
            match([1C[31m)[m[1C)
            [33mreturn[m value

    [34m#begin parse()[m
    tokens = scan(text)
    index = 
    lookahead = nextToken()
    value = program()
    [33mif[m ([33mnot[m check([1C[31mEOF[m[1C)):
        [36mprint[m(f[1C[31mexpecting <EOF>, got {lookahead.lexeme}[m[1C, [36mfile[m=sys.stderr)
        sys.exit([1C)
    [33mreturn[m value

[33mdef[m [36mscan[m(text):
    [33mdef[m [36mnext_match[m(text):
        m = re.compile([2C[31m\s+[m[1C).match(text)
        [33mif[m (m): [33mreturn[m (m, [36mNone[m)[85;144H3[56;23H[?25h[?25l)[46m([4C)[m[85;144H4[56;24H[?25h[?25l)[56;18H([4C)[85;144H5[56;25H[?25h[?25l:[85;144H6[56;26H[?25h[?25l[56;25H[K[85;144H5[56;25H[?25h[?25l[57;84r[57;1H[L[1;85r[85;140H[K[85;140H69,13[9C27%[57;13H[?25h[?25lr[85;144H4[57;14H[?25h[?25le[85;144H5[57;15H[?25h[?25lt[85;144H6[57;16H[?25h[?25lu[85;144H7[57;17H[?25h[?25lr[85;144H8[57;18H[?25h[?25l[33mreturn[m[85;144H9[57;19H[?25h[?25l[85;143H20[57;20H[?25h[?25l*[85;144H1[57;21H[?25h[?25l*[85;144H2[57;22H[?25h[?25l[85;144H3[57;23H[?25h[?25lt[85;144H4[57;24H[?25h[?25le[85;144H5[57;25H[?25h[?25lr[85;144H6[57;26H[?25h[?25l,[85;144H7[57;27H[?25h[?25l[57;26H[K[85;144H6[57;26H[?25h[?25lm[85;144H7[57;27H[?25h[?25l([85;144H8[57;28H[?25h[?25l)[46m()[m[85;144H9[57;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9H[33mif[m (m): [33mreturn[m (m, [36mNone[m)[83;9Hm = re.compile([31mr'\d+'[m).match(text)[84;9H[33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[85;140H[K[85;140H69,29[9C34%[54;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m[83;9H[33mif[m (m): [33mreturn[m (m, m.group())[85;140H[K[85;140H69,29[9C40%[51;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5Htokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[84;9H(match, kind) = next_match(text)[85;140H[K[85;140H69,29[9C47%[48;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hlexeme = match.group()[83;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[84;9Htext = text[[36mlen[m(lexeme):][85;140H[K[85;140H69,29[9C54%[45;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mreturn[m tokens

[33mdef[m [36mmain[m():[85;140H[K[85;140H69,29[9C61%[42;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    [36mprint[m(parse(contents))[85;140H[K[85;140H69,29[9C68%[39;29H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[85;140H[K[85;140H69,29[9C61%[42;29H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;1H[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[85;140H[K[85;140H69,29[9C54%[45;29H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  | '(' expr ')'
  ;
"""[m[85;140H[K[85;140H69,29[9C47%[48;29H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  ;
factor
  : INT[m[85;140H[K[85;140H69,29[9C40%[51;29H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31mterm
  : '-' term
  | factor[m[85;140H[K[85;140H69,29[9C34%[54;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m[83;9H[33mif[m (m): [33mreturn[m (m, m.group())[85;140H[K[85;140H69,29[9C40%[51;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5Htokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[84;9H(match, kind) = next_match(text)[85;140H[K[85;140H69,29[9C47%[48;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hlexeme = match.group()[83;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[84;9Htext = text[[36mlen[m(lexeme):][85;140H[K[85;140H69,29[9C54%[45;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mreturn[m tokens

[33mdef[m [36mmain[m():[85;140H[K[85;140H69,29[9C61%[42;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    [36mprint[m(parse(contents))[85;140H[K[85;140H69,29[9C68%[39;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[85;140H[K[85;140H69,29[9C75%[36;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hcontent = [36mfile[m.read()
    [33mreturn[m content[85;140H[K[85;140H69,29[9C81%[33;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1HToken = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():[85;140H[K[85;140H69,29[9C88%[30;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)[85;140H[K[85;140H69,29[9C95%[27;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [m[85;140H[K[85;140H69,29[9CBot[24;29H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;13Htok = tokens[index][2;13Hindex += [31m1[m[3;13H[33mreturn[m tok[85;140H[K[85;140H69,29[9C95%[27;29H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mif[m (index >= [36mlen[m(tokens)):[2;13H[33mreturn[m Token([31m'EOF'[m, [31m'<EOF>'[m)[3;9H[33melse[m:[85;140H[K[85;140H69,29[9C88%[30;29H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;13Hsys.exit([31m1[m)
    [33mdef[m [36mnextToken[m():[3;9H[33mnonlocal[m index[85;140H[K[85;140H69,29[9C81%[33;29H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33melse[m:[2;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[3;19H[36mfile[m=sys.stderr)[85;140H[K[85;140H69,29[9C75%[36;29H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mnonlocal[m lookahead[2;9H[33mif[m (lookahead.kind == kind):[3;13Hlookahead = nextToken()[85;140H[K[85;140H69,29[9C68%[39;29H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[85;140H[K[85;140H69,29[9C61%[42;29H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;1H[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[85;140H[K[85;140H69,29[9C54%[45;29H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  | '(' expr ')'
  ;
"""[m[85;140H[K[85;140H69,29[9C47%[48;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hlexeme = match.group()[83;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[84;9Htext = text[[36mlen[m(lexeme):][85;140H[K[85;140H69,29[9C54%[45;29H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mreturn[m tokens

[33mdef[m [36mmain[m():[85;140H[K[85;140H69,29[9C61%[42;29H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;1H[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[85;140H[K[85;140H69,29[9C54%[45;29H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  | '(' expr ')'
  ;
"""[m[85;140H[K[85;140H69,29[9C47%[48;29H[?25h[?25l()[85;141H8,25[47;25H[?25h[?25l[85;141H7,26[46;26H[?25h[?25l[45;26H[46m()[m[85;141H6,28[45;28H[?25h[?25l[44;18H[46m([3C)[m[45;26H()[85;141H5,23[44;23H[?25h[?25l([3C)[85;141H4,25[43;25H[?25h[?25l[85;141H3,16[42;16H[?25h[?25l[85;141H2,1 [41;1H[?25h[?25l[85;141H1,17[40;17H[?25h[?25l[85;141H0,29[39;29H[?25h[?25l[38;22H[46m()[m[85;140H59,24[38;24H[?25h[?25l()[85;140H60,29[39;29H[?25h[?25l[38;22H[46m()[m[85;140H59,24[38;24H[?25h[?25l()[85;140H60,29[39;29H[?25h[?25l[85;141H1,17[40;17H[?25h[?25l[85;141H2,1 [41;1H[?25h[?25l[85;141H3,16[42;16H[?25h[?25l[85;141H4,25[43;25H[?25h[?25l[44;18H[46m([3C)[m[85;141H5,23[44;23H[?25h[?25l([3C)[45;26H[46m()[m[85;141H6,28[45;28H[?25h[?25l()[85;141H7,26[46;26H[?25h[?25l[85;141H8,25[47;25H[?25h[?25l[48;27H[46m()[m[85;141H9,29[48;29H[?25h[?25l()[85;140H70,14[49;14H[?25h[?25l[50;26H[46m()[m[85;141H1,28[50;28H[?25h[?25l()[85;141H2,1 [51;1H[?25h[?25l[85;141H3,18[52;18H[?25h[?25l[85;141H4,27[53;27H[?25h[?25l[85;141H5,29[54;29H[?25h[?25l[55;18H[46m([5C)[m[85;141H6,25[55;25H[?25h[?25l[55;18H([5C)[85;141H7[56;25H[?25h[?25l[85;141H8,14[57;14H[?25h[?25l[85;140H95,26[74;26H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hlexeme = match.group()[83;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[84;9Htext = text[[36mlen[m(lexeme):][85;140H[K[85;140H95,26[9C54%[71;26H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mreturn[m tokens

[33mdef[m [36mmain[m():[85;140H[K[85;140H95,26[9C61%[68;26H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    [36mprint[m(parse(contents))[85;140H[K[85;140H95,26[9C68%[65;26H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[85;140H[K[85;140H95,26[9C75%[62;26H[?25h[85;1H[K[62;25H[?25l[85;130H^[[62;25H[85;130H  [62;26H[85;140H95,25[9C75%[62;25H[?25h[?25l[85;130H:[62;25H[85;130H[K[85;1H:[?2004h[?25hX[?25l[?25h[?25l[85;1H[K[85;1HEnter encryption key:[?2004h [?25h[?25l[85;1H[K[62;25H[85;140H95,25[9C75%[62;25H[?25h[?25l[85;130H^[[62;25H[85;130H  [62;25H[85;130H^[[62;25H[85;130H  [62;25H[?25h[?25l[85;130H:[62;25H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.py" 128L, 2825C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ vim calc.py [1@cat data.txt[C[8Plearat data.txt [8Plearvim calc.py [1@mjs[C[11@./calc.py expn-data.txt[C
  File "./calc.py", line 68
    match('**'))
               ^
SyntaxError: invalid syntax
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ./calc.py expn-data.txt [12Pvim calc.py[C[1@cat data.txt[C[8Plearat data.txt [1Pvim calc.py[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.py" 128L, 2825C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[31m  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
"""[m

[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[13;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[15;9H[33mnonlocal[m lookahead[16;9H[33mif[m (lookahead.kind == kind):[17;13Hlookahead = nextToken()[18;9H[33melse[m:[19;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[20;19H[36mfile[m=sys.stderr)[21;13Hsys.exit([31m1[m)
    [33mdef[m [36mnextToken[m():[23;9H[33mnonlocal[m index[24;9H[33mif[m (index >= [36mlen[m(tokens)):[25;13H[33mreturn[m Token([31m'EOF'[m, [31m'<EOF>'[m)[26;9H[33melse[m:[27;13Htok = tokens[index][28;13Hindex += [31m1[m[29;13H[33mreturn[m tok[31;5H[33mdef[m [36mprogram[m():[32;9Hvalues = [][33;9H[33mwhile[m ([33mnot[m check([31m'EOF'[m)):[34;13Hvalues.append(expr())[35;13Hmatch([31m';'[m)[36;9H[33mreturn[m values[38;5H[33mdef[m [36mexpr[m():[39;9Ht = term()[40;9H[33mwhile[m (check([31m'+'[m) [33mor[m (check([31m'-'[m))):[41;13Hkind = lookahead.kind[42;13Hmatch(kind)[43;13Ht1 = term()[44;13Ht += (t1 [33mif[m (kind == [31m'+'[m) [33melse[m -t1)[45;9H[33mreturn[m t[47;5H[33mdef[m [36mterm[m():[48;9H[33mif[m (check([31m'-'[m)):[49;13Hmatch([31m'-'[m)[50;13H[33mreturn[m - term()[51;9H[33mif[m (check([31m'**'[m)):[52;13Hmatch([31m'**'[m))[53;13H[33mreturn[m ** term()[54;9H[33melse[m:[55;13H[33mreturn[m factor()[57;5H[33mdef[m [36mfactor[m():[58;9H[33mif[m (check([31m'INT'[m)):[59;13Hvalue = [36mint[m(lookahead.lexeme)[60;13Hmatch([31m'INT'[m)[61;13H[33mreturn[m value[62;9H[33melse[m:[63;13Hmatch([31m'('[m)[64;13Hvalue = expr()[65;13Hmatch([31m')'[m)[66;13H[33mreturn[m value[68;5H[34m#begin parse()[m
    tokens = scan(text)
    index = [31m0[m
    lookahead = nextToken()
    value = program()
    [33mif[m ([33mnot[m check([31m'EOF'[m)):[74;9H[36mprint[m(f[31m'expecting <EOF>, got {lookahead.lexeme}'[m, [36mfile[m=sys.stderr)[75;9Hsys.exit([31m1[m)
    [33mreturn[m value

[33mdef[m [36mscan[m(text):
    [33mdef[m [36mnext_match[m(text):[80;9Hm = re.compile([31mr'\s+'[m).match(text)[81;9H[33mif[m (m): [33mreturn[m (m, [36mNone[m)[82;9Hm = re.compile([31mr'\d+'[m).match(text)[83;9H[33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[84;9Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m[85;140H95,25[9C36%[79;25H[?25h[?1000l[?1002h[?25l[85;130H~@k[79;25H[85;130H   [79;25H[1;84r[84;1H
[1;85r[84;9H[33mif[m (m): [33mreturn[m (m, m.group())[85;1H[K[85;140H96,25[9C38%[79;25H[?25h[?25l[85;130H~@k[79;25H[85;130H   [78;25H[85;141H5[78;25H[?25h[?25l[85;140H68,24[51;24H[?25h[?25l[85;130Ha[51;24H[85;130H [51;25H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H68,25[9C38%[51;25H[?25h[?25l[51;24H[K[51;18H[46m([4C)[m[85;144H4[51;24H[?25h[85;1H[K[51;23H[?25l[85;130H^[[51;23H[85;130H  [51;24H[85;140H68,23[9C38%[51;23H[?25h[?25l[85;130H:[51;23H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.py" 128L, 2824C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ clearvim calc.py [12@./calc.py expn-data.txt[C
  File "./calc.py", line 69
    return ** term()
            ^
SyntaxError: invalid syntax
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ./calc.py expn-data.txt clear[Kvim calc.py 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.py" 128L, 2824C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple


[31m"""
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
"""[m

[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[29;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[31;9H[33mnonlocal[m lookahead[32;9H[33mif[m (lookahead.kind == kind):[33;13Hlookahead = nextToken()[34;9H[33melse[m:[35;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[36;19H[36mfile[m=sys.stderr)[37;13Hsys.exit([31m1[m)
    [33mdef[m [36mnextToken[m():[39;9H[33mnonlocal[m index[40;9H[33mif[m (index >= [36mlen[m(tokens)):[41;13H[33mreturn[m Token([31m'EOF'[m, [31m'<EOF>'[m)[42;9H[33melse[m:[43;13Htok = tokens[index][44;13Hindex += [31m1[m[45;13H[33mreturn[m tok[47;5H[33mdef[m [36mprogram[m():[48;9Hvalues = [][49;9H[33mwhile[m ([33mnot[m check([31m'EOF'[m)):[50;13Hvalues.append(expr())[51;13Hmatch([31m';'[m)[52;9H[33mreturn[m values[54;5H[33mdef[m [36mexpr[m():[55;9Ht = term()[56;9H[33mwhile[m (check([31m'+'[m) [33mor[m (check([31m'-'[m))):[57;13Hkind = lookahead.kind[58;13Hmatch(kind)[59;13Ht1 = term()[60;13Ht += (t1 [33mif[m (kind == [31m'+'[m) [33melse[m -t1)[61;9H[33mreturn[m t[63;5H[33mdef[m [36mterm[m():[64;9H[33mif[m (check([31m'-'[m)):[65;13Hmatch([31m'-'[m)[66;13H[33mreturn[m - term()[67;9H[33mif[m (check([31m'**'[m)):[68;13Hmatch[46m([m[31m'**'[m[46m)[m[69;13H[33mreturn[m ** term()[70;9H[33melse[m:[71;13H[33mreturn[m factor()[73;5H[33mdef[m [36mfactor[m():[74;9H[33mif[m (check([31m'INT'[m)):[75;13Hvalue = [36mint[m(lookahead.lexeme)[76;13Hmatch([31m'INT'[m)[77;13H[33mreturn[m value[78;9H[33melse[m:[79;13Hmatch([31m'('[m)[80;13Hvalue = expr()[81;13Hmatch([31m')'[m)[82;13H[33mreturn[m value[84;5H[34m#begin parse()[m[85;140H68,23[9CTop[68;23H[?25h[?1000l[?1002h[?25l[85;130H~@k[68;23H[85;130H   [69;23H[68;18H([4C)[85;141H9[69;23H[?25h[?25l[85;130H~@k[69;23H[85;130H   [69;24H[85;144H4[69;24H[?25h[?25l[85;130H~@k[69;24H[85;130H   [69;25H[85;144H5[69;25H[?25h[?25l[85;130H~@k[69;25H[85;130H   [69;26H[85;144H6[69;26H[?25h[?25l[85;130H~@k[69;26H[85;130H   [69;27H[46m()[m[85;144H7[69;27H[?25h[?25l[85;130H~@k[69;27H[85;130H   [69;28H[85;144H8[69;28H[?25h[?25l[85;130H~@k[69;28H[85;130H   [69;28H[?25h[?25l[85;130H~@k[69;28H[85;130H   [69;28H[?25h[?25l[85;130Hq[69;28H[?25h[?25l[85;131Ha[69;28H[85;1H[1mrecording @a[m[85;13H[K[85;140H69,28[9CTop[69;28H[?25h[?25l[85;130Ha[69;28H[85;130H [69;29H[85;1H[1m--c INSERT --[m [1mrecording @a[m[85;140H[K[85;140H69,29[9CTop[69;29H[?25h[?25la()[85;143H30[69;30H[?25h[?25la[85;144H1[69;31H[?25h[?25l[69;30H[K[85;144H0[69;30H[?25h[85;1H[1mrecording @ar[m[85;13H[K[69;29H[?25l[85;130H^[[69;29H[85;130H  [69;30H[85;140H69,29[9CTop[69;29H[?25h[?25l[85;130H^[[69;29H[85;130H  [69;29H[85;130H^[[69;29H[85;130H  [69;29H[?25h[?25l[85;130H^[[69;29H[85;130H  [69;29H[85;130H^[[69;29H[85;130H  [69;29H[?25h[?25l[85;130H^[[69;29H[85;130H  [69;29H[85;130H^[[69;29H[85;130H  [69;29H[?25h[?25l[85;130H:[69;29H[85;1H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ vim calc.py [12@./calc.py expn-data.txt[C[12Pvim calc.py[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.py" 128L, 2824C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple


[31m"""
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
"""[m

[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[29;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[31;9H[33mnonlocal[m lookahead[32;9H[33mif[m (lookahead.kind == kind):[33;13Hlookahead = nextToken()[34;9H[33melse[m:[35;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[36;19H[36mfile[m=sys.stderr)[37;13Hsys.exit([31m1[m)
    [33mdef[m [36mnextToken[m():[39;9H[33mnonlocal[m index[40;9H[33mif[m (index >= [36mlen[m(tokens)):[41;13H[33mreturn[m Token([31m'EOF'[m, [31m'<EOF>'[m)[42;9H[33melse[m:[43;13Htok = tokens[index][44;13Hindex += [31m1[m[45;13H[33mreturn[m tok[47;5H[33mdef[m [36mprogram[m():[48;9Hvalues = [][49;9H[33mwhile[m ([33mnot[m check([31m'EOF'[m)):[50;13Hvalues.append(expr())[51;13Hmatch([31m';'[m)[52;9H[33mreturn[m values[54;5H[33mdef[m [36mexpr[m():[55;9Ht = term()[56;9H[33mwhile[m (check([31m'+'[m) [33mor[m (check([31m'-'[m))):[57;13Hkind = lookahead.kind[58;13Hmatch(kind)[59;13Ht1 = term()[60;13Ht += (t1 [33mif[m (kind == [31m'+'[m) [33melse[m -t1)[61;9H[33mreturn[m t[63;5H[33mdef[m [36mterm[m():[64;9H[33mif[m (check([31m'-'[m)):[65;13Hmatch([31m'-'[m)[66;13H[33mreturn[m - term()[67;9H[33mif[m (check([31m'**'[m)):[68;13Hmatch([31m'**'[m)[69;13H[33mreturn[m ** term[46m()[m[70;9H[33melse[m:[71;13H[33mreturn[m factor()[73;5H[33mdef[m [36mfactor[m():[74;9H[33mif[m (check([31m'INT'[m)):[75;13Hvalue = [36mint[m(lookahead.lexeme)[76;13Hmatch([31m'INT'[m)[77;13H[33mreturn[m value[78;9H[33melse[m:[79;13Hmatch([31m'('[m)[80;13Hvalue = expr()[81;13Hmatch([31m')'[m)[82;13H[33mreturn[m value[84;5H[34m#begin parse()[m[85;140H69,28[9CTop[69;28H[?25h[?1000l[?1002h[?25l[1;84r[1;1H[3M[1;85r[82;5Htokens = scan(text)
    index = [31m0[m
    lookahead = nextToken()[85;1H[K[85;140H69,28[10C6%[66;28H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5Hvalue = program()
    [33mif[m ([33mnot[m check([31m'EOF'[m)):[84;9H[36mprint[m(f[31m'expecting <EOF>, got {lookahead.lexeme}'[m, [36mfile[m=sys.stderr)[85;140H[K[85;140H69,28[9C13%[63;28H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hsys.exit([31m1[m)
    [33mreturn[m value[85;140H[K[85;140H69,28[9C20%[60;28H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mdef[m [36mscan[m(text):
    [33mdef[m [36mnext_match[m(text):[84;9Hm = re.compile([31mr'\s+'[m).match(text)[85;140H[K[85;140H69,28[9C27%[57;28H[?25h[?25l[85;130Ha[57;28H[85;130H [57;29H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H69,29[9C27%[57;29H[?25h[?25l[57;28H[K[57;27H([85;144H8[57;28H[?25h[?25l[57;27H[K[85;144H7[57;27H[?25h[?25l[57;26H[K[85;144H6[57;26H[?25h[?25l[57;25H[K[85;144H5[57;25H[?25h[?25l[57;24H[K[85;144H4[57;24H[?25h[?25l[57;23H[K[85;144H3[57;23H[?25h[?25l[85;144H2[57;22H[?25h[?25l[57;21H[K[85;144H1[57;21H[?25h[?25l[57;20H[K[85;144H0[57;20H[?25h[?25l[85;143H19[57;19H[?25h[?25lretur[57;18H[K[85;144H8[57;18H[?25h[?25l[57;17H[K[85;144H7[57;17H[?25h[?25l[57;16H[K[85;144H6[57;16H[?25h[?25l[57;15H[K[85;144H5[57;15H[?25h[?25l[57;14H[K[85;144H4[57;14H[?25h[?25l[57;13H[K[85;144H3[57;13H[?25h[?25l[85;143H9 [57;9H[?25h[?25l[85;143H5[57;5H[?25h[?25l[85;143H1[57;1H[?25h[?25l[56;84r[84;1H
[1;85r[56;13Hmatch([31m'**'[m)[84;9H[33mif[m (m): [33mreturn[m (m, [36mNone[m)[85;140H[K[85;140H68,24[9C27%[56;18H[46m([4C)[?25h[?25l[m[56;23H[K[56;18H([85;144H3[56;23H[?25h[?25l[56;22H[K[57;1H[31m        else:
            return factor()

    def factor():
        if (check([m[1CINT[1C[31m)):
            value = int(lookahead.lexeme)
            match([m[1CINT[1C[31m)
            return value
        else:
            match([m[1C([1C[31m)
            value = expr()
            match([m[1C)[1C[31m)
            return value

    #begin parse()
    tokens = scan(text)
    index = 
    lookahead = nextToken()
    value = program()
    if (not check([m[1CEOF[1C[31m)):
        print(f[m[1Cexpecting <EOF>, got {lookahead.lexeme}[1C[31m, file=sys.stderr)
        sys.exit(1)
    return value

def scan(text):
    def next_match(text):
        m = re.compile([m[2C\s+[1C[31m).match(text)
        if (m): return (m, None)[m[85;144H2[56;22H[?25h[?25l[56;21H[K[85;144H1[56;21H[?25h[?25l[56;20H[K[85;144H0[56;20H[?25h[?25l[56;19H[K[57;1H        [33melse[m:
            [33mreturn[m factor()

    [33mdef[m [36mfactor[m():
        [33mif[m (check([1C[31mINT[m[1C)):
            value = [36mint[m(lookahead.lexeme)
            match([1C[31mINT[m[1C)
            [33mreturn[m value
        [33melse[m:
            match([1C[31m([m[1C)
            value = expr()
            match([1C[31m)[m[1C)
            [33mreturn[m value

    [34m#begin parse()[m
    tokens = scan(text)
    index = 
    lookahead = nextToken()
    value = program()
    [33mif[m ([33mnot[m check([1C[31mEOF[m[1C)):
        [36mprint[m(f[1C[31mexpecting <EOF>, got {lookahead.lexeme}[m[1C, [36mfile[m=sys.stderr)
        sys.exit([1C)
    [33mreturn[m value

[33mdef[m [36mscan[m(text):
    [33mdef[m [36mnext_match[m(text):
        m = re.compile([2C[31m\s+[m[1C).match(text)
        [33mif[m (m): [33mreturn[m (m, [36mNone[m)[85;143H19[56;19H[?25h[?25l[56;18H[K[85;144H8[56;18H[?25h[?25l[56;17H[K[85;144H7[56;17H[?25h[?25l[56;16H[K[85;144H6[56;16H[?25h[?25l[56;15H[K[85;144H5[56;15H[?25h[?25l[56;14H[K[85;144H4[56;14H[?25h[?25l[56;13H[K[85;144H3[56;13H[?25h[?25l[85;143H9 [56;9H[?25h[?25l[85;143H5[56;5H[?25h[?25l[85;143H1[56;1H[?25h[?25l[55;84r[84;1H
[1;85r[55;9H[33mif[m (check([31m'**'[m)):[84;9Hm = re.compile([31mr'\d+'[m).match(text)[85;140H[K[85;140H67,26[9C28%[55;26H[?25h[?25l[55;25H[K[55;12H[46m([11C)[m[85;144H5[55;25H[?25h[?25l[55;24H[K[55;12H(check[46m([4C)[m[85;144H4[55;24H[?25h[?25l[55;23H[K[55;18H([85;144H3[55;23H[?25h[?25l[55;22H[K[56;1H[31m        else:
            return factor()

    def factor():
        if (check([m[1CINT[1C[31m)):
            value = int(lookahead.lexeme)
            match([m[1CINT[1C[31m)
            return value
        else:
            match([m[1C([1C[31m)
            value = expr()
            match([m[1C)[1C[31m)
            return value

    #begin parse()
    tokens = scan(text)
    index = 
    lookahead = nextToken()
    value = program()
    if (not check([m[1CEOF[1C[31m)):
        print(f[m[1Cexpecting <EOF>, got {lookahead.lexeme}[1C[31m, file=sys.stderr)
        sys.exit(1)
    return value

def scan(text):
    def next_match(text):
        m = re.compile([m[2C\s+[1C[31m).match(text)
        if (m): return (m, None)
        m = re.compile([m[2C\d+[1C[31m).match(text)[m[85;144H2[55;22H[?25h[?25l[55;21H[K[85;144H1[55;21H[?25h[?25l[55;20H[K[85;144H0[55;20H[?25h[?25l[55;19H[K[56;1H        [33melse[m:
            [33mreturn[m factor()

    [33mdef[m [36mfactor[m():
        [33mif[m (check([1C[31mINT[m[1C)):
            value = [36mint[m(lookahead.lexeme)
            match([1C[31mINT[m[1C)
            [33mreturn[m value
        [33melse[m:
            match([1C[31m([m[1C)
            value = expr()
            match([1C[31m)[m[1C)
            [33mreturn[m value

    [34m#begin parse()[m
    tokens = scan(text)
    index = 
    lookahead = nextToken()
    value = program()
    [33mif[m ([33mnot[m check([1C[31mEOF[m[1C)):
        [36mprint[m(f[1C[31mexpecting <EOF>, got {lookahead.lexeme}[m[1C, [36mfile[m=sys.stderr)
        sys.exit([1C)
    [33mreturn[m value

[33mdef[m [36mscan[m(text):
    [33mdef[m [36mnext_match[m(text):
        m = re.compile([2C[31m\s+[m[1C).match(text)
        [33mif[m (m): [33mreturn[m (m, [36mNone[m)
        m = re.compile([2C[31m\d+[m[1C).match(text)[85;143H19[55;19H[?25h[?25l[55;18H[K[85;144H8[55;18H[?25h[?25l[55;17H[K[85;144H7[55;17H[?25h[?25l[55;16H[K[85;144H6[55;16H[?25h[?25l[55;15H[K[85;144H5[55;15H[?25h[?25l[55;14H[K[85;144H4[55;14H[?25h[?25l[55;13H[K[85;144H3[55;13H[?25h[?25l[55;12H[K[85;144H2[55;12H[?25h[?25l[85;144H1[55;11H[?25h[?25li[55;10H[K[85;144H0[55;10H[?25h[?25l[55;9H[K[85;143H9 [55;9H[?25h[?25l[85;143H5[55;5H[?25h[?25l[85;143H1[55;1H[?25h[?25l[54;84r[84;1H
[1;85r[54;13H[33mreturn[m - term()[84;9H[33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[85;140H[K[85;140H66,28[9C29%[54;26H[46m()[?25h[?25l[1;84r[m[1;1H[3M[1;85r[82;9Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m[83;9H[33mif[m (m): [33mreturn[m (m, m.group())[85;140H[K[85;140H66,28[9C36%[51;28H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5Htokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[84;9H(match, kind) = next_match(text)[85;140H[K[85;140H66,28[9C43%[48;28H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hlexeme = match.group()[83;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[84;9Htext = text[[36mlen[m(lexeme):][85;140H[K[85;140H66,28[9C51%[45;28H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mreturn[m tokens

[33mdef[m [36mmain[m():[85;140H[K[85;140H66,28[9C58%[42;28H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    [36mprint[m(parse(contents))[85;140H[K[85;140H66,28[9C65%[39;28H[?25h[?25l()[50;25H[46m()[m[85;140H77,27[50;27H[?25h[?25l()[85;140H91,16[64;16H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[85;140H[K[85;140H91,16[9C73%[61;16H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hcontent = [36mfile[m.read()
    [33mreturn[m content[85;140H[K[85;140H91,16[9C80%[58;16H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1HToken = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():[85;140H[K[85;140H91,16[9C87%[55;16H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)[85;140H[K[85;140H91,16[9C95%[52;16H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mif[m __name__ == [31m"__main__"[m:
    main()
[1m[34m~                                                                                                                                                            [m[85;140H[K[85;140H91,16[9CBot[49;16H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H91,16[9CBot[46;16H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H91,16[9CBot[43;16H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H91,16[9CBot[40;16H[?25h[?25l[52;29H[46m()[m[85;140H103,31[52;31H[?25h[?25la()[85;145H2[52;32H[?25h[?25l[52;31H[K[52;29H[46m()[m[85;145H1[52;31H[?25h[?25l[53;84r[53;1H[L[1;85r[85;140H[K[85;140H104,9[9CBot[52;29H()[53;9H[?25h[?25lp[85;144H10[53;10H[?25h[?25lr[85;145H1[53;11H[?25h[?25li[85;145H2[53;12H[?25h[?25ln[85;145H3[53;13H[?25h[?25l[36mprint[m[85;145H4[53;14H[?25h[?25l[85;145H5[53;15H[?25h[?25l([85;145H6[53;16H[?25h[?25lk[85;145H7[53;17H[?25h[?25li[85;145H8[53;18H[?25h[?25ln[85;145H9[53;19H[?25h[?25ld[85;144H20[53;20H[?25h[?25l)[46m([mkind[46m)[m[85;145H1[53;21H[?25h[85;1H[K[53;20H[?25l[85;130H^[[53;20H[85;130H  [53;21H[85;140H104,20[8CBot[53;20H[?25h[?25l[85;130H:[53;20H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.py" 126L, 2766C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ vim calc.py [12@./calc.py expn-data.txt[Cclear[K./calc.py expn-data.txt [1@a[C[1P[1P[1P[1P[1P[1P
INT
None
+
None
INT
None
-
None
INT
;
None
-
-
INT
None
-
None
(
INT
None
-
None
INT
)
;
None
[0, 3]
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ./calc.py data.txt [7Pvim calc.py[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.py" 126L, 2766C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[4;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[6;9H[33mnonlocal[m lookahead[7;9H[33mif[m (lookahead.kind == kind):[8;13Hlookahead = nextToken()[9;9H[33melse[m:[10;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[11;19H[36mfile[m=sys.stderr)[12;13Hsys.exit([31m1[m)
    [33mdef[m [36mnextToken[m():[14;9H[33mnonlocal[m index[15;9H[33mif[m (index >= [36mlen[m(tokens)):[16;13H[33mreturn[m Token([31m'EOF'[m, [31m'<EOF>'[m)[17;9H[33melse[m:[18;13Htok = tokens[index][19;13Hindex += [31m1[m[20;13H[33mreturn[m tok[22;5H[33mdef[m [36mprogram[m():[23;9Hvalues = [][24;9H[33mwhile[m ([33mnot[m check([31m'EOF'[m)):[25;13Hvalues.append(expr())[26;13Hmatch([31m';'[m)[27;9H[33mreturn[m values[29;5H[33mdef[m [36mexpr[m():[30;9Ht = term()[31;9H[33mwhile[m (check([31m'+'[m) [33mor[m (check([31m'-'[m))):[32;13Hkind = lookahead.kind[33;13Hmatch(kind)[34;13Ht1 = term()[35;13Ht += (t1 [33mif[m (kind == [31m'+'[m) [33melse[m -t1)[36;9H[33mreturn[m t[38;5H[33mdef[m [36mterm[m():[39;9H[33mif[m (check([31m'-'[m)):[40;13Hmatch([31m'-'[m)[41;13H[33mreturn[m - term()[42;9H[33melse[m:[43;13H[33mreturn[m factor()[45;5H[33mdef[m [36mfactor[m():[46;9H[33mif[m (check([31m'INT'[m)):[47;13Hvalue = [36mint[m(lookahead.lexeme)[48;13Hmatch([31m'INT'[m)[49;13H[33mreturn[m value[50;9H[33melse[m:[51;13Hmatch([31m'('[m)[52;13Hvalue = expr()[53;13Hmatch([31m')'[m)[54;13H[33mreturn[m value[56;5H[34m#begin parse()[m
    tokens = scan(text)
    index = [31m0[m
    lookahead = nextToken()
    value = program()
    [33mif[m ([33mnot[m check([31m'EOF'[m)):[62;9H[36mprint[m(f[31m'expecting <EOF>, got {lookahead.lexeme}'[m, [36mfile[m=sys.stderr)[63;9Hsys.exit([31m1[m)
    [33mreturn[m value

[33mdef[m [36mscan[m(text):
    [33mdef[m [36mnext_match[m(text):[68;9Hm = re.compile([31mr'\s+'[m).match(text)[69;9H[33mif[m (m): [33mreturn[m (m, [36mNone[m)[70;9Hm = re.compile([31mr'\d+'[m).match(text)[71;9H[33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[72;9Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m[73;9H[33mif[m (m): [33mreturn[m (m, m.group())[75;5Htokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[77;9H(match, kind) = next_match(text)[78;9Hlexeme = match.group()[79;9H[36mprint[m [46m([mkind[46m)[m[80;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[81;9Htext = text[[36mlen[m(lexeme):]
    [33mreturn[m tokens

[33mdef[m [36mmain[m():[85;140H104,20[8C59%[79;20H[?25h[?1000l[?1002h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    [36mprint[m(parse(contents))[85;1H[K[85;140H104,20[8C66%[76;20H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[85;140H[K[85;140H104,20[8C73%[73;20H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hcontent = [36mfile[m.read()
    [33mreturn[m content[85;140H[K[85;140H104,20[8C80%[70;20H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1HToken = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():[85;140H[K[85;140H104,20[8C88%[67;20H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)[85;140H[K[85;140H104,20[8C95%[64;20H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33mdef[m [36mnextToken[m():[2;9H[33mnonlocal[m index[3;9H[33mif[m (index >= [36mlen[m(tokens)):[85;140H[K[85;140H104,20[8C88%[67;20H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[2;19H[36mfile[m=sys.stderr)[3;13Hsys.exit([31m1[m)[85;140H[K[85;140H104,20[8C80%[70;20H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mif[m (lookahead.kind == kind):[2;13Hlookahead = nextToken()[3;9H[33melse[m:[85;140H[K[85;140H104,20[8C73%[73;20H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[3;9H[33mnonlocal[m lookahead[85;140H[K[85;140H104,20[8C66%[76;20H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[85;140H[K[85;140H104,20[8C59%[79;20H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();
    contents = readFile(sys.argv[[31m1[m]);
    [36mprint[m(parse(contents))[85;140H[K[85;140H104,20[8C66%[76;20H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[33mdef[m [36mreadFile[m(path):
    [33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[85;140H[K[85;140H104,20[8C73%[73;20H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hcontent = [36mfile[m.read()
    [33mreturn[m content[85;140H[K[85;140H104,20[8C80%[70;20H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1HToken = namedtuple([31m'Token'[m, [[31m'kind'[m, [31m'lexeme'[m])

[33mdef[m [36musage[m():[85;140H[K[85;140H104,20[8C88%[67;20H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36mprint[m(f[31m'usage: {sys.argv[0]} DATA_FILE'[m)
    sys.exit([31m1[m)[85;140H[K[85;140H104,20[8C95%[64;20H[?25h[?25l[85;130Ha[64;20H[85;130H [64;21H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H104,21[8C95%[64;21H[?25h[?25l[64;20H[K[64;15H([85;145H0[64;20H[?25h[?25l[64;19H[K[85;144H19[64;19H[?25h[?25l[64;18H[K[85;145H8[64;18H[?25h[?25l[64;17H[K[85;145H7[64;17H[?25h[?25l[64;16H[K[85;145H6[64;16H[?25h[?25l[64;15H[K[85;145H5[64;15H[?25h[?25l[85;145H4[64;14H[?25h[?25lprin[64;13H[K[85;145H3[64;13H[?25h[?25l[64;12H[K[85;145H2[64;12H[?25h[?25l[64;11H[K[85;145H1[64;11H[?25h[?25l[64;10H[K[85;145H0[64;10H[?25h[?25l[64;9H[K[85;144H9 [64;9H[?25h[?25l[85;144H5[64;5H[?25h[?25l[85;144H1[64;1H[?25h[?25l[63;84r[84;1H
[1;85r[63;9Hlexeme = match.group()[84;1H[33mif[m __name__ == [31m"__main__"[m:[85;140H[K[85;140H103,31[8C97%[63;29H[46m()[?25h[?25l[1;84r[m[1;1H[3M[1;85r[82;5Hmain()
[1m[34m~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H103,31[8CBot[60;31H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H103,31[8CBot[57;31H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;13Hindex += [31m1[m[2;13H[33mreturn[m tok[85;140H[K[85;140H103,31[8CBot[60;31H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;13H[33mreturn[m Token([31m'EOF'[m, [31m'<EOF>'[m)[2;9H[33melse[m:[3;13Htok = tokens[index][85;140H[K[85;140H103,31[8C97%[63;31H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33mdef[m [36mnextToken[m():[2;9H[33mnonlocal[m index[3;9H[33mif[m (index >= [36mlen[m(tokens)):[85;140H[K[85;140H103,31[8C90%[66;31H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[2;19H[36mfile[m=sys.stderr)[3;13Hsys.exit([31m1[m)[85;140H[K[85;140H103,31[8C82%[69;31H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;9H[33mif[m (lookahead.kind == kind):[2;13Hlookahead = nextToken()[3;9H[33melse[m:[85;140H[K[85;140H103,31[8C75%[72;31H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[3;9H[33mnonlocal[m lookahead[85;140H[K[85;140H103,31[8C68%[75;31H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[85;140H[K[85;140H103,31[8C60%[78;31H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  ;
"""[m[85;140H[K[85;140H101,27[8C53%[81;29H()[79;27H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31mfactor
  : INT
  | '(' expr ')'[m[85;140H[K[85;140H98,31[9C46%[79;31H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  : '-' term
  | factor
  ;[m[85;140H[K[85;140H95,31[9C39%[79;23H[46m([6C)[?25h[?25l[1;84r[m[1;1H[3L[1;85r[1;1H[31m  : term ( ( '+' | '-' ) term )*
  ;
term[m[85;140H[K[85;140H92,26[9C31%[82;23H([6C)[79;26H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  | #empty
  ;
expr[m[85;140H[K[85;140H89,17[9C24%[79;17H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m"""
program
  : expr ';' program[m[85;140H[K[85;140H86,27[9C17%[79;27H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[35mfrom[m collections [35mimport[m namedtuple[85;140H[K[85;140H83,14[10C9%[79;14H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;1H[35mimport[m re
[35mimport[m sys[85;140H[K[85;140H80,1[11C2%[79;1H[?25h[?25l[1;84r[1;1H[L[1;85r[1;1H[34m#!/usr/bin/env python3[m[85;140H[K[85;140H79,25[9CTop[79;25H[?25h[?25l[85;140H[K[85;140H79,25[9CTop[79;25H[?25h[?25l[85;140H[K[85;140H79,25[9CTop[79;25H[?25h[?25l[85;140H[K[85;140H79,25[9CTop[79;25H[?25h[?25l[85;140H[K[85;140H79,25[9CTop[79;25H[?25h[?25l[85;140H57,34[57;34H[?25h[?25l[85;140H37,19[37;19H[?25h[85;1H[K[37;18H[?25l[85;130H^[[37;18H[85;130H  [37;19H[85;140H37,18[9CTop[37;18H[?25h[?25l[85;130H:[37;18H[85;130H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ cd ..
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises$ cd ..
kmoshie1@remote-n15:~/i471a/submit/lab1$ cd ..vim calc.py [7Pcd ..[Kcd exercises/
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises$ d[Kcd [K[K[Kls
01-regex  02-lexer  03-calc  04-ast  ast  calc	lexer  regex
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises$ cd calc/
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ls
calc.mjs  calc.py  data.txt  expn-data.txt
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ vim calc.
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc." [New File][2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[1m[34m~                                                                                                                                                            [3;1H~                                                                                                                                                            [4;1H~                                                                                                                                                            [5;1H~                                                                                                                                                            [6;1H~                                                                                                                                                            [7;1H~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H0,0-1[9CAll[1;1H[?25h[?1000l[?1002h[?25l[85;130H^[[1;1H[85;130H  [1;1H[85;130H^[[1;1H[85;130H  [1;1H[?25h[?25l[85;130H:[1;1H[85;1H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ vim clac[K[K[Kac[Klc.py 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.py" 126L, 2766C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple


[31m"""
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
"""[m

[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[29;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[31;9H[33mnonlocal[m lookahead[32;9H[33mif[m (lookahead.kind == kind):[33;13Hlookahead = nextToken()[34;9H[33melse[m:[35;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[36;19H[36mfile[m=sys.stderr)[37;13Hsys.exit([31m1[m)
    [33mdef[m [36mnextToken[m():[39;9H[33mnonlocal[m index[40;9H[33mif[m (index >= [36mlen[m(tokens)):[41;13H[33mreturn[m Token([31m'EOF'[m, [31m'<EOF>'[m)[42;9H[33melse[m:[43;13Htok = tokens[index][44;13Hindex += [31m1[m[45;13H[33mreturn[m tok[47;5H[33mdef[m [36mprogram[m():[48;9Hvalues = [][49;9H[33mwhile[m ([33mnot[m check([31m'EOF'[m)):[50;13Hvalues.append(expr())[51;13Hmatch([31m';'[m)[52;9H[33mreturn[m values[54;5H[33mdef[m [36mexpr[m():[55;9Ht = term()[56;9H[33mwhile[m (check([31m'+'[m) [33mor[m (check([31m'-'[m))):[57;13Hkind = lookahead.kind[58;13Hmatch(kind)[59;13Ht1 = term()[60;13Ht += (t1 [33mif[m (kind == [31m'+'[m) [33melse[m -t1)[61;9H[33mreturn[m t[63;5H[33mdef[m [36mterm[m():[64;9H[33mif[m (check([31m'-'[m)):[65;13Hmatch([31m'-'[m)[66;13H[33mreturn[m - term()[67;9H[33melse[m:[68;13H[33mreturn[m factor()[70;5H[33mdef[m [36mfactor[m():[71;9H[33mif[m (check([31m'INT'[m)):[72;13Hvalue = [36mint[m(lookahead.lexeme)[73;13Hmatch([31m'INT'[m)[74;13H[33mreturn[m value[75;9H[33melse[m:[76;13Hmatch([31m'('[m)[77;13Hvalue = expr()[78;13Hmatch([31m')'[m)[79;13H[33mreturn[m value[81;5H[34m#begin parse()[m
    tokens = scan(text)
    index = [31m0[m
    lookahead = nextToken()[85;140H37,18[9CTop[37;18H[?25h[?1000l[?1002h[?25l[1;84r[1;1H[3M[1;85r[82;5Hvalue = program()
    [33mif[m ([33mnot[m check([31m'EOF'[m)):[84;9H[36mprint[m(f[31m'expecting <EOF>, got {lookahead.lexeme}'[m, [36mfile[m=sys.stderr)[85;1H[K[85;140H37,18[10C7%[34;18H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hsys.exit([31m1[m)
    [33mreturn[m value[85;140H[K[85;140H37,18[9C14%[31;18H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mdef[m [36mscan[m(text):
    [33mdef[m [36mnext_match[m(text):[84;9Hm = re.compile([31mr'\s+'[m).match(text)[85;140H[K[85;140H37,18[9C21%[28;18H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9H[33mif[m (m): [33mreturn[m (m, [36mNone[m)[83;9Hm = re.compile([31mr'\d+'[m).match(text)[84;9H[33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[85;140H[K[85;140H37,18[9C28%[25;18H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m[83;9H[33mif[m (m): [33mreturn[m (m, m.group())[85;140H[K[85;140H37,18[9C35%[22;18H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5Htokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[84;9H(match, kind) = next_match(text)[85;140H[K[85;140H37,18[9C42%[19;18H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Hlexeme = match.group()[83;9H[36mprint[m (kind)[84;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[85;140H[K[85;140H37,18[9C50%[16;18H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  ;
factor
  : INT[m[85;140H[K[85;140H37,18[9C42%[19;18H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31mterm
  : '-' term
  | factor[m[85;140H[K[85;140H37,18[9C35%[22;18H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31mexpr
  : term ( ( '+' | '-' ) term )*
  ;[m[85;140H[K[85;140H37,18[9C28%[25;18H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[31m  : expr ';' program
  | #empty
  ;[m[85;140H[K[85;140H37,18[9C21%[28;18H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;1H[31m"""
program[m[85;140H[K[85;140H37,18[9C14%[31;18H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple[85;140H[K[85;140H37,18[10C7%[34;18H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re[85;140H[K[85;140H37,18[9CTop[37;18H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[85;130H^[[37;18H[85;130H  [37;18H[85;130H^[[37;18H[85;130H  [37;18H[?25h[?25l[85;130H:[37;18H[85;130H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 135L, 2350C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7Ht += (kind === [31m'+'[m) ? t1 : -t1;
    [36m}[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[70;7Hmatch([31m'-'[m);[71;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[74;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m
    [33mif[m (check([31m'INT'[m)) [36m{[m[80;7H[33mconst[m value = parseInt(lookahead.lexeme);[81;7Hmatch([31m'INT'[m);[82;7H[33mreturn[m value;
    [36m}[m
    [33melse[m [36m{[m[85;140H1,1[11CTop[1;1H[?25h[?1000l[?1002h[?25l[1;84r[1;1H[3M[1;85r[82;7Hmatch([31m'('[m);[83;7H[33mconst[m value = expr();[84;7Hmatch([31m')'[m);[85;1H[K[85;140H9,1[12C5%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7H[33mreturn[m value;
    [36m}
[m  [36m}[m[85;140H[K[85;140H12,1[10C11%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36m}[m[85;140H[K[85;140H15,1[10C17%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36mfunction[m scan(text) [36m{[m
  [33mconst[m tokens = [36m[][m;
  [33mwhile[m (text.length > 0) [36m{[m[85;140H[K[85;140H18,1[10C23%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36mlet[m m;
    [33mif[m ((m = text.match(/^[36m\[ms+/))) [36m{
[m    [36m}[m[85;140H[K[85;140H21,1[10C29%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33melse[m [33mif[m ((m = text.match(/^[36m\[md+/))) [36m{[m[83;7Htokens.push([33mnew[m Token([31m'INT'[m, m[36m[[m0[36m][m));
    [36m}[m[85;140H[K[85;140H24,0-1[8C35%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33melse[m [36m{[m[83;7Hm = text.match(/^./);[84;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));[85;140H[K[85;140H27,1[10C41%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36m}[m
    text = text.substring(m[36m[[m0[36m][m.length);
  [36m}[m[85;140H[K[85;140H30,1[10C47%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mreturn[m tokens;
[36m}[m[85;140H[K[85;140H33,1[10C52%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[33mconst[m CHAR_SET = [31m'utf8'[m;
[36mfunction[m main() [36m{[m[85;140H[K[85;140H36,1[10C58%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mif[m (process.argv.length !== 3) usage();
  [33mconst[m file = process.argv[36m[[m2[36m][m;
  [33mconst[m text = fs.readFileSync(file === [31m'-'[m ? 0 : file, CHAR_SET);[85;140H[K[85;140H39,1[10C64%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mconst[m value = parse(text);
  console.log(value);
[36m}[m[85;140H[K[85;140H42,1[10C70%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[36mfunction[m usage() [36m{[m
  [33mconst[m prog = Path.basename(process.argv[36m[[m1[36m][m)[85;140H[K[85;140H45,1[10C76%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3Hconsole.error([31m`usage: [m[35m${prog}[m[31m INPUT_FILE`[m);
  process.exit(1);
[36m}[m[85;140H[K[85;140H48,1[10C82%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[33mclass[m Token [36m{[m
  constructor(kind, lexeme) [36m{[m[85;140H[K[85;140H51,1[10C88%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[32mObject[m.assign([36mthis[m, [36m{[mkind, lexeme[36m}[m);
  [36m}
}[m[85;140H[K[85;140H54,1[10C94%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1Hmain();[85;140H[K[85;140H57,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H60,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H63,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H66,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H69,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H72,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H75,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H78,1[10CBot[6;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;7Hmatch([31m'-'[m);[2;7H[33mreturn[m - term();
    [36m}[m[85;140H[K[85;140H78,1[10CBot[9;1H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;3H[36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[85;140H[K[85;140H78,1[10CBot[12;1H[?25h[?25l[34;40H[36m[46m{[36;5H}[m[85;140H100,40[34;40H[?25h[?25l[36m{[36;5H}[m[85;142H1,42[35;42H[?25h[?25l[85;130H~@k[35;42H[85;130H   [36;5H[34;40H[36m[46m{[36;5H}[m[85;142H2,5 [36;5H[?25h[?25l[85;130H~@k[36;5H[85;130H   [35;42H[34;40H[36m{[36;5H}[m[85;142H1,42[35;42H[?25h[?25l[85;130H~@k[35;42H[85;130H   [35;42H[?25h[?25l[85;130Ha[35;42H[85;130H [35;43H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H101,43[8CBot[35;43H[?25h[?25l[34;40H[36m[46m{[36;5H}[m[85;142H2,6 [36;6H[?25h[?25le[34;40H[36m{[36;5H}[m[85;144H7[36;7H[?25h[?25ll[85;144H8[36;8H[?25h[?25ls[85;144H9[36;9H[?25h[?25l[33melse[m[85;144H10[36;10H[?25h[?25l[85;145H1[36;11H[?25h[?25li[85;145H2[36;12H[?25h[?25l[33mif[m[85;145H3[36;13H[?25h[?25l([85;145H4[36;14H[?25h[?25l([85;145H5[36;15H[?25h[?25l[85;145H6[36;16H[?25h[?25lm[85;145H7[36;17H[?25h[?25l[85;145H8[36;18H[?25h[?25l=[85;145H9[36;19H[?25h[?25l[85;144H20[36;20H[?25h[?25lt[85;145H1[36;21H[?25h[?25le[85;145H2[36;22H[?25h[?25lx[85;145H3[36;23H[?25h[?25lt[85;145H4[36;24H[?25h[?25l.[85;145H5[36;25H[?25h[?25lm[85;145H6[36;26H[?25h[?25la[85;145H7[36;27H[?25h[?25lt[85;145H8[36;28H[?25h[?25lc[85;145H9[36;29H[?25h[?25lh[85;144H30[36;30H[?25h[?25l([85;145H1[36;31H[?25h[?25l/[85;145H2[36;32H[?25h[?25l[36m\[m[85;145H3[36;33H[?25h[?25l*[85;145H4[36;34H[?25h[?25l[36m\[m[85;145H5[36;35H[?25h[?25l*[85;145H6[36;36H[?25h[?25l/[85;145H7[36;37H[?25h[?25l)[36;30H[46m([6C)[m[85;145H8[36;38H[?25h[?25l)[36;14H[46m([m[15C([6C)[46m)[m[85;145H9[36;39H[?25h[?25l[36m{[m[36;14H([23C)[36m[46m{[42;3H}[m[85;144H40[36;40H[?25h[?25l[37;84r[37;1H[L[1;85r[42;3H[46m [m
  [36m}[m[85;140H[K[85;140H103,6-13      Bot[36;39H[36m{[m[42;3H [37;13H[?25h[?25l[38;84r[38;1H[L[1;85r[85;140H[K[85;140H104,6-13      Bot[38;13H[?25h[?25l[85;144H5-12[38;12H[?25h[?25l[85;144H4-11[38;11H[?25h[?25l[85;144H3-10[38;10H[?25h[?25l[85;144H2-9 [38;9H[?25h[?25l[85;144H1  [38;1H[?25h[?25l[37;84r[84;1H
[1;85r[84;1H[1m[34m~                                                                                                                                                            [m[85;140H[K[85;140H103,1[9CBot[37;1H[?25h[?25l[36;84r[84;1H
[1;85r[36;5H[36m}[m[33melse[m [33mif[m(( m = text.match(/[36m\[m*[36m\[m*/))[36m{[m[84;1H[1m[34m~                                                                                                                                                            [m[85;140H[K[85;140H102,40[8CBot[36;39H[36m[46m{[42;3H}[36;40H[?25h[?25l[37;84r[m[37;1H[L[1;85r[42;3H[46m [m
  [36m}[m[85;140H[K[85;140H103,6-13      Bot[36;39H[36m{[m[42;3H [37;13H[?25h[?25l[38;84r[38;1H[L[1;85r[85;140H[K[85;140H104,6-13      Bot[38;13H[?25h[?25l    [36m}[m[36;39H[36m[46m{[38;5H}[m[85;145H   [38;6H[?25h[?25l[36;39H[36m{[38;5H}[m[85;142H3,1[37;1H[?25h[?25l[85;144H2-9[37;9H[?25h[?25l[85;144H3-17[37;17H[?25h[?25l[85;144H2-9 [37;9H[?25h[?25lt[85;144H3-10[37;10H[?25h[?25lo[85;144H4-11[37;11H[?25h[?25lk[85;144H5-12[37;12H[?25h[?25le[85;144H6-13[37;13H[?25h[?25ln[85;144H7-14[37;14H[?25h[?25ls[85;144H8-15[37;15H[?25h[?25l.[85;144H9-16[37;16H[?25h[?25lp[85;144H10-17[37;17H[?25h[?25lu[85;145H1-18[37;18H[?25h[?25ls[85;145H2-19[37;19H[?25h[?25lh[85;145H3-20[37;20H[?25h[?25l([85;145H4-21[37;21H[?25h[?25ln[85;145H5-22[37;22H[?25h[?25le[85;145H6-23[37;23H[?25h[?25l[33mnew[m[85;145H7-24[37;24H[?25h[?25l[85;145H8-25[37;25H[?25h[?25lT[85;145H9-26[37;26H[?25h[?25lo[85;144H20-27[37;27H[?25h[?25lk[85;145H1-28[37;28H[?25h[?25le[85;145H2-29[37;29H[?25h[?25ln[85;145H3-30[37;30H[?25h[?25l([85;145H4-31[37;31H[?25h[?25lm[85;145H5-32[37;32H[?25h[?25l[36m[[m[85;145H6-33[37;33H[?25h[?25l0[85;145H7-34[37;34H[?25h[?25l[36m][m[36m[46m[[m0[36m[46m][m[85;145H8-35[37;35H[?25h[?25l,[36m[[m0[36m][m[85;145H9-36[37;36H[?25h[?25l[85;144H30-37[37;37H[?25h[?25lm[85;145H1-38[37;38H[?25h[?25l[36m[[m[85;145H2-39[37;39H[?25h[?25l0[85;145H3-40[37;40H[?25h[?25l[36m][m[36m[46m[[m0[36m[46m][m[85;145H4-41[37;41H[?25h[?25l)[37;30H[46m([m[7C[36m[[m0[36m][m[46m)[m[85;145H5-42[37;42H[?25h[?25l)[37;20H[46m([m[9C([10C)[46m)[m[85;145H6-43[37;43H[?25h[?25l;[37;20H([21C)[85;145H7-44[37;44H[?25h[?25l[36;39H[36m[46m{[38;5H}[m[85;142H2,40   [36;40H[?25h[?25l[85;144H39[36;39H[?25h[?25l[36;14H[46m([23C)[m[36m{[38;5H}[m[85;145H8[36;38H[?25h[?25l[36;14H([15C[46m([6C)[m)[85;145H7[36;37H[?25h[?25l[36;30H([6C)[85;145H6[36;36H[?25h[?25l[85;145H5[36;35H[?25h[?25l[85;145H4[36;34H[?25h[?25l[85;145H3[36;33H[?25h[?25l[85;145H2[36;32H[?25h[?25la[36m\[m*[36m\[m*/))[36m{[m[85;145H3[36;33H[?25h[?25l[85;145H2[36;32H[?25h[?25l[85;145H3[36;33H[?25h[?25l[36m\[m*[36m\[m*/))[36m{[m[36;40H[K[85;145H2[36;32H[?25h[?25l[36m\[m*[36m\[m*/))[36m{[m[36;39H[K[36;30H[46m([5C)[m[85;145H1[36;31H[?25h[?25l^[36m\[m*[36m\[m*[46m/[m))[36m{[m[36;30H([5C/[85;145H2[36;32H[?25h[?25l[85;145H3[36;33H[?25h[?25l[85;145H2[36;32H[?25h[85;1H[K[36;31H[?25l[85;130H^[[36;31H[85;130H  [36;32H[85;140H102,31[8CBot[36;31H[?25h[?25l[85;130H:[36;31H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 137L, 2427C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt 
file:///import/linux/home1/kmoshie1/projects/i471a/submit/lab1/exercises/calc/calc.mjs:102
    }else if(( m = text.match(^\*\*/)){
                              ^

SyntaxError: Unexpected token '^'
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C[1Ppy[C[1@mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 137L, 2427C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[12;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[15;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[16;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([21;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[28;7Hvalues.push(expr());[29;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[37;7H[33mconst[m kind = lookahead.kind;[38;7Hmatch(kind);[39;7H[33mconst[m t1 = term();[40;7Ht += (kind === [31m'+'[m) ? t1 : -t1;
    [36m}[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[47;7Hmatch([31m'-'[m);[48;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[51;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m
    [33mif[m (check([31m'INT'[m)) [36m{[m[57;7H[33mconst[m value = parseInt(lookahead.lexeme);[58;7Hmatch([31m'INT'[m);[59;7H[33mreturn[m value;
    [36m}[m
    [33melse[m [36m{[m[62;7Hmatch([31m'('[m);[63;7H[33mconst[m value = expr();[64;7Hmatch([31m')'[m);[65;7H[33mreturn[m value;
    [36m}
[m  [36m}
}


function[m scan(text) [36m{[m
  [33mconst[m tokens = [36m[][m;
  [33mwhile[m (text.length > 0) [36m{
[m    [36mlet[m m;
    [33mif[m ((m = text.match(/^[36m\[ms+/))) [36m{
[m    [36m}[m
    [33melse[m [33mif[m ((m = text.match(/^[36m\[md+/))) [36m{[m[78;7Htokens.push([33mnew[m Token([31m'INT'[m, m[36m[[m0[36m][m));
    [36m}[m[33melse[m [33mif[m(( m = text.match(^[36m\[m*[36m\[m*/))[36m{[m[80;9Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m
    [33melse[m [36m{[m[83;7Hm = text.match(/^./);[84;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));[85;140H102,31[8C43%[79;31H[?25h[?1000l[?1002h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36m}[m
    text = text.substring(m[36m[[m0[36m][m.length);
  [36m}[m[85;1H[K[85;140H102,31[8C49%[76;31H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mreturn[m tokens;
[36m}[m[85;140H[K[85;140H102,31[8C54%[73;31H[?25h[?25l[85;130H~@k[73;31H[85;130H   [73;32H[85;145H2[73;32H[?25h[?25l[85;130H~@k[73;32H[85;130H   [73;31H[85;145H1[73;31H[?25h[?25l[85;130Ha[73;31H[85;130H [73;32H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H102,32[8C54%[73;32H[?25h[?25l[46m([6C)[m[85;145H1[73;31H[?25h[?25l/^[36m\[m*[36m\[m*[46m/[m))[36m{[m[73;30H([6C/[85;145H2[73;32H[?25h[?25l[85;145H3[73;33H[?25h[?25l[85;145H4[73;34H[?25h[?25l[85;145H5[73;35H[?25h[?25l[85;145H6[73;36H[?25h[?25l[85;145H7[73;37H[?25h[?25l[73;30H[46m([7C)[m[85;145H8[73;38H[?25h[?25l[73;14H[46m([m[15C([7C)[46m)[m[85;145H9[73;39H[?25h[?25l[73;14H([15C[46m([7C)[m)[85;145H8[73;38H[?25h[85;1H[K[73;37H[?25l[85;130H^[[73;37H[85;130H  [73;38H[73;30H([7C)[85;140H102,37[8C54%[73;37H[?25h[?25l[85;130H:[73;37H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 137L, 2428C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ clear
[H[2J[3Jkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ clearvim calc.mjs [12@./calc.mjs expn-data.txt[C
file:///import/linux/home1/kmoshie1/projects/i471a/submit/lab1/exercises/calc/calc.mjs:102
    }else if(( m = text.match(/^\*\*/)){
                                       ^

SyntaxError: Unexpected token '{'
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt clear[Kvim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 137L, 2428C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[12;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[15;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[16;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([21;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[28;7Hvalues.push(expr());[29;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[37;7H[33mconst[m kind = lookahead.kind;[38;7Hmatch(kind);[39;7H[33mconst[m t1 = term();[40;7Ht += (kind === [31m'+'[m) ? t1 : -t1;
    [36m}[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[47;7Hmatch([31m'-'[m);[48;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[51;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m
    [33mif[m (check([31m'INT'[m)) [36m{[m[57;7H[33mconst[m value = parseInt(lookahead.lexeme);[58;7Hmatch([31m'INT'[m);[59;7H[33mreturn[m value;
    [36m}[m
    [33melse[m [36m{[m[62;7Hmatch([31m'('[m);[63;7H[33mconst[m value = expr();[64;7Hmatch([31m')'[m);[65;7H[33mreturn[m value;
    [36m}
[m  [36m}
}


function[m scan(text) [36m{[m
  [33mconst[m tokens = [36m[][m;
  [33mwhile[m (text.length > 0) [36m{
[m    [36mlet[m m;
    [33mif[m ((m = text.match(/^[36m\[ms+/))) [36m{
[m    [36m}[m
    [33melse[m [33mif[m ((m = text.match(/^[36m\[md+/))) [36m{[m[78;7Htokens.push([33mnew[m Token([31m'INT'[m, m[36m[[m0[36m][m));
    [36m}[m[33melse[m [33mif[m(( m = text.match(/^[36m\[m*[36m\[m*/))[36m{[m[80;9Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m
    [33melse[m [36m{[m[83;7Hm = text.match(/^./);[84;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));[85;140H102,37[8C43%[79;37H[?25h[?1000l[?1002h[?25l[85;130H~@k[79;37H[85;130H   [79;37H[1;84r[84;1H
[1;85r[84;5H[36m}[m[85;1H[K[85;140H103,30-37     45%[79;37H[?25h[?25l[85;130H~@k[79;37H[85;130H   [78;37H[85;142H2,37   [78;37H[?25h[?25l[85;130H~@k[78;37H[85;130H   [77;37H[36m[46m[[m0[36m[46m][m[85;142H1[77;37H[?25h[?25l[85;130H~@k[77;37H[85;130H   [77;36Hm[36m[[m0[36m][m[85;145H6[77;36H[?25h[?25l[85;130H~@k[77;36H[85;130H   [78;36H[85;142H2[78;36H[?25h[?25l[85;130H~@k[78;36H[85;130H   [78;35H[85;145H5[78;35H[?25h[?25l[85;130H~@k[78;35H[85;130H   [78;34H[85;145H4[78;34H[?25h[?25l[85;130H~@k[78;34H[85;130H   [78;33H[85;145H3[78;33H[?25h[?25l[85;130H~@k[78;33H[85;130H   [78;32H[85;145H2[78;32H[?25h[?25l[85;130H~@k[78;32H[85;130H   [78;31H[85;145H1[78;31H[?25h[?25l[85;130H~@k[78;31H[85;130H   [78;30H[46m([7C)[m[85;145H0[78;30H[?25h[?25l[85;130H~@k[78;30H[85;130H   [78;29Hh([7C)[85;144H29[78;29H[?25h[?25l[85;130H~@k[78;29H[85;130H   [78;28H[85;145H8[78;28H[?25h[?25l[85;130H~@k[78;28H[85;130H   [78;27H[85;145H7[78;27H[?25h[?25l[85;130H~@k[78;27H[85;130H   [78;26H[85;145H6[78;26H[?25h[?25l[85;130H~@k[78;26H[85;130H   [78;25H[85;145H5[78;25H[?25h[?25l[85;130H~@k[78;25H[85;130H   [78;24H[85;145H4[78;24H[?25h[?25l[85;130H~@k[78;24H[85;130H   [78;23H[85;145H3[78;23H[?25h[?25l[85;130H~@k[78;23H[85;130H   [78;22H[85;145H2[78;22H[?25h[?25l[85;130H~@k[78;22H[85;130H   [78;21H[85;145H1[78;21H[?25h[?25l[85;130H~@k[78;21H[85;130H   [78;20H[85;145H0[78;20H[?25h[?25l[85;130H~@k[78;20H[85;130H   [78;19H[85;144H19[78;19H[?25h[?25l[85;130H~@k[78;19H[85;130H   [78;18H[85;145H8[78;18H[?25h[?25l[85;130H~@k[78;18H[85;130H   [78;17H[85;145H7[78;17H[?25h[?25l[85;130H~@k[78;17H[85;130H   [78;16H[85;145H6[78;16H[?25h[?25l[85;130H~@k[78;16H[85;130H   [78;15H[85;145H5[78;15H[?25h[?25l[85;130H~@k[78;15H[85;130H   [78;14H[46m([24C)[m[85;145H4[78;14H[?25h[?25l[85;130H~@k[78;14H[85;130H   [78;15H([24C)[85;145H5[78;15H[?25h[?25l[85;130Ha[78;15H[85;130H [78;16H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H102,16[8C45%[78;16H[?25h[?25lm = text.match(/^[36m\[m*[36m\[m*/))[36m{[m[78;40H[K[78;14H[46m([23C)[m[85;145H5[78;15H[?25h[?25l([23C)[85;145H6[78;16H[?25h[?25l[46m([23C)[m[85;145H5[78;15H[?25h[?25l[46mm[m = text.match(/^[36m\[m*[36m\[m*/))[36m[46m{[m[78;39H[K[78;13H[46m([mm[22C[46m)[m[36m{[m[85;145H4[78;14H[?25h[?25l([23C)[85;145H5[78;15H[?25h[?25l[85;145H6[78;16H[?25h[?25l[85;145H7[78;17H[?25h[?25l[85;145H8[78;18H[?25h[?25l[85;145H9[78;19H[?25h[?25l[85;144H20[78;20H[?25h[?25l[85;145H1[78;21H[?25h[?25l[85;145H2[78;22H[?25h[?25l[85;145H3[78;23H[?25h[?25l[85;145H4[78;24H[?25h[?25l[85;145H5[78;25H[?25h[?25l[85;145H6[78;26H[?25h[?25l[85;145H7[78;27H[?25h[?25lh[46m([7C)[m[85;145H8[78;28H[?25h[?25l[85;145H9[78;29H[?25h[?25l([7C)[85;144H30[78;30H[?25h[?25l[85;145H1[78;31H[?25h[?25l[85;145H2[78;32H[?25h[?25l[85;145H3[78;33H[?25h[?25l[85;145H4[78;34H[?25h[?25l[85;145H5[78;35H[?25h[?25l[78;28H[46m([7C)[m[85;145H6[78;36H[?25h[?25l[78;13H[46m([m[14C([7C)[46m)[m[85;145H7[78;37H[?25h[?25l[78;13H([23C)[36m[46m{[80;5H}[m[85;145H8[78;38H[?25h[?25l[85;145H9[78;39H[?25h[85;1H[K[78;38H[?25l[85;130H^[[78;38H[85;130H  [78;39H[85;140H102,38[8C45%[78;38H[?25h[?25l[85;130H:[78;38H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 137L, 2426C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs [12@./calc.mjs expn-data.txt[Cclear[K./calc.mjs expn-data.txt 
expecting ; at **
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C[12@./calc.mjs expn-data.txt[C[12Pvim calc.mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 137L, 2426C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[12;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[15;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[16;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([21;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[28;7Hvalues.push(expr());[29;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[37;7H[33mconst[m kind = lookahead.kind;[38;7Hmatch(kind);[39;7H[33mconst[m t1 = term();[40;7Ht += (kind === [31m'+'[m) ? t1 : -t1;
    [36m}[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[47;7Hmatch([31m'-'[m);[48;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[51;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m
    [33mif[m (check([31m'INT'[m)) [36m{[m[57;7H[33mconst[m value = parseInt(lookahead.lexeme);[58;7Hmatch([31m'INT'[m);[59;7H[33mreturn[m value;
    [36m}[m
    [33melse[m [36m{[m[62;7Hmatch([31m'('[m);[63;7H[33mconst[m value = expr();[64;7Hmatch([31m')'[m);[65;7H[33mreturn[m value;
    [36m}
[m  [36m}
}


function[m scan(text) [36m{[m
  [33mconst[m tokens = [36m[][m;
  [33mwhile[m (text.length > 0) [36m{
[m    [36mlet[m m;
    [33mif[m ((m = text.match(/^[36m\[ms+/))) [36m{
[m    [36m}[m
    [33melse[m [33mif[m ((m = text.match(/^[36m\[md+/))) [36m{[m[78;7Htokens.push([33mnew[m Token([31m'INT'[m, m[36m[[m0[36m][m));
    [36m}[m[33melse[m [33mif[m(m = text.match(/^[36m\[m*[36m\[m*/))[36m[46m{[m[80;9Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m[46m}[m
    [33melse[m [36m{[m[83;7Hm = text.match(/^./);[84;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));[85;140H102,38[8C43%[79;38H[?25h[?1000l[?1002h[?25l[79;28H[46m([7C)[m)[36m{[81;5H}[m[85;145H6[79;36H[?25h[?25l[85;130H~@k[79;36H[85;130H   [79;37H[79;13H[46m([m[14C([7C)[46m)[m[85;145H7[79;37H[?25h[?25l[85;130H~@k[79;37H[85;130H   [79;36H[79;13H([14C[46m([7C)[m)[85;145H6[79;36H[?25h[?25l[85;130Ha[79;36H[85;130H [79;37H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H102,37[8C43%[79;13H[46m([m[14C([7C)[46m)[?25h[?25l[m[79;13H([14C[46m([7C)[m)[85;145H6[79;36H[?25h[?25l[79;28H([7C)[85;145H5[79;35H[?25h[?25l$/))[36m{[m[85;145H6[79;36H[?25h[?25l/))[36m{[m[79;39H[K[85;145H5[79;35H[?25h[85;1H[K[79;34H[?25l[85;130H^[[79;34H[85;130H  [79;35H[85;140H102,34[8C43%[79;34H[?25h[?25l[85;130H:[79;34H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 137L, 2426C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs [12@./calc.mjs expn-data.txt[C
expecting ; at **
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C[12@./calc.mjs expn-data.txt[C[12Pvim calc.mjs[C[12@./calc.mjs expn-data.txt[C[12Pvim calc.mjs[C[12@./calc.mjs expn-data.txt[C[12Pvim calc.mjs[C[12@./calc.mjs expn-data.txt[Cclear[Kvim calc.mjs [12@./calc.mjs expn-data.txt[C[12Pvim calc.mjs[C[1Ppy[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.py" 126L, 2766C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m#!/usr/bin/env python3[m

[35mimport[m re
[35mimport[m sys
[35mfrom[m collections [35mimport[m namedtuple


[31m"""
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
"""[m

[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[29;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[31;9H[33mnonlocal[m lookahead[32;9H[33mif[m (lookahead.kind == kind):[33;13Hlookahead = nextToken()[34;9H[33melse[m:[35;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[36;19H[36mfile[m=sys.stderr)[37;13Hsys.exit([31m1[m)
    [33mdef[m [36mnextToken[m():[39;9H[33mnonlocal[m index[40;9H[33mif[m (index >= [36mlen[m(tokens)):[41;13H[33mreturn[m Token([31m'EOF'[m, [31m'<EOF>'[m)[42;9H[33melse[m:[43;13Htok = tokens[index][44;13Hindex += [31m1[m[45;13H[33mreturn[m tok[47;5H[33mdef[m [36mprogram[m():[48;9Hvalues = [][49;9H[33mwhile[m ([33mnot[m check([31m'EOF'[m)):[50;13Hvalues.append(expr())[51;13Hmatch([31m';'[m)[52;9H[33mreturn[m values[54;5H[33mdef[m [36mexpr[m():[55;9Ht = term()[56;9H[33mwhile[m (check([31m'+'[m) [33mor[m (check([31m'-'[m))):[57;13Hkind = lookahead.kind[58;13Hmatch(kind)[59;13Ht1 = term()[60;13Ht += (t1 [33mif[m (kind == [31m'+'[m) [33melse[m -t1)[61;9H[33mreturn[m t[63;5H[33mdef[m [36mterm[m():[64;9H[33mif[m (check([31m'-'[m)):[65;13Hmatch([31m'-'[m)[66;13H[33mreturn[m - term()[67;9H[33melse[m:[68;13H[33mreturn[m factor()[70;5H[33mdef[m [36mfactor[m():[71;9H[33mif[m (check([31m'INT'[m)):[72;13Hvalue = [36mint[m(lookahead.lexeme)[73;13Hmatch([31m'INT'[m)[74;13H[33mreturn[m value[75;9H[33melse[m:[76;13Hmatch([31m'('[m)[77;13Hvalue = expr()[78;13Hmatch([31m')'[m)[79;13H[33mreturn[m value[81;5H[34m#begin parse()[m
    tokens = scan(text)
    index = [31m0[m
    lookahead = nextToken()[85;140H37,18[9CTop[37;18H[?25h[?1000l[?1002h[?25l[85;130H~@k[37;18H[85;130H   [38;18H[46m()[m[85;141H8[38;18H[?25h[?25l[85;130H~@k[38;18H[85;130H   [39;18H[38;18H()[85;141H9[39;18H[?25h[?25l[85;130H~@k[39;18H[85;130H   [40;18H[85;140H40[40;18H[?25h[?25l[85;130H~@k[40;18H[85;130H   [41;18H[85;141H1[41;18H[?25h[?25l[85;130H~@k[41;18H[85;130H   [42;13H[85;141H2,13[42;13H[?25h[?25l[85;130H~@k[42;13H[85;130H   [43;18H[85;141H3,18[43;18H[?25h[?25l[85;130H~@k[43;18H[85;130H   [44;18H[85;141H4[44;18H[?25h[?25l[85;130H~@k[44;18H[85;130H   [45;18H[85;141H5[45;18H[?25h[?25l[85;130H~@k[45;18H[85;130H   [46;1H[85;141H6,0-1[46;1H[?25h[?25l[85;130H~@k[46;1H[85;130H   [47;18H[85;141H7,18 [47;18H[?25h[?25l[85;130H~@k[47;18H[85;130H   [48;18H[46m[][m[85;141H8[48;18H[?25h[?25l[85;130H~@k[48;18H[85;130H   [49;18H[48;18H[][85;141H9[49;18H[?25h[?25l[85;130H~@k[49;18H[85;130H   [50;18H[85;140H50[50;18H[?25h[?25l[85;130H~@k[50;18H[85;130H   [51;18H[46m([3C)[m[85;141H1[51;18H[?25h[?25l[85;130H~@k[51;18H[85;130H   [52;18H[51;18H([3C)[85;141H2[52;18H[?25h[?25l[85;130H~@k[52;18H[85;130H   [53;1H[85;141H3,0-1[53;1H[?25h[?25l[85;130H~@k[53;1H[85;130H   [54;15H[85;141H4,15 [54;15H[?25h[?25l[85;130H~@k[54;15H[85;130H   [55;18H[46m()[m[85;141H5,18[55;18H[?25h[?25l[85;130H~@k[55;18H[85;130H   [56;18H[55;17H()[85;141H6[56;18H[?25h[?25l[85;130H~@k[56;18H[85;130H   [57;18H[85;141H7[57;18H[?25h[?25l[85;130H~@k[57;18H[85;130H   [58;18H[46m([mkind[46m)[m[85;141H8[58;18H[?25h[?25l[85;130H~@k[58;18H[85;130H   [59;18H[58;18H(kind)[85;141H9[59;18H[?25h[?25l[85;130H~@k[59;18H[85;130H   [60;18H[46m([28C)[m[85;140H60[60;18H[?25h[?25l[85;130H~@k[60;18H[85;130H   [61;16H[60;18H([28C)[85;141H1,16[61;16H[?25h[?25l[85;130H~@k[61;16H[85;130H   [62;1H[85;141H2,0-1[62;1H[?25h[?25l[85;130H~@k[62;1H[85;130H   [63;15H[85;141H3,15 [63;15H[?25h[?25l[85;130H~@k[63;15H[85;130H   [64;18H[46m([3C)[m[85;141H4,18[64;18H[?25h[?25l[85;130H~@k[64;18H[85;130H   [65;18H[64;18H([3C)[65;18H[46m([3C)[m[85;141H5[65;18H[?25h[?25l[85;130H~@k[65;18H[85;130H   [66;18H[65;18H([3C)[85;141H6[66;18H[?25h[?25l[85;130H~@k[66;18H[85;130H   [67;13H[85;141H7,13[67;13H[?25h[?25l[85;130H~@k[67;13H[85;130H   [68;18H[85;141H8,18[68;18H[?25h[?25l[85;130H~@k[68;18H[85;130H   [69;1H[85;141H9,0-1[69;1H[?25h[?25l[85;130H~@k[69;1H[85;130H   [70;17H[85;140H70,17 [70;17H[?25h[?25l[85;130H~@k[70;17H[85;130H   [71;18H[46m([5C)[m[85;141H1,18[71;18H[?25h[?25l[85;130H~@k[71;18H[85;130H   [72;18H[71;18H([5C)[85;141H2[72;18H[?25h[?25l[85;130H~@k[72;18H[85;130H   [73;18H[46m([5C)[m[85;141H3[73;18H[?25h[?25l[85;130H~@k[73;18H[85;130H   [74;18H[73;18H([5C)[85;141H4[74;18H[?25h[?25l[85;130H~@k[74;18H[85;130H   [75;13H[85;141H5,13[75;13H[?25h[?25l[85;130H~@k[75;13H[85;130H   [76;18H[46m([3C)[m[85;141H6,18[76;18H[?25h[?25l[85;130H~@k[76;18H[85;130H   [77;18H[76;18H([3C)[85;141H7[77;18H[?25h[?25l[85;130H~@k[77;18H[85;130H   [78;18H[46m([3C)[m[85;141H8[78;18H[?25h[?25l[85;130H~@k[78;18H[85;130H   [79;18H[78;18H([3C)[85;141H9[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;1H[1;84r[84;1H
[1;85r[84;5Hvalue = program()[85;1H[K[85;140H80,0-1[9C2%[79;1H[?25h[?25l[85;130H~@k[79;1H[85;130H   [79;18H[1;84r[84;1H
[1;85r[79;17H[34m[46m()[m[84;5H[33mif[m ([33mnot[m check([31m'EOF'[m)):[85;140H[K[85;140H81,18[10C4%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[78;17H[34m()[m[79;18H[46m([mtext[46m)[m[84;9H[36mprint[m(f[31m'expecting <EOF>, got {lookahead.lexeme}'[m, [36mfile[m=sys.stderr)[85;140H[K[85;140H82,18[10C7%[79;18H[?25h[?25l[1;84r[84;1H
[1;85r[78;18H(text)[84;9Hsys.exit([31m1[m)[85;140H[K[85;140H83,13[10C9%[79;13H[?25h[?25l[85;130H~@k[79;13H[85;130H   [79;18H[1;84r[84;1H
[1;85r[84;5H[33mreturn[m value[85;140H[K[85;140H84,18[9C11%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[85;140H[K[85;140H85,18[9C14%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[79;18H[46m([5C)[m[84;1H[33mdef[m [36mscan[m(text):[85;140H[K[85;140H86,18[9C16%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[78;18H([5C)[84;5H[33mdef[m [36mnext_match[m(text):[85;140H[K[85;140H87,18[9C19%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[84;9Hm = re.compile([31mr'\s+'[m).match(text)[85;140H[K[85;140H88,18[9C21%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;16H[1;84r[84;1H
[1;85r[84;9H[33mif[m (m): [33mreturn[m (m, [36mNone[m)[85;140H[K[85;140H89,16[9C23%[79;16H[?25h[?25l[85;130H~@k[79;16H[85;130H   [79;1H[1;84r[84;1H
[1;85r[84;9Hm = re.compile([31mr'\d+'[m).match(text)[85;140H[K[85;140H90,0-1[8C26%[79;1H[?25h[?25l[85;130H~@k[79;1H[85;130H   [79;15H[1;84r[84;1H
[1;85r[84;9H[33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[85;140H[K[85;140H91,15[9C28%[79;15H[?25h[?25l[85;130H~@k[79;15H[85;130H   [79;18H[1;84r[84;1H
[1;85r[84;9Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m[85;140H[K[85;140H92,18[9C30%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[84;9H[33mif[m (m): [33mreturn[m (m, m.group())[85;140H[K[85;140H93,18[9C33%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[85;140H[K[85;140H94,18[9C35%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[84;5Htokens = [][85;140H[K[85;140H95,18[9C38%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[84;5H[33mwhile[m ([36mlen[m(text) > [31m0[m):[85;140H[K[85;140H96,18[9C40%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[84;9H(match, kind) = next_match(text)[85;140H[K[85;140H97,18[9C42%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[84;9Hlexeme = match.group()[85;140H[K[85;140H98,18[9C45%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;1H[1;84r[84;1H
[1;85r[84;9H[36mprint[m (kind)[85;140H[K[85;140H99,0-1[8C47%[79;1H[?25h[?25l[85;130H~@k[79;1H[85;130H   [79;15H[1;84r[84;1H
[1;85r[79;14H[46m[][m[84;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[85;140H[K[85;140H100,15[8C50%[79;15H[?25h[?25l[85;130H~@k[79;15H[85;130H   [79;18H[1;84r[84;1H
[1;85r[78;14H[][84;9Htext = text[[36mlen[m(lexeme):][85;140H[K[85;140H101,18[8C52%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[84;5H[33mreturn[m tokens[85;140H[K[85;140H102,18[8C54%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[85;140H[K[85;140H103,18[8C57%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[84;1H[33mdef[m [36mmain[m():[85;140H[K[85;140H104,18[8C59%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[84;5H[33mif[m ([36mlen[m(sys.argv) != [31m2[m): usage();[85;140H[K[85;140H105,18[8C61%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[84;5Hcontents = readFile(sys.argv[[31m1[m]);[85;140H[K[85;140H106,18[8C64%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;17H[1;84r[84;1H
[1;85r[84;5H[36mprint[m(parse(contents))[85;140H[K[85;140H107,17[8C66%[79;17H[?25h[?25l[85;130H~@k[79;17H[85;130H   [79;1H[1;84r[84;1H
[1;85r[85;140H[K[85;140H108,0-1[7C69%[79;1H[?25h[?25l[85;130H~@k[79;1H[85;130H   [79;11H[1;84r[84;1H
[1;85r[84;1H[33mdef[m [36mreadFile[m(path):[85;140H[K[85;140H109,11[8C71%[79;11H[?25h[?25l[85;130H~@k[79;11H[85;130H   [79;18H[1;84r[84;1H
[1;85r[84;5H[33mwith[m [36mopen[m(path, [31m'r'[m) [33mas[m [36mfile[m:[85;140H[K[85;140H110,18[8C73%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[84;9Hcontent = [36mfile[m.read()[85;140H[K[85;140H111,18[8C76%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [79;18H[1;84r[84;1H
[1;85r[84;5H[33mreturn[m content[85;140H[K[85;140H112,18[8C78%[79;18H[?25h[?25l[85;130H~@k[79;18H[85;130H   [78;18H[85;142H1[78;18H[?25h[?25l[85;130H~@k[78;18H[85;130H   [77;18H[85;142H0[77;18H[?25h[?25l[85;130H~@k[77;18H[85;130H   [76;11H[85;141H09,11[76;11H[?25h[?25l[85;130H~@k[76;11H[85;130H   [75;1H[85;142H8,0-1[75;1H[?25h[?25l[85;130H~@k[75;1H[85;130H   [74;17H[85;142H7,17 [74;17H[?25h[?25l[85;130H~@k[74;17H[85;130H   [73;18H[85;142H6,18[73;18H[?25h[?25l[85;130H~@k[73;18H[85;130H   [72;18H[85;142H5[72;18H[?25h[?25l[85;130H~@k[72;18H[85;130H   [71;18H[85;142H4[71;18H[?25h[?25l[85;130H~@k[71;18H[85;130H   [70;18H[85;142H3[70;18H[?25h[?25l[85;130H~@k[70;18H[85;130H   [69;18H[85;142H2[69;18H[?25h[?25l[85;130H~@k[69;18H[85;130H   [68;18H[85;142H1[68;18H[?25h[?25l[85;130H~@k[68;18H[85;130H   [67;15H[46m[][m[85;142H0,15[67;15H[?25h[?25l[85;130H~@k[67;15H[85;130H   [66;1H[67;14H[][85;140H99,0-1[66;1H[?25h[?25l[85;130H~@k[66;1H[85;130H   [65;18H[85;141H8,18 [65;18H[?25h[?25l[85;130H~@k[65;18H[85;130H   [64;18H[85;141H7[64;18H[?25h[?25l[85;130H~@k[64;18H[85;130H   [63;18H[85;141H6[63;18H[?25h[?25l[85;130H~@k[63;18H[85;130H   [62;18H[85;141H5[62;18H[?25h[?25l[85;130H~@k[62;18H[85;130H   [61;18H[85;141H4[61;18H[?25h[?25l[85;130H~@k[61;18H[85;130H   [62;18H[85;141H5[62;18H[?25h[?25l[85;130H~@k[62;18H[85;130H   [63;18H[85;141H6[63;18H[?25h[?25l[85;130H~@k[63;18H[85;130H   [64;18H[85;141H7[64;18H[?25h[?25l[85;130H~@k[64;18H[85;130H   [65;18H[85;141H8[65;18H[?25h[?25l[85;130H~@k[65;18H[85;130H   [66;1H[85;141H9,0-1[66;1H[?25h[?25l[85;130H~@k[66;1H[85;130H   [65;18H[85;141H8,18 [65;18H[?25h[?25l[85;130H~@k[65;18H[85;130H   [64;18H[85;141H7[64;18H[?25h[?25l[85;130H~@k[64;18H[85;130H   [64;19H[85;144H9[64;19H[?25h[?25l[85;130H~@k[64;19H[85;130H   [64;20H[85;143H20[64;20H[?25h[?25l[85;130H~@k[64;20H[85;130H   [64;21H[85;144H1[64;21H[?25h[?25l[85;130H~@k[64;21H[85;130H   [64;22H[85;144H2[64;22H[?25h[?25l[85;130H~@k[64;22H[85;130H   [64;23H[46m([4C)[m[85;144H3[64;23H[?25h[?25l[85;130H~@k[64;23H[85;130H   [64;24H([4C)[85;144H4[64;24H[?25h[?25l[85;130H~@k[64;24H[85;130H   [64;25H[85;144H5[64;25H[?25h[?25l[85;130H~@k[64;25H[85;130H   [64;26H[85;144H6[64;26H[?25h[?25l[85;130H~@k[64;26H[85;130H   [64;27H[85;144H7[64;27H[?25h[?25l[85;130H~@k[64;27H[85;130H   [64;28H[46m([4C)[m[85;144H8[64;28H[?25h[?25l[85;130H~@k[64;28H[85;130H   [64;29H([4C)[85;144H9[64;29H[?25h[?25l[85;130H~@k[64;29H[85;130H   [64;30H[85;143H30[64;30H[?25h[?25l[85;130H~@k[64;30H[85;130H   [64;31H[85;144H1[64;31H[?25h[?25l[85;130H~@k[64;31H[85;130H   [64;32H[85;144H2[64;32H[?25h[?25l[85;130H~@k[64;32H[85;130H   [64;33H[85;144H3[64;33H[?25h[?25l[85;130H~@k[64;33H[85;130H   [64;34H[85;144H4[64;34H[?25h[?25l[85;130H~@k[64;34H[85;130H   [64;35H[46m([mtext[46m)[m[85;144H5[64;35H[?25h[?25l[85;130H~@k[64;35H[85;130H   [64;36H(text)[85;144H6[64;36H[?25h[?25l[85;130H~@k[64;36H[85;130H   [64;37H[85;144H7[64;37H[?25h[?25l[85;130H~@k[64;37H[85;130H   [64;38H[85;144H8[64;38H[?25h[?25l[85;130H~@k[64;38H[85;130H   [64;39H[85;144H9[64;39H[?25h[?25l[85;130H~@k[64;39H[85;130H   [64;40H[46m([mtext[46m)[m[85;143H40[64;40H[?25h[?25l[85;130H~@k[64;40H[85;130H   [64;41H(text)[85;144H1[64;41H[?25h[?25l[85;130H~@k[64;41H[85;130H   [64;42H[85;144H2[64;42H[?25h[?25l[85;130H~@k[64;42H[85;130H   [64;43H[85;144H3[64;43H[?25h[?25l[85;130H~@k[64;43H[85;130H   [64;44H[85;144H4[64;44H[?25h[?25l[85;130H~@k[64;44H[85;130H   [64;45H[85;144H5[64;45H[?25h[?25l[85;130H~@k[64;45H[85;130H   [64;46H[85;144H6[64;46H[?25h[?25l[85;130H~@k[64;46H[85;130H   [64;47H[85;144H7[64;47H[?25h[?25l[85;130H~@k[64;47H[85;130H   [64;48H[85;144H8[64;48H[?25h[?25l[85;130H~@k[64;48H[85;130H   [64;49H[85;144H9[64;49H[?25h[?25l[85;130H~@k[64;49H[85;130H   [64;50H[85;143H50[64;50H[?25h[?25l[85;130H~@k[64;50H[85;130H   [64;51H[85;144H1[64;51H[?25h[?25l[85;130H~@k[64;51H[85;130H   [64;52H[85;144H2[64;52H[?25h[?25l[85;130H~@k[64;52H[85;130H   [64;53H[85;144H3[64;53H[?25h[?25l[85;130H~@k[64;53H[85;130H   [64;54H[85;144H4[64;54H[?25h[?25l[85;130H~@k[64;54H[85;130H   [64;55H[85;144H5[64;55H[?25h[?25l[85;130H~@k[64;55H[85;130H   [64;56H[85;144H6[64;56H[?25h[?25l[85;130H~@k[64;56H[85;130H   [64;57H[85;144H7[64;57H[?25h[?25l[85;130H~@k[64;57H[85;130H   [64;58H[85;144H8[64;58H[?25h[?25l[85;130H~@k[64;58H[85;130H   [64;59H[85;144H9[64;59H[?25h[?25l[85;130H~@k[64;59H[85;130H   [64;60H[85;143H60[64;60H[?25h[?25l[85;130H~@k[64;60H[85;130H   [64;61H[85;144H1[64;61H[?25h[?25l[85;130H~@k[64;61H[85;130H   [64;62H[85;144H2[64;62H[?25h[?25l[85;130H~@k[64;62H[85;130H   [64;63H[85;144H3[64;63H[?25h[?25l[85;130H~@k[64;63H[85;130H   [64;64H[85;144H4[64;64H[?25h[?25l[85;130H~@k[64;64H[85;130H   [64;65H[85;144H5[64;65H[?25h[?25l[85;130H~@k[64;65H[85;130H   [64;66H[85;144H6[64;66H[?25h[?25l[85;130H~@k[64;66H[85;130H   [64;67H[85;144H7[64;67H[?25h[?25l[85;130H~@k[64;67H[85;130H   [64;68H[85;144H8[64;68H[?25h[?25l[85;130H~@k[64;68H[85;130H   [64;69H[85;144H9[64;69H[?25h[?25l[85;130H~@k[64;69H[85;130H   [64;70H[85;143H70[64;70H[?25h[?25l[85;130H~@k[64;70H[85;130H   [64;71H[85;144H1[64;71H[?25h[?25l[85;130H~@k[64;71H[85;130H   [64;71H[?25h[?25l[85;130H~@k[64;71H[85;130H   [64;71H[?25h[?25l[85;130H~@k[64;71H[85;130H   [64;71H[?25h[?25l[85;130H~@k[64;71H[85;130H   [64;71H[?25h[?25l[85;130H~@k[64;71H[85;130H   [64;71H[?25h[?25l[85;130H~@k[64;71H[85;130H   [64;71H[?25h[?25l[85;130H~@k[64;71H[85;130H   [64;71H[?25h[?25l[85;130H~@k[64;71H[85;130H   [64;71H[?25h[?25l[85;130H~@k[64;71H[85;130H   [64;71H[?25h[?25l[85;130H~@k[64;71H[85;130H   [64;71H[?25h[?25l[85;130H~@k[64;71H[85;130H   [64;71H[?25h[?25l[85;130H~@k[64;71H[85;130H   [64;71H[?25h[?25l[85;130H~@k[64;71H[85;130H   [64;71H[?25h[?25l[85;130H~@k[64;71H[85;130H   [64;71H[?25h[?25l[85;130H^[[64;71H[85;130H  [64;71H[85;130H^[[64;71H[85;130H  [64;71H[?25h[?25l[85;130H:[64;71H[85;130H[K[85;1H:[?2004h[?25hQ[?25l[?25h![?25l[?25h[?25l[85;3H[K[85;3H[?25h[?25l[85;2H[K[85;2H[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ vim calc.py [13@./calc.mjs expn-data.txt[C[12Pvim calc.mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 137L, 2426C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[12;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[15;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[16;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([21;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[28;7Hvalues.push(expr());[29;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[37;7H[33mconst[m kind = lookahead.kind;[38;7Hmatch(kind);[39;7H[33mconst[m t1 = term();[40;7Ht += (kind === [31m'+'[m) ? t1 : -t1;
    [36m}[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[47;7Hmatch([31m'-'[m);[48;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[51;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m
    [33mif[m (check([31m'INT'[m)) [36m{[m[57;7H[33mconst[m value = parseInt(lookahead.lexeme);[58;7Hmatch([31m'INT'[m);[59;7H[33mreturn[m value;
    [36m}[m
    [33melse[m [36m{[m[62;7Hmatch([31m'('[m);[63;7H[33mconst[m value = expr();[64;7Hmatch([31m')'[m);[65;7H[33mreturn[m value;
    [36m}
[m  [36m}
}


function[m scan(text) [36m{[m
  [33mconst[m tokens = [36m[][m;
  [33mwhile[m (text.length > 0) [36m{
[m    [36mlet[m m;
    [33mif[m ((m = text.match(/^[36m\[ms+/))) [36m{
[m    [36m}[m
    [33melse[m [33mif[m ((m = text.match(/^[36m\[md+/))) [36m{[m[78;7Htokens.push([33mnew[m Token([31m'INT'[m, m[36m[[m0[36m][m));
    [36m}[m[33melse[m [33mif[m(m = text.match(/^[36m\[m*[36m\[m*/))[36m{[m[80;9Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m
    [33melse[m [36m{[m[83;7Hm = text.match(/^./);[84;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));[85;140H102,34[8C43%[79;34H[?25h[?1000l[?1002h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36m}[m
    text = text.substring(m[36m[[m0[36m][m.length);
  [36m}[m[85;1H[K[85;140H102,34[8C49%[76;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mreturn[m tokens;
[36m}[m[85;140H[K[85;140H102,34[8C54%[73;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[33mconst[m CHAR_SET = [31m'utf8'[m;
[36mfunction[m main() [36m{[m[85;140H[K[85;140H102,34[8C60%[70;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mif[m (process.argv.length !== 3) usage();
  [33mconst[m file = process.argv[36m[[m2[36m][m;
  [33mconst[m text = fs.readFileSync(file === [31m'-'[m ? 0 : file, CHAR_SET);[85;140H[K[85;140H102,34[8C66%[67;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mconst[m value = parse(text);
  console.log(value);
[36m}[m[85;140H[K[85;140H102,34[8C71%[64;34H[?25h[?25l[85;130H^[[64;34H[85;130H  [64;34H[85;130H^[[64;34H[85;130H  [64;34H[?25h[?25l[85;130H:[64;34H[85;130H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs [1Ppy[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.py" 126L, 2766C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[31m  ;
factor
  : INT
  | '(' expr ')'
  ;
"""[m

[34m#use nested function for encapsulation.[m
[33mdef[m [36mparse[m(text):[11;5H[33mdef[m [36mcheck[m(kind): [33mreturn[m lookahead.kind == kind
    [33mdef[m [36mmatch[m(kind):[13;9H[33mnonlocal[m lookahead[14;9H[33mif[m (lookahead.kind == kind):[15;13Hlookahead = nextToken()[16;9H[33melse[m:[17;13H[36mprint[m(f[31m'expecting {kind} at {lookahead.lexeme}'[m,[18;19H[36mfile[m=sys.stderr)[19;13Hsys.exit([31m1[m)
    [33mdef[m [36mnextToken[m():[21;9H[33mnonlocal[m index[22;9H[33mif[m (index >= [36mlen[m(tokens)):[23;13H[33mreturn[m Token([31m'EOF'[m, [31m'<EOF>'[m)[24;9H[33melse[m:[25;13Htok = tokens[index][26;13Hindex += [31m1[m[27;13H[33mreturn[m tok[29;5H[33mdef[m [36mprogram[m():[30;9Hvalues = [][31;9H[33mwhile[m ([33mnot[m check([31m'EOF'[m)):[32;13Hvalues.append(expr())[33;13Hmatch([31m';'[m)[34;9H[33mreturn[m values[36;5H[33mdef[m [36mexpr[m():[37;9Ht = term()[38;9H[33mwhile[m (check([31m'+'[m) [33mor[m (check([31m'-'[m))):[39;13Hkind = lookahead.kind[40;13Hmatch(kind)[41;13Ht1 = term()[42;13Ht += (t1 [33mif[m (kind == [31m'+'[m) [33melse[m -t1)[43;9H[33mreturn[m t[45;5H[33mdef[m [36mterm[m():[46;9H[33mif[m (check([31m'-'[m)):[47;13Hmatch([31m'-'[m)[48;13H[33mreturn[m - term()[49;9H[33melse[m:[50;13H[33mreturn[m factor()[52;5H[33mdef[m [36mfactor[m():[53;9H[33mif[m (check([31m'INT'[m)):[54;13Hvalue = [36mint[m(lookahead.lexeme)[55;13Hmatch([31m'INT'[m)[56;13H[33mreturn[m value[57;9H[33melse[m:[58;13Hmatch([31m'('[m)[59;13Hvalue = expr()[60;13Hmatch([31m')'[m)[61;13H[33mreturn[m value[63;5H[34m#begin parse()[m
    tokens = scan(text)
    index = [31m0[m
    lookahead = nextToken()
    value = program()
    [33mif[m ([33mnot[m check([31m'EOF'[m)):[69;9H[36mprint[m(f[31m'expecting <EOF>, got {lookahead.lexeme}'[m, [36mfile[m=sys.stderr)[70;9Hsys.exit([31m1[m)
    [33mreturn[m value

[33mdef[m [36mscan[m(text):
    [33mdef[m [36mnext_match[m(text):[75;9Hm = re.compile([31mr'\s+'[m).match(text)[76;9H[33mif[m (m): [33mreturn[m (m, [36mNone[m)[77;9Hm = re.compile([31mr'\d+'[m).match(text)[78;9H[33mif[m (m): [33mreturn[m (m, [31m'INT'[m)[79;9Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m[80;9H[33mif[m (m): [33mreturn[m (m, m.group())[82;5Htokens = []
    [33mwhile[m ([36mlen[m(text) > [31m0[m):[84;9H(match, kind) = next_match(text)[85;140H97,71[9C42%[79;71H[?25h[?1000l[?1002h[?25l[85;130H~@k[79;71H[85;130H   [79;37H[1;84r[84;1H
[1;85r[79;24H[46m([12C)[m[84;9Hlexeme = match.group()[85;1H[K[85;140H98,37[9C45%[79;37H[?25h[?25l[85;130H~@k[79;37H[85;130H   [79;1H[1;84r[84;1H
[1;85r[78;24H([12C)[84;9H[36mprint[m (kind)[85;140H[K[85;140H99,0-1[8C47%[79;1H[?25h[?25l[85;130H~@k[79;1H[85;130H   [79;15H[1;84r[84;1H
[1;85r[79;14H[46m[][m[84;9H[33mif[m (kind): tokens.append(Token(kind, lexeme))[85;140H[K[85;140H100,15[8C50%[79;15H[?25h[?25l[85;130H~@k[79;15H[85;130H   [79;26H[1;84r[84;1H
[1;85r[78;14H[][84;9Htext = text[[36mlen[m(lexeme):][85;140H[K[85;140H101,26[8C52%[79;26H[?25h[?25l[85;130H~@k[79;26H[85;130H   [79;40H[1;84r[84;1H
[1;85r[79;35H[46m([mtext[46m)[m[84;5H[33mreturn[m tokens[85;140H[K[85;140H102,40[8C54%[79;40H[?25h[?25l[85;130H~@k[79;40H[85;130H   [78;26H[79;35H(text)[85;142H1,26[78;26H[?25h[?25l[85;130H~@k[78;26H[85;130H   [77;15H[46m[][m[85;142H0,15[77;15H[?25h[?25l[85;130H~@k[77;15H[85;130H   [76;1H[77;14H[][85;140H99,0-1[76;1H[?25h[?25l[85;130H~@k[76;1H[85;130H   [75;37H[75;24H[46m([12C)[m[85;141H8,37 [75;37H[?25h[?25l[85;130H~@k[75;37H[85;130H   [74;71H[75;24H([12C)[85;141H7,71[74;71H[?25h[?25l[85;130H~@k[74;71H[85;130H   [73;33H[73;24H[46m([8C)[m[85;141H6,33[73;33H[?25h[?25l[85;130H~@k[73;33H[85;130H   [74;71H[73;24H([8C)[85;141H7,71[74;71H[?25h[?25l[85;130H~@k[74;71H[85;130H   [73;33H[73;24H[46m([8C)[m[85;141H6,33[73;33H[?25h[?25l[85;130H~@k[73;33H[85;130H   [74;71H[73;24H([8C)[85;141H7,71[74;71H[?25h[?25l[85;130H~@k[74;71H[85;130H   [74;71H[?25h[?25l[85;130Ha[74;71H[85;130H [74;72H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H97,72[9C54%[74;72H[?25h[?25l[75;84r[75;1H[L[1;85r[85;140H[K[85;140H98,9[10C53%[75;9H[?25h[?25l[85;143H5[75;5H[?25h[?25l[85;143H1[75;1H[?25h[?25l[74;84r[84;1H
[1;85r[74;9Hm = re.compile([31mr'.'[m).match(text)  [34m#must be last: match any char[m[84;5H[33mreturn[m tokens[85;140H[K[85;140H97,72[9C54%[74;72H[?25h[?25l[75;24H[46m([12C)[m[85;141H8,38[75;38H[?25h[?25l[76;84r[76;1H[L[1;85r[85;140H[K[85;140H99,9[10C53%[75;24H([12C)[76;9H[?25h[?25l,[85;143H10[76;10H[?25h[?25l[76;9H[K[85;143H9 [76;9H[?25h[?25lm[85;143H10[76;10H[?25h[?25l[85;144H1[76;11H[?25h[?25l=[85;144H2[76;12H[?25h[?25l[85;144H3[76;13H[?25h[?25lr[85;144H4[76;14H[?25h[?25le[85;144H5[76;15H[?25h[?25l.[85;144H6[76;16H[?25h[?25lc[85;144H7[76;17H[?25h[?25lo[85;144H8[76;18H[?25h[?25lm[85;144H9[76;19H[?25h[?25lp[85;143H20[76;20H[?25h[?25li[85;144H1[76;21H[?25h[?25ll[85;144H2[76;22H[?25h[?25le[85;144H3[76;23H[?25h[?25l[85;144H4[76;24H[?25h[?25l([85;144H5[76;25H[?25h[?25l[76;24H[K[85;144H4[76;24H[?25h[?25l[85;144H3[76;23H[?25h[?25l([85;144H4[76;24H[?25h[?25l[76;23H[K[85;144H3[76;23H[?25h[?25l[76;22H[K[85;144H2[76;22H[?25h[?25l[76;21H[K[85;144H1[76;21H[?25h[?25l[76;20H[K[85;144H0[76;20H[?25h[?25l[76;19H[K[85;143H19[76;19H[?25h[?25l[76;18H[K[85;144H8[76;18H[?25h[?25l[76;17H[K[85;144H7[76;17H[?25h[?25l[76;16H[K[85;144H6[76;16H[?25h[?25l[76;15H[K[85;144H5[76;15H[?25h[?25l[76;14H[K[85;144H4[76;14H[?25h[?25l[76;13H[K[85;144H3[76;13H[?25h[?25l[85;144H2[76;12H[?25h[?25l[76;11H[K[85;144H1[76;11H[?25h[?25l[85;144H0[76;10H[?25h[?25l[76;9H[K[85;143H9 [76;9H[?25h[?25l[85;143H8[76;8H[?25h[?25l[85;143H7[76;7H[?25h[?25l[85;143H6[76;6H[?25h[?25l[85;143H5[76;5H[?25h[?25l[85;143H4[76;4H[?25h[?25l[85;143H3[76;3H[?25h[?25l[85;143H2[76;2H[?25h[?25l[85;143H1[76;1H[?25h[?25l[75;84r[84;1H
[1;85r[75;9H[33mif[m (m): [33mreturn[m (m, m.group())[84;5H[33mreturn[m tokens[85;140H[K[85;140H98,38[9C54%[75;24H[46m([12C)[?25h[m[85;1H[K[75;37H[?25l[85;130H^[[75;37H[85;130H  [75;38H[85;140H98,37[9C54%[75;37H[?25h[?25l[85;130H:[75;37H[85;130H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ vim calc.py [1@mjs[C[1Ppy[C[1@mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 137L, 2426C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[12;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[15;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[16;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([21;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[28;7Hvalues.push(expr());[29;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[37;7H[33mconst[m kind = lookahead.kind;[38;7Hmatch(kind);[39;7H[33mconst[m t1 = term();[40;7Ht += (kind === [31m'+'[m) ? t1 : -t1;
    [36m}[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[47;7Hmatch([31m'-'[m);[48;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[51;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m
    [33mif[m (check([31m'INT'[m)) [36m{[m[57;7H[33mconst[m value = parseInt(lookahead.lexeme);[58;7Hmatch([31m'INT'[m);[59;7H[33mreturn[m value;
    [36m}[m
    [33melse[m [36m{[m[62;7Hmatch([31m'('[m);[63;7H[33mconst[m value = expr();[64;7Hmatch([31m')'[m);[65;7H[33mreturn[m value;
    [36m}
[m  [36m}
}


function[m scan(text) [36m{[m
  [33mconst[m tokens = [36m[][m;
  [33mwhile[m (text.length > 0) [36m{
[m    [36mlet[m m;
    [33mif[m ((m = text.match(/^[36m\[ms+/))) [36m{
[m    [36m}[m
    [33melse[m [33mif[m ((m = text.match(/^[36m\[md+/))) [36m{[m[78;7Htokens.push([33mnew[m Token([31m'INT'[m, m[36m[[m0[36m][m));
    [36m}[m[33melse[m [33mif[m(m = text.match(/^[36m\[m*[36m\[m*/))[36m{[m[80;9Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m
    [33melse[m [36m{[m[83;7Hm = text.match(/^./);[84;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));[85;140H102,34[8C43%[79;34H[?25h[?1000l[?1002h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36m}[m
    text = text.substring(m[36m[[m0[36m][m.length);
  [36m}[m[85;1H[K[85;140H102,34[8C49%[76;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mreturn[m tokens;
[36m}[m[85;140H[K[85;140H102,34[8C54%[73;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[33mconst[m CHAR_SET = [31m'utf8'[m;
[36mfunction[m main() [36m{[m[85;140H[K[85;140H102,34[8C60%[70;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mif[m (process.argv.length !== 3) usage();
  [33mconst[m file = process.argv[36m[[m2[36m][m;
  [33mconst[m text = fs.readFileSync(file === [31m'-'[m ? 0 : file, CHAR_SET);[85;140H[K[85;140H102,34[8C66%[67;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mconst[m value = parse(text);
  console.log(value);
[36m}[m[85;140H[K[85;140H102,34[8C71%[64;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[36mfunction[m usage() [36m{[m
  [33mconst[m prog = Path.basename(process.argv[36m[[m1[36m][m)[85;140H[K[85;140H102,34[8C77%[61;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3Hconsole.error([31m`usage: [m[35m${prog}[m[31m INPUT_FILE`[m);
  process.exit(1);
[36m}[m[85;140H[K[85;140H102,34[8C83%[58;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[33mclass[m Token [36m{[m
  constructor(kind, lexeme) [36m{[m[85;140H[K[85;140H102,34[8C88%[55;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[32mObject[m.assign([36mthis[m, [36m{[mkind, lexeme[36m}[m);
  [36m}
}[m[85;140H[K[85;140H102,34[8C94%[52;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1Hmain();[85;140H[K[85;140H102,34[8CBot[49;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H102,34[8CBot[46;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H102,34[8CBot[43;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H102,34[8CBot[40;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H102,34[8CBot[37;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H102,34[8CBot[34;34H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[36m}

[m  [36mfunction[m term() [36m{[m[85;140H[K[85;140H102,34[8CBot[37;34H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;7Ht += (kind === [31m'+'[m) ? t1 : -t1;
    [36m}[m
    [33mreturn[m t;[85;140H[K[85;140H102,34[8CBot[40;34H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;7H[33mconst[m kind = lookahead.kind;[2;7Hmatch(kind);[3;7H[33mconst[m t1 = term();[85;140H[K[85;140H102,34[8CBot[43;34H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[85;140H[K[85;140H102,34[8CBot[46;34H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33mreturn[m values;
  [36m}[m[85;140H[K[85;140H102,34[8CBot[49;34H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;7Hvalues.push(expr());[2;7Hmatch([31m';'[m);
    [36m}[m[85;140H[K[85;140H102,34[8C94%[52;34H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[85;140H[K[85;140H102,34[8C88%[55;34H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H);
  [36m}[m[85;140H[K[85;140H102,34[8C83%[58;34H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([3;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m[85;140H[K[85;140H102,34[8C77%[61;34H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;7Hprocess.exit();
    [36m}
[m  [36m}[m[85;140H[K[85;140H102,34[8C71%[64;34H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[36m}[m
    [33melse[m [36m{[m[3;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[85;140H[K[85;140H102,34[8C66%[67;34H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[3;7Hlookahead = nextToken();[85;140H[K[85;140H102,34[8C60%[70;34H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}[m[85;140H[K[85;140H102,34[8C54%[73;34H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();[85;140H[K[85;140H102,34[8C49%[76;34H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;1H[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);[85;140H[K[85;140H102,34[8C43%[79;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36m}[m
    text = text.substring(m[36m[[m0[36m][m.length);
  [36m}[m[85;140H[K[85;140H102,34[8C49%[76;34H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mreturn[m tokens;
[36m}[m[85;140H[K[85;140H102,34[8C54%[73;34H[?25h[?25l[85;140H87,17 [58;17H[?25h[27m[23m[29m[m[H[2J[?25l[1;3H[33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[6;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[9;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[10;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([15;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[22;7Hvalues.push(expr());[23;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[31;7H[33mconst[m kind = lookahead.kind;[32;7Hmatch(kind);[33;7H[33mconst[m t1 = term();[34;7Ht += (kind === [31m'+'[m) ? t1 : -t1;
    [36m}[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[41;7Hmatch([31m'-'[m);[42;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[45;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m
    [33mif[m (check([31m'INT'[m)) [36m{[m[51;7H[33mconst[m value = parseInt(lookahead.lexeme);[52;7Hmatch([31m'INT'[m);[53;7H[33mreturn[m value;
    [36m}[m
    [33melse[m [36m{[m[56;7Hmatch([31m'('[m);[57;7H[33mconst[m value = expr();[58;7Hmatch([31m')'[m);[59;7H[33mreturn[m value;
    [36m}
[m  [36m}
}


function[m scan(text) [36m{[m
  [33mconst[m tokens = [36m[][m;
  [33mwhile[m (text.length > 0) [36m{
[m    [36mlet[m m;
    [33mif[m ((m = text.match(/^[36m\[ms+/))) [36m{
[m    [36m}[m
    [33melse[m [33mif[m ((m = text.match(/^[36m\[md+/))) [36m{[m[72;7Htokens.push([33mnew[m Token([31m'INT'[m, m[36m[[m0[36m][m));
    [36m}[m[33melse[m [33mif[m(m = text.match(/^[36m\[m*[36m\[m*/))[36m{[m[74;9Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m
    [33melse[m [36m{[m[77;7Hm = text.match(/^./);[78;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m
    text = text.substring(m[36m[[m0[36m][m.length);
  [36m}[m
  [33mreturn[m tokens;
[36m}[m[85;149H87,17[9C54%[58;17H[?25h[?25l[85;149H61,21[32;21H[?25h[?25l[85;139H^[[32;21H[85;139H  [32;21H[85;139H^[[32;21H[85;139H  [32;21H[?25h[?25l[85;139H:[32;21H[85;139H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs [Kcat data.txt 
1 + 2 - 3;

--2 - (3 - 4);
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ cat expn-data.txt 
-2 ** 2 ** 3 ;
1 + 2**(1 + 2) ;
1 + -2**(1 + 2) ;
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ cat expn-data.txt [5P[C[C[C[C[C[C[C[C[Cvim calc.mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 137L, 2426C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7Ht += (kind === [31m'+'[m) ? t1 : -t1;
    [36m}[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[70;7Hmatch([31m'-'[m);[71;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[74;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m
    [33mif[m (check([31m'INT'[m)) [36m{[m[80;7H[33mconst[m value = parseInt(lookahead.lexeme);[81;7Hmatch([31m'INT'[m);[82;7H[33mreturn[m value;
    [36m}[m
    [33melse[m [36m{[m[85;149H61,21[9CTop[61;21H[?25h[?1000l[?1002h[?25l[85;139H~@k[61;21H[85;139H   [61;21H[?25h[?25l[85;149H47,0-1[47;1H[?25h[?25l[85;139H^[[47;1H[85;139H  [47;1H[85;139H^[[47;1H[85;139H  [47;1H[?25h[?25l[85;139H:[47;1H[85;1H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ cd ..
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises$ ls
01-regex  02-lexer  03-calc  04-ast  ast  calc	lexer  regex
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises$ cd ..
kmoshie1@remote-n15:~/i471a/submit/lab1$ c[Kls
exercises  lab1.LOG
kmoshie1@remote-n15:~/i471a/submit/lab1$ exit
There are stopped jobs.
kmoshie1@remote-n15:~/i471a/submit/lab1$ git add .
kmoshie1@remote-n15:~/i471a/submit/lab1$ git commit -m 'first two fo[K[Kdone'
[lab1 9eb4f06] first two done
 6 files changed, 3200 insertions(+), 1 deletion(-)
 create mode 100644 submit/lab1/exercises/regex/lex2.mjs
 create mode 100644 submit/lab1/exercises/regex/lex3.mjs
 create mode 100644 submit/lab1/lab1.LOG
kmoshie1@remote-n15:~/i471a/submit/lab1$ git push
Username for 'https://github.com': kmoshie1
Password for 'https://kmoshie1@github.com': 
Enumerating objects: 24, done.
Counting objects:   4% (1/24)Counting objects:   8% (2/24)Counting objects:  12% (3/24)Counting objects:  16% (4/24)Counting objects:  20% (5/24)Counting objects:  25% (6/24)Counting objects:  29% (7/24)Counting objects:  33% (8/24)Counting objects:  37% (9/24)Counting objects:  41% (10/24)Counting objects:  45% (11/24)Counting objects:  50% (12/24)Counting objects:  54% (13/24)Counting objects:  58% (14/24)Counting objects:  62% (15/24)Counting objects:  66% (16/24)Counting objects:  70% (17/24)Counting objects:  75% (18/24)Counting objects:  79% (19/24)Counting objects:  83% (20/24)Counting objects:  87% (21/24)Counting objects:  91% (22/24)Counting objects:  95% (23/24)Counting objects: 100% (24/24)Counting objects: 100% (24/24), done.
Delta compression using up to 8 threads
Compressing objects:   7% (1/14)Compressing objects:  14% (2/14)Compressing objects:  21% (3/14)Compressing objects:  28% (4/14)Compressing objects:  35% (5/14)Compressing objects:  42% (6/14)Compressing objects:  50% (7/14)Compressing objects:  57% (8/14)Compressing objects:  64% (9/14)Compressing objects:  71% (10/14)Compressing objects:  78% (11/14)Compressing objects:  85% (12/14)Compressing objects:  92% (13/14)Compressing objects: 100% (14/14)Compressing objects: 100% (14/14), done.
Writing objects:   7% (1/14)Writing objects:  14% (2/14)Writing objects:  21% (3/14)Writing objects:  28% (4/14)Writing objects:  35% (5/14)Writing objects:  42% (6/14)Writing objects:  50% (7/14)Writing objects:  57% (8/14)Writing objects:  64% (9/14)Writing objects:  71% (10/14)Writing objects:  78% (11/14)Writing objects:  92% (13/14)Writing objects: 100% (14/14)Writing objects: 100% (14/14), 43.60 KiB | 1.98 MiB/s, done.
Total 14 (delta 7), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas:   0% (0/7)[Kremote: Resolving deltas:  14% (1/7)[Kremote: Resolving deltas:  28% (2/7)[Kremote: Resolving deltas:  42% (3/7)[Kremote: Resolving deltas:  57% (4/7)[Kremote: Resolving deltas:  71% (5/7)[Kremote: Resolving deltas:  85% (6/7)[Kremote: Resolving deltas: 100% (7/7)[Kremote: Resolving deltas: 100% (7/7), completed with 6 local objects.[K
To https://github.com/kmoshie1/i471a.git
   6adce09..9eb4f06  lab1 -> lab1
kmoshie1@remote-n15:~/i471a/submit/lab1$ ls
exercises  lab1.LOG
kmoshie1@remote-n15:~/i471a/submit/lab1$ cd [K[K[Kscript -a lab1.LOG 
Script started, file is lab1.LOG
kmoshie1@remote-n15:~/i471a/submit/lab1$ cd c[Kexercises/
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises$ ls
01-regex  02-lexer  03-calc  04-ast  ast  calc	lexer  regex
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises$ cd calc/
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ls
calc.mjs  calc.py  data.txt  expn-data.txt
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 137L, 2426C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
Script started on 2021-02-25 17:21:37-05:00 [TERM="xterm" TTY="/dev/pts/1" COLUMNS="166" LINES="85"]
kmoshie1@remote-n15:~/i471a/submit/lab1$ cd c[Kexercises/
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises$ ls
01-regex  02-lexer  03-calc  04-ast  ast  calc	lexer  regex
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises$ cd calc/
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ ls
calc.mjs  calc.py  data.txt  expn-data.txt
kmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 137L, 2426C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7Ht += (kind === [31m'+'[m) ? t1 : -t1;
    [36m}[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[70;7Hmatch([31m'-'[m);[71;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[74;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m
    [33mif[m (check([31m'INT'[m)) [36m{[m[80;7H[33mconst[m value = parseInt(lookahead.lexeme);[81;7Hmatch([31m'INT'[m);[82;7H[33mreturn[m value;
    [36m}[m
    [33melse[m [36m{[m[85;149H47,0-1[8CTop[47;1H[?25h[?1000l[?1002h[?25l[85;149H58,19 [58;19H[?25h[?25l[85;149H60,34[60;34H[?25h[?25l[59;38H[36m[46m{[64;5H}[m[85;150H4,5 [64;5H[?25h[?25l[59;31H[46m([3C)[m) [36m{[64;5H}[m[85;149H59,35[59;35H[?25h[?25l[85;139H~@k[59;35H[85;139H   [59;36H[59;11H[46m([m[19C([3C)[46m)[m[85;153H6[59;36H[?25h[?25l[85;139H~@k[59;36H[85;139H   [59;35H[59;11H([19C[46m([3C)[m)[85;153H5[59;35H[?25h[?25l[85;139Ha[59;35H[85;139H [59;36H[85;1H[1m-- INSERT --[m[85;13H[K[85;149H59,36[9CTop[59;11H[46m([m[19C([3C)[46m)[?25h[?25l [m) [36m{[m [46m)[m[85;153H7[59;37H[?25h[?25l[46m|[m) [36m{[m|[46m)[m[85;153H8[59;38H[?25h[?25l[46m|[m) [36m{[m|[46m)[m[85;153H9[59;39H[?25h[?25l[46m [m) [36m{[m [46m)[m[85;152H40[59;40H[?25h[?25l[46mc[m) [36m{[mc[46m)[m[85;153H1[59;41H[?25h[?25l[46mh[m) [36m{[mh[46m)[m[85;153H2[59;42H[?25h[?25l[46me[m) [36m{[me[46m)[m[85;153H3[59;43H[?25h[?25l[46mc[m) [36m{[mc[46m)[m[85;153H4[59;44H[?25h[?25l[46mk[m) [36m{[mk[46m)[m[85;153H5[59;45H[?25h[?25l[46m([m) [36m{[m[59;11H([34C[46m)[m[85;153H6[59;46H[?25h[?25l[31m[46m'[m[31m) {'[m[31m[46m)[m[85;153H7[59;47H[?25h[?25l[31m[46m*[m[31m) {*[m[31m[46m)[m[85;153H8[59;48H[?25h[?25l[31m[46m*[m[31m) {*[m[31m[46m)[m[85;153H9[59;49H[?25h[?25l[31m[46m'[m) [36m{[m[31m'[m[46m)[m[85;152H50[59;50H[?25h[?25l[1C) [36m{[m[59;11H[46m([m[33C([4C)[46m)[m[85;153H1[59;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7Hmatch([31m'('[m);[83;7H[33mconst[m value = expr();[84;7Hmatch([31m')'[m);[85;149H[K[85;149H59,51[10C5%[56;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7H[33mreturn[m value;
    [36m}
[m  [36m}[m[85;149H[K[85;149H59,51[9C11%[53;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36m}[m[85;149H[K[85;149H59,51[9C16%[50;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36mfunction[m scan(text) [36m{[m
  [33mconst[m tokens = [36m[][m;
  [33mwhile[m (text.length > 0) [36m{[m[85;149H[K[85;149H59,51[9C22%[47;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36mlet[m m;
    [33mif[m ((m = text.match(/^[36m\[ms+/))) [36m{
[m    [36m}[m[85;149H[K[85;149H59,51[9C28%[44;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33melse[m [33mif[m ((m = text.match(/^[36m\[md+/))) [36m{[m[83;7Htokens.push([33mnew[m Token([31m'INT'[m, m[36m[[m0[36m][m));
    [36m}[m[33melse[m [33mif[m(m = text.match(/^[36m\[m*[36m\[m*/))[36m{[m[85;149H[K[85;149H59,51[9C33%[41;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m
    [33melse[m [36m{[m[85;149H[K[85;149H59,51[9C39%[38;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7Hm = text.match(/^./);[83;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m[85;149H[K[85;149H59,51[9C45%[35;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5Htext = text.substring(m[36m[[m0[36m][m.length);
  [36m}[m
  [33mreturn[m tokens;[85;149H[K[85;149H59,51[9C50%[32;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36m}[m[85;149H[K[85;149H59,51[9C56%[29;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mconst[m CHAR_SET = [31m'utf8'[m;
[36mfunction[m main() [36m{[m
  [33mif[m (process.argv.length !== 3) usage();[85;149H[K[85;149H59,51[9C62%[26;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mconst[m file = process.argv[36m[[m2[36m][m;
  [33mconst[m text = fs.readFileSync(file === [31m'-'[m ? 0 : file, CHAR_SET);
  [33mconst[m value = parse(text);[85;149H[K[85;149H59,51[9C67%[23;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3Hconsole.log(value);
[36m}[m[85;149H[K[85;149H59,51[9C73%[20;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36mfunction[m usage() [36m{[m
  [33mconst[m prog = Path.basename(process.argv[36m[[m1[36m][m)
  console.error([31m`usage: [m[35m${prog}[m[31m INPUT_FILE`[m);[85;149H[K[85;149H59,51[9C79%[17;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3Hprocess.exit(1);
[36m}[m[85;149H[K[85;149H59,51[9C84%[14;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mclass[m Token [36m{[m
  constructor(kind, lexeme) [36m{[m
    [32mObject[m.assign([36mthis[m, [36m{[mkind, lexeme[36m}[m);[85;149H[K[85;149H59,51[9C90%[11;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[36m}
}[m[85;149H[K[85;149H59,51[9C96%[8;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1Hmain();

[1m[34m~                                                                                                                                                                     [m[85;149H[K[85;149H60,35[9CBot[5;11H([39C)[6;35H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                                     [83;1H~                                                                                                                                                   [m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7Ht += (kind === [31m'+'[m) ? t1 : -t1;
    [36m}[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[70;7Hmatch([31m'-'[m);[71;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[74;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m
    [33mif[m (check([31m'INT'[m)) [36m{[m[80;7H[33mconst[m value = parseInt(lookahead.lexeme);[81;7Hmatch([31m'INT'[m);[82;7H[33mreturn[m value;
    [36m}[m
    [33melse[m [36m{[m[85;149H47,0-1[8CTop[47;1H[?25h[?1000l[?1002h[?25l[85;149H58,19 [58;19H[?25h[?25l[85;149H60,34[60;34H[?25h[?25l[59;38H[36m[46m{[64;5H}[m[85;150H4,5 [64;5H[?25h[?25l[59;31H[46m([3C)[m) [36m{[64;5H}[m[85;149H59,35[59;35H[?25h[?25l[85;139H~@k[59;35H[85;139H   [59;36H[59;11H[46m([m[19C([3C)[46m)[m[85;153H6[59;36H[?25h[?25l[85;139H~@k[59;36H[85;139H   [59;35H[59;11H([19C[46m([3C)[m)[85;153H5[59;35H[?25h[?25l[85;139Ha[59;35H[85;139H [59;36H[85;1H[1m-- INSERT --[m[85;13H[K[85;149H59,36[9CTop[59;11H[46m([m[19C([3C)[46m)[?25h[?25l [m) [36m{[m [46m)[m[85;153H7[59;37H[?25h[?25l[46m|[m) [36m{[m|[46m)[m[85;153H8[59;38H[?25h[?25l[46m|[m) [36m{[m|[46m)[m[85;153H9[59;39H[?25h[?25l[46m [m) [36m{[m [46m)[m[85;152H40[59;40H[?25h[?25l[46mc[m) [36m{[mc[46m)[m[85;153H1[59;41H[?25h[?25l[46mh[m) [36m{[mh[46m)[m[85;153H2[59;42H[?25h[?25l[46me[m) [36m{[me[46m)[m[85;153H3[59;43H[?25h[?25l[46mc[m) [36m{[mc[46m)[m[85;153H4[59;44H[?25h[?25l[46mk[m) [36m{[mk[46m)[m[85;153H5[59;45H[?25h[?25l[46m([m) [36m{[m[59;11H([34C[46m)[m[85;153H6[59;46H[?25h[?25l[31m[46m'[m[31m) {'[m[31m[46m)[m[85;153H7[59;47H[?25h[?25l[31m[46m*[m[31m) {*[m[31m[46m)[m[85;153H8[59;48H[?25h[?25l[31m[46m*[m[31m) {*[m[31m[46m)[m[85;153H9[59;49H[?25h[?25l[31m[46m'[m) [36m{[m[31m'[m[46m)[m[85;152H50[59;50H[?25h[?25l[1C) [36m{[m[59;11H[46m([m[33C([4C)[46m)[m[85;153H1[59;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7Hmatch([31m'('[m);[83;7H[33mconst[m value = expr();[84;7Hmatch([31m')'[m);[85;149H[K[85;149H59,51[10C5%[56;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7H[33mreturn[m value;
    [36m}
[m  [36m}[m[85;149H[K[85;149H59,51[9C11%[53;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36m}[m[85;149H[K[85;149H59,51[9C16%[50;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36mfunction[m scan(text) [36m{[m
  [33mconst[m tokens = [36m[][m;
  [33mwhile[m (text.length > 0) [36m{[m[85;149H[K[85;149H59,51[9C22%[47;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36mlet[m m;
    [33mif[m ((m = text.match(/^[36m\[ms+/))) [36m{
[m    [36m}[m[85;149H[K[85;149H59,51[9C28%[44;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33melse[m [33mif[m ((m = text.match(/^[36m\[md+/))) [36m{[m[83;7Htokens.push([33mnew[m Token([31m'INT'[m, m[36m[[m0[36m][m));
    [36m}[m[33melse[m [33mif[m(m = text.match(/^[36m\[m*[36m\[m*/))[36m{[m[85;149H[K[85;149H59,51[9C33%[41;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m
    [33melse[m [36m{[m[85;149H[K[85;149H59,51[9C39%[38;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7Hm = text.match(/^./);[83;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m[85;149H[K[85;149H59,51[9C45%[35;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5Htext = text.substring(m[36m[[m0[36m][m.length);
  [36m}[m
  [33mreturn[m tokens;[85;149H[K[85;149H59,51[9C50%[32;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36m}[m[85;149H[K[85;149H59,51[9C56%[29;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mconst[m CHAR_SET = [31m'utf8'[m;
[36mfunction[m main() [36m{[m
  [33mif[m (process.argv.length !== 3) usage();[85;149H[K[85;149H59,51[9C62%[26;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mconst[m file = process.argv[36m[[m2[36m][m;
  [33mconst[m text = fs.readFileSync(file === [31m'-'[m ? 0 : file, CHAR_SET);
  [33mconst[m value = parse(text);[85;149H[K[85;149H59,51[9C67%[23;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3Hconsole.log(value);
[36m}[m[85;149H[K[85;149H59,51[9C73%[20;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36mfunction[m usage() [36m{[m
  [33mconst[m prog = Path.basename(process.argv[36m[[m1[36m][m)
  console.error([31m`usage: [m[35m${prog}[m[31m INPUT_FILE`[m);[85;149H[K[85;149H59,51[9C79%[17;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3Hprocess.exit(1);
[36m}[m[85;149H[K[85;149H59,51[9C84%[14;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mclass[m Token [36m{[m
  constructor(kind, lexeme) [36m{[m
    [32mObject[m.assign([36mthis[m, [36m{[mkind, lexeme[36m}[m);[85;149H[K[85;149H59,51[9C90%[11;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[36m}
}[m[85;149H[K[85;149H59,51[9C96%[8;51H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1Hmain();

[1m[34m~                                                                                                                                                                     [m[85;149H[K[85;149H60,35[9CBot[5;11H([39C)[6;35H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                                     [83;1H~                                                                                                                                                                     [84;1H~                                                                                                                                                                     [m[85;149H[K[85;149H63,38[9CBot[6;38H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                                     [83;1H~                                                                                                                                                                     [84;1H~                                                                                                                                                                     [m[85;149H[K[85;149H66,4[10CBot[6;4H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                                     [83;1H~                                                                                                                                                                     [84;1H~                                                                                                                                                                     [m[85;149H[K[85;149H69,22[9CBot[6;21H[36m[46m{[9;5H}[6;22H[?25h[?25l[1;84r[m[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                   [84;1H~                                                                                                                                                                     [m[85;149H[K[85;149H63,38[9CBot[6;38H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                                     [83;1H~                                                                                                                                                                     [84;1H~                                                                                                                                                                     [m[85;149H[K[85;149H66,4[10CBot[6;4H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                                     [83;1H~                                                                                                                                                                     [84;1H~                                                                                                                                                                     [m[85;149H[K[85;149H69,22[9CBot[6;21H[36m[46m{[9;5H}[6;22H[?25h[?25l[1;84r[m[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                                     [83;1H~                                                                                                                                                                     [84;1H~                                                                                                                                                                     [m[85;149H[K[85;149H72,6[10CBot[6;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[36m}[m
    [33mreturn[m t;
  [36m}[m[85;149H[K[85;149H72,6[10CBot[9;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;7Hmatch(kind);[2;7H[33mconst[m t1 = term();[3;7Ht += (kind === [31m'+'[m) ? t1 : -t1;[85;149H[K[85;149H72,6[10CBot[12;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[3;7H[33mconst[m kind = lookahead.kind;[85;149H[K[85;149H72,6[10CBot[15;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[36m}

[m  [36mfunction[m expr() [36m{[m[85;149H[K[85;149H72,6[10CBot[18;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;[85;149H[K[85;149H72,6[10C96%[21;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[3;7Hvalues.push(expr());[85;149H[K[85;149H72,6[10C90%[24;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[36m}

[m  [36mfunction[m program() [36m{[m[85;149H[K[85;149H72,6[10C84%[27;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33mreturn[m ([2;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );[85;149H[K[85;149H72,6[10C79%[30;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m[85;149H[K[85;149H72,6[10C73%[33;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33melse[m [36m{[m[2;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[3;7Hprocess.exit();[85;149H[K[85;149H72,6[10C67%[36;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33mif[m (check(kind)) [36m{[m[2;7Hlookahead = nextToken();
    [36m}[m[85;149H[K[85;149H72,6[10C62%[39;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;3H[36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m[85;149H[K[85;149H72,6[10C56%[42;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;[85;149H[K[85;149H72,6[10C50%[45;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;[85;149H[K[85;149H72,6[10C45%[48;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m  ;
*/[m[85;149H[K[85;149H72,6[10C39%[51;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34mfactor
  : INT
  | '(' expr ')'[m[85;149H[K[85;149H72,6[10C33%[54;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m  : '-' term
  | factor
  ;[m[85;149H[K[85;149H72,6[10C28%[57;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m  : term ( ( '+' | '-' ) term )*
  ;
term[m[85;149H[K[85;149H72,6[10C22%[60;6H[?25h[?25l[47;53H[36m[46m{[52;5H}[m[57;21H[36m{[60;5H}[m[85;149H59,54[47;54H[?25h[?25la[36m{[52;5H}[m[85;153H5[47;55H[?25h[?25l[47;54H[K[47;53H[36m[46m{[52;5H}[m[85;153H4[47;54H[?25h[?25l[48;84r[48;1H[L[1;85r[52;5H[46m [m
    [36m}[m[85;149H[K[85;149H60,6-13[7C22%[47;53H[36m{[m[52;5H [48;13H[?25h[?25l[85;152H5-12[48;12H[?25h[?25l[85;152H4-11[48;11H[?25h[?25l[85;152H3-10[48;10H[?25h[?25l[85;152H2-9 [48;9H[?25h[?25l[85;152H1  [48;1H[?25h[?25l[47;84r[84;1H
[1;85r[47;5H[33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[84;3H[33mwhile[m (text.length > 0) [36m{[m[85;149H[K[85;149H59,54[9C22%[47;53H[36m[46m{[52;5H}[47;54H[?25h[?25l[48;84r[m[48;1H[L[1;85r[52;5H[46m [m
    [36m}[m[85;149H[K[85;149H60,6-13[7C22%[47;53H[36m{[m[52;5H [48;13H[?25h[?25l[85;152H5-12[48;12H[?25h[?25l[85;152H4-11[48;11H[?25h[?25l[85;152H3-10[48;10H[?25h[?25l[85;152H2-9 [48;9H[?25h[?25l[85;152H1  [48;1H[?25h[?25l[85;152H2[48;2H[?25h[?25l[85;152H3[48;3H[?25h[?25l[85;152H4[48;4H[?25h[?25l[85;152H5[48;5H[?25h[?25l[85;152H6[48;6H[?25h[?25l[85;152H7[48;7H[?25h[?25lp[85;152H8[48;8H[?25h[?25lr[85;152H9[48;9H[?25h[?25li[85;152H10[48;10H[?25h[?25ln[85;153H1[48;11H[?25h[?25lt[85;153H2[48;12H[?25h[?25l([85;153H3[48;13H[?25h[?25l[48;12H[K[85;153H2[48;12H[?25h[?25l[48;11H[K[85;153H1[48;11H[?25h[?25l[48;10H[K[85;153H0[48;10H[?25h[?25l[48;9H[K[85;152H9 [48;9H[?25h[?25l[48;8H[K[85;152H8[48;8H[?25h[?25l[48;7H[K[85;152H7[48;7H[?25h[?25l[85;152H6[48;6H[?25h[?25l[85;152H5[48;5H[?25h[?25l[85;152H4[48;4H[?25h[?25l[85;152H3[48;3H[?25h[?25l[85;152H2[48;2H[?25h[?25l[85;152H1[48;1H[?25h[?25l[47;84r[84;1H
[1;85r[47;5H[33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[84;3H[33mwhile[m (text.length > 0) [36m{[m[85;149H[K[85;149H59,54[9C22%[47;53H[36m[46m{[52;5H}[47;54H[?25h[?25l[m[85;153H3[47;53H[?25h[?25l[47;11H[46m([39C)[m [36m{[52;5H}[m[85;153H2[47;52H[?25h[?25l[85;153H1[47;51H[?25h[?25l[46m [m[36m{[m[47;53H[K[47;11H([33C[46m([4C)[m [85;153H0[47;50H[?25h[?25l[31m)[m[31m[46m [m[31m{[m[47;52H[K[47;49H[31m[46m)[m[31m [m[85;152H49[47;49H[?25h[?25l[31m)[m[31m[46m [m[31m{[m[47;51H[K[47;48H[31m[46m)[m[31m [m[85;153H8[47;48H[?25h[?25l[31m)[m[31m[46m [m[31m{[m[47;50H[K[47;47H[31m[46m)[m[31m [m[85;153H7[47;47H[?25h[?25l)[46m [m[36m{[m[47;49H[K[47;46H[46m)[m [85;153H6[47;46H[?25h[?25l[46m) [m[36m{[m[47;48H[K[47;11H[46m([m[34C [85;153H5[47;45H[?25h[?25l)[46m [m[36m{[m[47;47H[K[47;44H[46m)[m [85;153H4[47;44H[?25h[?25l)[46m [m[36m{[m[47;46H[K[47;43H[46m)[m [85;153H3[47;43H[?25h[?25l)[46m [m[36m{[m[47;45H[K[47;42H[46m)[m [85;153H2[47;42H[?25h[?25l)[46m [m[36m{[m[47;44H[K[47;41H[46m)[m [85;153H1[47;41H[?25h[?25l)[46m [m[36m{[m[47;43H[K[47;40H[46m)[m [85;153H                                                                                    [83;1H~                                                                                                                                                                     [84;1H~                                                                                                                                                                     [m[85;149H[K[85;149H72,6[10CBot[6;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[36m}[m
    [33mreturn[m t;
  [36m}[m[85;149H[K[85;149H72,6[10CBot[9;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;7Hmatch(kind);[2;7H[33mconst[m t1 = term();[3;7Ht += (kind === [31m'+'[m) ? t1 : -t1;[85;149H[K[85;149H72,6[10CBot[12;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[3;7H[33mconst[m kind = lookahead.kind;[85;149H[K[85;149H72,6[10CBot[15;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[36m}

[m  [36mfunction[m expr() [36m{[m[85;149H[K[85;149H72,6[10CBot[18;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;[85;149H[K[85;149H72,6[10C96%[21;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[3;7Hvalues.push(expr());[85;149H[K[85;149H72,6[10C90%[24;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[36m}

[m  [36mfunction[m program() [36m{[m[85;149H[K[85;149H72,6[10C84%[27;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33mreturn[m ([2;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );[85;149H[K[85;149H72,6[10C79%[30;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m[85;149H[K[85;149H72,6[10C73%[33;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33melse[m [36m{[m[2;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[3;7Hprocess.exit();[85;149H[K[85;149H72,6[10C67%[36;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33mif[m (check(kind)) [36m{[m[2;7Hlookahead = nextToken();
    [36m}[m[85;149H[K[85;149H72,6[10C62%[39;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;3H[36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m[85;149H[K[85;149H72,6[10C56%[42;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;[85;149H[K[85;149H72,6[10C50%[45;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;[85;149H[K[85;149H72,6[10C45%[48;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m  ;
*/[m[85;149H[K[85;149H72,6[10C39%[51;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34mfactor
  : INT
  | '(' expr ')'[m[85;149H[K[85;149H72,6[10C33%[54;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m  : '-' term
  | factor
  ;[m[85;149H[K[85;149H72,6[10C28%[57;6H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m  : term ( ( '+' | '-' ) term )*
  ;
term[m[85;149H[K[85;149H72,6[10C22%[60;6H[?25h[?25l[47;53H[36m[46m{[52;5H}[m[57;21H[36m{[60;5H}[m[85;149H59,54[47;54H[?25h[?25la[36m{[52;5H}[m[85;153H5[47;55H[?25h[?25l[47;54H[K[47;53H[36m[46m{[52;5H}[m[85;153H4[47;54H[?25h[?25l[48;84r[48;1H[L[1;85r[52;5H[46m [m
    [36m}[m[85;149H[K[85;149H60,6-13[7C22%[47;53H[36m{[m[52;5H [48;13H[?25h[?25l[85;152H5-12[48;12H[?25h[?25l[85;152H4-11[48;11H[?25h[?25l[85;152H3-10[48;10H[?25h[?25l[85;152H2-9 [48;9H[?25h[?25l[85;152H1  [48;1H[?25h[?25l[47;84r[84;1H
[1;85r[47;5H[33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[84;3H[33mwhile[m (text.length > 0) [36m{[m[85;149H[K[85;149H59,54[9C22%[47;53H[36m[46m{[52;5H}[47;54H[?25h[?25l[48;84r[m[48;1H[L[1;85r[52;5H[46m [m
    [36m}[m[85;149H[K[85;149H60,6-13[7C22%[47;53H[36m{[m[52;5H [48;13H[?25h[?25l[85;152H5-12[48;12H[?25h[?25l[85;152H4-11[48;11H[?25h[?25l[85;152H3-10[48;10H[?25h[?25l[85;152H2-9 [48;9H[?25h[?25l[85;152H1  [48;1H[?25h[?25l[85;152H2[48;2H[?25h[?25l[85;152H3[48;3H[?25h[?25l[85;152H4[48;4H[?25h[?25l[85;152H5[48;5H[?25h[?25l[85;152H6[48;6H[?25h[?25l[85;152H7[48;7H[?25h[?25lp[85;152H8[48;8H[?25h[?25lr[85;152H9[48;9H[?25h[?25li[85;152H10[48;10H[?25h[?25ln[85;153H1[48;11H[?25h[?25lt[85;153H2[48;12H[?25h[?25l([85;153H3[48;13H[?25h[?25l[48;12H[K[85;153H2[48;12H[?25h[?25l[48;11H[K[85;153H1[48;11H[?25h[?25l[48;10H[K[85;153H0[48;10H[?25h[?25l[48;9H[K[85;152H9 [48;9H[?25h[?25l[48;8H[K[85;152H8[48;8H[?25h[?25l[48;7H[K[85;152H7[48;7H[?25h[?25l[85;152H6[48;6H[?25h[?25l[85;152H5[48;5H[?25h[?25l[85;152H4[48;4H[?25h[?25l[85;152H3[48;3H[?25h[?25l[85;152H2[48;2H[?25h[?25l[85;152H1[48;1H[?25h[?25l[47;84r[84;1H
[1;85r[47;5H[33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[84;3H[33mwhile[m (text.length > 0) [36m{[m[85;149H[K[85;149H59,54[9C22%[47;53H[36m[46m{[52;5H}[47;54H[?25h[?25l[m[85;153H3[47;53H[?25h[?25l[47;11H[46m([39C)[m [36m{[52;5H}[m[85;153H2[47;52H[?25h[?25l[85;153H1[47;51H[?25h[?25l[46m [m[36m{[m[47;53H[K[47;11H([33C[46m([4C)[m [85;153H0[47;50H[?25h[?25l[31m)[m[31m[46m [m[31m{[m[47;52H[K[47;49H[31m[46m)[m[31m [m[85;152H49[47;49H[?25h[?25l[31m)[m[31m[46m [m[31m{[m[47;51H[K[47;48H[31m[46m)[m[31m [m[85;153H8[47;48H[?25h[?25l[31m)[m[31m[46m [m[31m{[m[47;50H[K[47;47H[31m[46m)[m[31m [m[85;153H7[47;47H[?25h[?25l)[46m [m[36m{[m[47;49H[K[47;46H[46m)[m [85;153H6[47;46H[?25h[?25l[46m) [m[36m{[m[47;48H[K[47;11H[46m([m[34C [85;153H5[47;45H[?25h[?25l)[46m [m[36m{[m[47;47H[K[47;44H[46m)[m [85;153H4[47;44H[?25h[?25l)[46m [m[36m{[m[47;46H[K[47;43H[46m)[m [85;153H3[47;43H[?25h[?25l)[46m [m[36m{[m[47;45H[K[47;42H[46m)[m [85;153H2[47;42H[?25h[?25l)[46m [m[36m{[m[47;44H[K[47;41H[46m)[m [85;153H1[47;41H[?25h[?25l)[46m [m[36m{[m[47;43H[K[47;40H[46m)[m [85;153H0[47;40H[?25h[?25l)[46m [m[36m{[m[47;42H[K[47;39H[46m)[m [85;152H39[47;39H[?25h[?25l)[46m [m[36m{[m[47;41H[K[47;38H[46m)[m [85;153H8[47;38H[?25h[?25l)[46m [m[36m{[m[47;40H[K[47;37H[46m)[m [85;153H7[47;37H[?25h[?25l)[46m [m[36m{[m[47;39H[K[47;36H[46m)[m [85;153H6[47;36H[?25h[?25l[85;153H7[47;37H[?25h[?25l[47;11H([24C)[85;149H60,35[48;35H[?25h[?25l[85;150H1,22[49;22H[?25h[?25l[85;150H2,25[50;25H[?25h[?25l[85;150H3,37[51;37H[?25h[?25l[47;38H[36m[46m{[52;5H}[m[85;150H4,6 [52;6H[?25h[?25l[47;38H[36m{[52;5H}[m[85;150H5,14[53;14H[?25h[?25l[45;19H[36m[46m{[54;3H}[m[85;150H6,4 [54;4H[?25h[?25l[45;19H[36m{[54;3H}[m[85;150H5,14[53;14H[?25h[?25l[47;38H[36m[46m{[52;5H}[m[85;150H4,6 [52;6H[?25h[?25l[53;84r[53;1H[L[1;85r[85;149H[K[85;149H65,4-11[7C22%[47;38H[36m{[52;5H}[53;11H[?25h[?25l[m[85;152H3-10[53;10H[?25h[?25l[85;152H2-9 [53;9H[?25h[?25l[85;152H1  [53;1H[?25h[?25l[52;84r[84;1H
[1;85r[52;5H[36m}[m[84;3H[33mwhile[m (text.length > 0) [36m{[m[85;149H[K[85;149H64,6[10C22%[47;38H[36m[46m{[52;5H}[?25h[?25l[53;84r[m[53;1H[L[1;85r[85;149H[K[85;149H65,4-11[7C22%[47;38H[36m{[52;5H}[53;11H[?25h[?25l[m[85;152H5-17[53;17H[?25h[?25l[85;152H4-11[53;11H[?25h[?25l[85;152H3-10[53;10H[?25h[?25l[85;152H2-9 [53;9H[?25h[?25l[85;152H1  [53;1H[?25h[?25l[52;84r[84;1H
[1;85r[52;5H[36m}[m[84;3H[33mwhile[m (text.length > 0) [36m{[m[85;149H[K[85;149H64,6[10C22%[47;38H[36m[46m{[52;5H}[?25h[?25l0[47;40H[?25h[?25l)[46m [m[36m{[m[47;42H[K[47;39H[46m)[m [85;152H39[47;39H[?25h[?25l)[46m [m[36m{[m[47;41H[K[47;38H[46m)[m [85;153H8[47;38H[?25h[?25l)[46m [m[36m{[m[47;40H[K[47;37H[46m)[m [85;153H7[47;37H[?25h[?25l)[46m [m[36m{[m[47;39H[K[47;36H[46m)[m [85;153H6[47;36H[?25h[?25l[85;153H7[47;37H[?25h[?25l[47;11H([24C)[85;149H60,35[48;35H[?25h[?25l[85;150H1,22[49;22H[?25h[?25l[85;150H2,25[50;25H[?25h[?25l[85;150H3,37[51;37H[?25h[?25l[47;38H[36m[46m{[52;5H}[m[85;150H4,6 [52;6H[?25h[?25l[47;38H[36m{[52;5H}[m[85;150H5,14[53;14H[?25h[?25l[45;19H[36m[46m{[54;3H}[m[85;150H6,4 [54;4H[?25h[?25l[45;19H[36m{[54;3H}[m[85;150H5,14[53;14H[?25h[?25l[47;38H[36m[46m{[52;5H}[m[85;150H4,6 [52;6H[?25h[?25l[53;84r[53;1H[L[1;85r[85;149H[K[85;149H65,4-11[7C22%[47;38H[36m{[52;5H}[53;11H[?25h[?25l[m[85;152H3-10[53;10H[?25h[?25l[85;152H2-9 [53;9H[?25h[?25l[85;152H1  [53;1H[?25h[?25l[52;84r[84;1H
[1;85r[52;5H[36m}[m[84;3H[33mwhile[m (text.length > 0) [36m{[m[85;149H[K[85;149H64,6[10C22%[47;38H[36m[46m{[52;5H}[?25h[?25l[53;84r[m[53;1H[L[1;85r[85;149H[K[85;149H65,4-11[7C22%[47;38H[36m{[52;5H}[53;11H[?25h[?25l[m[85;152H5-17[53;17H[?25h[?25l[85;152H4-11[53;11H[?25h[?25l[85;152H3-10[53;10H[?25h[?25l[85;152H2-9 [53;9H[?25h[?25l[85;152H1  [53;1H[?25h[?25l[52;84r[84;1H
[1;85r[52;5H[36m}[m[84;3H[33mwhile[m (text.length > 0) [36m{[m[85;149H[K[85;149H64,6[10C22%[47;38H[36m[46m{[52;5H}[?25h[?25l[53;84r[m[53;1H[L[1;85r[85;149H[K[85;149H65,4-11[7C22%[47;38H[36m{[52;5H}[53;11H[?25h[?25l[m[85;152H3-10[53;10H[?25h[?25l[85;152H2-9 [53;9H[?25h[?25l[85;152H1  [53;1H[?25h[?25l[85;152H2[53;2H[?25h[?25l[85;152H3[53;3H[?25h[?25l[85;152H4[53;4H[?25h[?25l[85;152H5[53;5H[?25h[?25lw[85;152H6[53;6H[?25h[?25lh[85;152H7[53;7H[?25h[?25li[85;152H8[53;8H[?25h[?25ll[85;152H9[53;9H[?25h[?25l[33mwhile[m[85;152H10[53;10H[?25h[?25l[85;153H1[53;11H[?25h[?25l([85;153H2[53;12H[?25h[?25lc[85;153H3[53;13H[?25h[?25lh[85;153H4[53;14H[?25h[?25le[85;153H5[53;15H[?25h[?25lc[85;153H6[53;16H[?25h[?25lk[85;153H7[53;17H[?25h[?25l([85;153H8[53;18H[?25h[?25l[31m'[m[85;153H9[53;19H[?25h[?25l[31m*[m[85;152H20[53;20H[?25h[?25l[31m*[m[85;153H1[53;21H[?25h[?25l[31m'[m[85;153H2[53;22H[?25h[?25l)[46m([4C)[m[85;153H3[53;23H[?25h[?25l)[53;11H[46m([mcheck([4C)[46m)[m[85;153H4[53;24H[?25h[?25l[36m{[m[53;11H([11C)[36m[46m{

[m  [36m[46m}[m[85;153H5[53;25H[?25h[?25l[54;84r[54;1H[L[1;85r[55;3H[46m [m
  [36m}[m[85;149H[K[85;149H66,6-13[7C21%[53;24H[36m{[m

   [54;13H[?25h[?25l[85;152H5-12[54;12H[?25h[?25l[55;84r[55;1H[L[1;85r[85;149H[K[85;149H67,6-13[7C21%[55;13H[?25h[?25l    [36m}[m[53;24H[36m[46m{[55;5H}[m[85;153H   [55;6H[?25h[?25l[53;24H[36m{[55;5H}[m[85;150H6,1[54;1H[?25h[?25l[85;152H2-9[54;9H[?25h[?25lc[85;152H3-10[54;10H[?25h[?25lo[85;152H4-11[54;11H[?25h[?25ln[85;152H5-12[54;12H[?25h[?25ls[85;152H6-13[54;13H[?25h[?25l[33mconst[m[85;152H7-14[54;14H[?25h[?25l[85;152H8-15[54;15H[?25h[?25lk[85;152H9-16[54;16H[?25h[?25li[85;152H10-17[54;17H[?25h[?25ln[85;153H1-18[54;18H[?25h[?25ld[85;153H2-19[54;19H[?25h[?25l[85;153H3-20[54;20H[?25h[?25l=[85;153H4-21[54;21H[?25h[?25l[85;153H5-22[54;22H[?25h[?25ll[85;153H6-23[54;23H[?25h[?25lo[85;153H7-24[54;24H[?25h[?25lc[85;153H8-25[54;25H[?25h[?25lk[85;153H9-26[54;26H[?25h[?25l[54;25H[K[85;153H8-25[54;25H[?25h[?25l[54;24H[K[85;153H7-24[54;24H[?25h[?25lo[85;153H8-25[54;25H[?25h[?25lk[85;153H9-26[54;26H[?25h[?25la[85;152H20-27[54;27H[?25h[?25lh[85;153H1-28[54;28H[?25h[?25le[85;153H2-29[54;29H[?25h[?25la[85;153H3-30[54;30H[?25h[?25ld[85;153H4-31[54;31H[?25h[?25l.[85;153H5-32[54;32H[?25h[?25lk[85;153H6-33[54;33H[?25h[?25li[85;153H7-34[54;34H[?25h[?25ln[85;153H8-35[54;35H[?25h[?25ld[85;153H9-36[54;36H[?25h[?25l;[85;152H30-37[54;37H[?25h[?25l[55;84r[55;1H[L[1;85r[85;149H[K[85;149H67,6-13[7C21%[55;13H[?25h[?25lm[85;152H7-14[55;14H[?25h[?25la[85;152H8-15[55;15H[?25h[?25lt[85;152H9-16[55;16H[?25h[?25lc[85;152H10-17[55;17H[?25h[?25lh[85;153H1-18[55;18H[?25h[?25l([85;153H2-19[55;19H[?25h[?25lk[85;153H3-20[55;20H[?25h[?25li[85;153H4-21[55;21H[?25h[?25ln[85;153H5-22[55;22H[?25h[?25ld[85;153H6-23[55;23H[?25h[?25l)[46m([mkind[46m)[m[85;153H7-24[55;24H[?25h[?25l;[55;18H(kind)[85;153H8-25[55;25H[?25h[?25l[56;84r[56;1H[L[1;85r[85;149H[K[85;149H68,6-13[7C20%[56;13H[?25h[?25l[85;150H7[55;13H[?25h[?25lmatch(kind);[55;24H[K[85;152H5-12[55;12H[?25h[?25lmatch(kind);[55;23H[K[85;152H4-11[55;11H[?25h[?25lmatch(kind);[55;22H[K[85;152H3-10[55;10H[?25h[?25lmatch(kind);[55;21H[K[85;152H2-9 [55;9H[?25h[?25l[85;150H8,1  [56;1H[?25h[?25l[85;152H2-9[56;9H[?25h[?25lc[85;152H3-10[56;10H[?25h[?25lo[85;152H4-11[56;11H[?25h[?25ln[85;152H5-12[56;12H[?25h[?25ls[85;152H6-13[56;13H[?25h[?25l[33mconst[m[85;152H7-14[56;14H[?25h[?25l[85;152H8-15[56;15H[?25h[?25lt[85;152H9-16[56;16H[?25h[?25l1[85;152H10-17[56;17H[?25h[?25l[85;153H1-18[56;18H[?25h[?25l=[85;153H2-19[56;19H[?25h[?25l[85;153H3-20[56;20H[?25h[?25lt[85;153H4-21[56;21H[?25h[?25le[85;153H5-22[56;22H[?25h[?25lr[85;153H6-23[56;23H[?25h[?25lm[85;153H7-24[56;24H[?25h[?25l([85;153H8-25[56;25H[?25h[?25l)[46m()[m[85;153H9-26[56;26H[?25h[?25l;()[85;152H20-27[56;27H[?25h[?25l[57;84r[57;1H[L[1;85r[85;149H[K[85;149H69,6-13[7C20%[57;13H[?25h[?25l[85;152H5-12[57;12H[?25h[?25l[85;152H4-11[57;11H[?25h[?25l[85;152H3-10[57;10H[?25h[?25l[85;152H2-9 [57;9H[?25h[?25lt[85;152H3-10[57;10H[?25h[?25l[85;152H4-11[57;11H[?25h[?25l*[85;152H5-12[57;12H[?25h[?25l=[85;152H6-13[57;13H[?25h[?25l[57;12H[K[85;152H5-12[57;12H[?25h[?25l[36;22H[36m[46m{[43;3H}[m[85;149H48,23  [36;23H[?25h[?25l[36m{[43;3H}[m[85;149H69,5-12[57;12H[?25h[?25la[85;152H6-13[57;13H[?25h[?25l[57;12H[K[85;152H5-12[57;12H[?25h[?25l[57;11H[K[85;152H4-11[57;11H[?25h[?25l[85;152H3-10[57;10H[?25h[?25l[57;9H[K[85;152H2-9 [57;9H[?25h[?25l[85;152H1  [57;1H[?25h[85;1H[K[57;1H[?25l[85;139H^[[57;1H[85;139H  [57;1H[85;149H69,0-1[8C20%[57;1H[?25h[?25l[85;139H:[57;1H[85;139H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 143L, 2522C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ exit
exit

Script done on 2021-02-25 17:25:03-05:00 [COMMAND_EXIT_CODE="0"]
[53;84r[m[53;1H[L[1;85r[85;149H[K[85;149H65,4-11[7C22%[47;38H[36m{[52;5H}[53;11H[?25h[?25l[m[85;152H3-10[53;10H[?25h[?25l[85;152H2-9 [53;9H[?25h[?25l[85;152H1  [53;1H[?25h[?25l[85;152H2[53;2H[?25h[?25l[85;152H3[53;3H[?25h[?25l[85;152H4[53;4H[?25h[?25l[85;152H5[53;5H[?25h[?25lw[85;152H6[53;6H[?25h[?25lh[85;152H7[53;7H[?25h[?25li[85;152H8[53;8H[?25h[?25ll[85;152H9[53;9H[?25h[?25l[33mwhile[m[85;152H10[53;10H[?25h[?25l[85;153H1[53;11H[?25h[?25l([85;153H2[53;12H[?25h[?25lc[85;153H3[53;13H[?25h[?25lh[85;153H4[53;14H[?25h[?25le[85;153H5[53;15H[?25h[?25lc[85;153H6[53;16H[?25h[?25lk[85;153H7[53;17H[?25h[?25l([85;153H8[53;18H[?25h[?25l[31m'[m[85;153H9[53;19H[?25h[?25l[31m*[m[85;152H20[53;20H[?25h[?25l[31m*[m[85;153H1[53;21H[?25h[?25l[31m'[m[85;153H2[53;22H[?25h[?25l)[46m([4C)[m[85;153H3[53;23H[?25h[?25l)[53;11H[46m([mcheck([4C)[46m)[m[85;153H4[53;24H[?25h[?25l[36m{[m[53;11H([11C)[36m[46m{

[m  [36m[46m}[m[85;153H5[53;25H[?25h[?25l[54;84r[54;1H[L[1;85r[55;3H[46m [m
  [36m}[m[85;149H[K[85;149H66,6-13[7C21%[53;24H[36m{[m

   [54;13H[?25h[?25l[85;152H5-12[54;12H[?25h[?25l[55;84r[55;1H[L[1;85r[85;149H[K[85;149H67,6-13[7C21%[55;13H[?25h[?25l    [36m}[m[53;24H[36m[46m{[55;5H}[m[85;153H   [55;6H[?25h[?25l[53;24H[36m{[55;5H}[m[85;150H6,1[54;1H[?25h[?25l[85;152H2-9[54;9H[?25h[?25lc[85;152H3-10[54;10H[?25h[?25lo[85;152H4-11[54;11H[?25h[?25ln[85;152H5-12[54;12H[?25h[?25ls[85;152H6-13[54;13H[?25h[?25l[33mconst[m[85;152H7-14[54;14H[?25h[?25l[85;152H8-15[54;15H[?25h[?25lk[85;152H9-16[54;16H[?25h[?25li[85;152H10-17[54;17H[?25h[?25ln[85;153H1-18[54;18H[?25h[?25ld[85;153H2-19[54;19H[?25h[?25l[85;153H3-20[54;20H[?25h[?25l=[85;153H4-21[54;21H[?25h[?25l[85;153H5-22[54;22H[?25h[?25ll[85;153H6-23[54;23H[?25h[?25lo[85;153H7-24[54;24H[?25h[?25lc[85;153H8-25[54;25H[?25h[?25lk[85;153H9-26[54;26H[?25h[?25l[54;25H[K[85;153H8-25[54;25H[?25h[?25l[54;24H[K[85;153H7-24[54;24H[?25h[?25lo[85;153H8-25[54;25H[?25h[?25lk[85;153H9-26[54;26H[?25h[?25la[85;152H20-27[54;27H[?25h[?25lh[85;153H1-28[54;28H[?25h[?25le[85;153H2-29[54;29H[?25h[?25la[85;153H3-30[54;30H[?25h[?25ld[85;153H4-31[54;31H[?25h[?25l.[85;153H5-32[54;32H[?25h[?25lk[85;153H6-33[54;33H[?25h[?25li[85;153H7-34[54;34H[?25h[?25ln[85;153H8-35[54;35H[?25h[?25ld[85;153H9-36[54;36H[?25h[?25l;[85;152H30-37[54;37H[?25h[?25l[55;84r[55;1H[L[1;85r[85;149H[K[85;149H67,6-13[7C21%[55;13H[?25h[?25lm[85;152H7-14[55;14H[?25h[?25la[85;152H8-15[55;15H[?25h[?25lt[85;152H9-16[55;16H[?25h[?25lc[85;152H10-17[55;17H[?25h[?25lh[85;153H1-18[55;18H[?25h[?25l([85;153H2-19[55;19H[?25h[?25lk[85;153H3-20[55;20H[?25h[?25li[85;153H4-21[55;21H[?25h[?25ln[85;153H5-22[55;22H[?25h[?25ld[85;153H6-23[55;23H[?25h[?25l)[46m([mkind[46m)[m[85;153H7-24[55;24H[?25h[?25l;[55;18H(kind)[85;153H8-25[55;25H[?25h[?25l[56;84r[56;1H[L[1;85r[85;149H[K[85;149H68,6-13[7C20%[56;13H[?25h[?25l[85;150H7[55;13H[?25h[?25lmatch(kind);[55;24H[K[85;152H5-12[55;12H[?25h[?25lmatch(kind);[55;23H[K[85;152H4-11[55;11H[?25h[?25lmatch(kind);[55;22H[K[85;152H3-10[55;10H[?25h[?25lmatch(kind);[55;21H[K[85;152H2-9 [55;9H[?25h[?25l[85;150H8,1  [56;1H[?25h[?25l[85;152H2-9[56;9H[?25h[?25lc[85;152H3-10[56;10H[?25h[?25lo[85;152H4-11[56;11H[?25h[?25ln[85;152H5-12[56;12H[?25h[?25ls[85;152H6-13[56;13H[?25h[?25l[33mconst[m[85;152H7-14[56;14H[?25h[?25l[85;152H8-15[56;15H[?25h[?25lt[85;152H9-16[56;16H[?25h[?25l1[85;152H10-17[56;17H[?25h[?25l[85;153H1-18[56;18H[?25h[?25l=[85;153H2-19[56;19H[?25h[?25l[85;153H3-20[56;20H[?25h[?25lt[85;153H4-21[56;21H[?25h[?25le[85;153H5-22[56;22H[?25h[?25lr[85;153H6-23[56;23H[?25h[?25lm[85;153H7-24[56;24H[?25h[?25l([85;153H8-25[56;25H[?25h[?25l)[46m()[m[85;153H9-26[56;26H[?25h[?25l;()[85;152H20-27[56;27H[?25h[?25l[57;84r[57;1H[L[1;85r[85;149H[K[85;149H69,6-13[7C20%[57;13H[?25h[?25l[85;152H5-12[57;12H[?25h[?25l[85;152H4-11[57;11H[?25h[?25l[85;152H3-10[57;10H[?25h[?25l[85;152H2-9 [57;9H[?25h[?25lt[85;152H3-10[57;10H[?25h[?25l[85;152H4-11[57;11H[?25h[?25l*[85;152H5-12[57;12H[?25h[?25l=[85;152H6-13[57;13H[?25h[?25l[57;12H[K[85;152H5-12[57;12H[?25h[?25l[36;22H[36m[46m{[43;3H}[m[85;149H48,23  [36;23H[?25h[?25l[36m{[43;3H}[m[85;149H69,5-12[57;12H[?25h[?25la[85;152H6-13[57;13H[?25h[?25l[57;12H[K[85;152H5-12[57;12H[?25h[?25l[57;11H[K[85;152H4-11[57;11H[?25h[?25l[85;152H3-10[57;10H[?25h[?25l[57;9H[K[85;152H2-9 [57;9H[?25h[?25l[85;152H1  [57;1H[?25h[85;1H[K[57;1H[?25l[85;139H^[[57;1H[85;139H  [57;1H[85;149H69,0-1[8C20%[57;1H[?25h[?25l[85;139H:[57;1H[85;139H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 143L, 2522C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote-n15:~/i471a/submit/lab1/exercises/calc$ exit
exit
Script done, file is lab1.LOG
kmoshie1@remote-n15:~/i471a/submit/lab1$ exit
There are stopped jobs.
kmoshie1@remote-n15:~/i471a/submit/lab1$ exit

Script done on 2021-02-25 17:25:12-05:00 [COMMAND_EXIT_CODE="0"]
Script started on 2021-02-25 17:32:58-05:00 [TERM="xterm" TTY="/dev/pts/1" COLUMNS="157" LINES="85"]
kmoshie1@remote07:~/i471a/submit/lab1$ cd exercises/
kmoshie1@remote07:~/i471a/submit/lab1/exercises$ ls
01-regex  02-lexer  03-calc  04-ast  ast  calc	lexer  regex
kmoshie1@remote07:~/i471a/submit/lab1/exercises$ cd calc/
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ls
calc.mjs  calc.py  data.txt  expn-data.txt
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ c[Kvim calc.
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc." [New File][2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[1m[34m~                                                                                                                                                            [3;1H~                                                                                                                                                            [4;1H~                                                                                                                                                            [5;1H~                                                                                                                                                            [6;1H~                                                                                                                                                            [7;1H~                                                                                                                                                            [8;1H~                                                                                                                                                            [9;1H~                                                                                                                                                            [10;1H~                                                                                                                                                            [11;1H~                                                                                                                                                            [12;1H~                                                                                                                                                            [13;1H~                                                                                                                                                            [14;1H~                                                                                                                                                            [15;1H~                                                                                                                                                            [16;1H~                                                                                                                                                            [17;1H~                                                                                                                                                            [18;1H~                                                                                                                                                            [19;1H~                                                                                                                                                            [20;1H~                                                                                                                                                            [21;1H~                                                                                                                                                            [22;1H~                                                                                                                                                            [23;1H~                                                                                                                                                            [24;1H~                                                                                                                                                            [25;1H~                                                                                                                                                            [26;1H~                                                                                                                                                            [27;1H~                                                                                                                                                            [28;1H~                                                                                                                                                            [29;1H~                                                                                                                                                            [30;1H~                                                                                                                                                            [31;1H~                                                                                                                                                            [32;1H~                                                                                                                                                            [33;1H~                                                                                                                                                            [34;1H~                                                                                                                                                            [35;1H~                                                                                                                                                            [36;1H~                                                                                                                                                            [37;1H~                                                                                                                                                            [38;1H~                                                                                                                                                            [39;1H~                                                                                                                                                            [40;1H~                                                                                                                                                            [41;1H~                                                                                                                                                            [42;1H~                                                                                                                                                            [43;1H~                                                                                                                                                            [44;1H~                                                                                                                                                            [45;1H~                                                                                                                                                            [46;1H~                                                                                                                                                            [47;1H~                                                                                                                                                            [48;1H~                                                                                                                                                            [49;1H~                                                                                                                                                            [50;1H~                                                                                                                                                            [51;1H~                                                                                                                                                            [52;1H~                                                                                                                                                            [53;1H~                                                                                                                                                            [54;1H~                                                                                                                                                            [55;1H~                                                                                                                                                            [56;1H~                                                                                                                                                            [57;1H~                                                                                                                                                            [58;1H~                                                                                                                                                            [59;1H~                                                                                                                                                            [60;1H~                                                                                                                                                            [61;1H~                                                                                                                                                            [62;1H~                                                                                                                                                            [63;1H~                                                                                                                                                            [64;1H~                                                                                                                                                            [65;1H~                                                                                                                                                            [66;1H~                                                                                                                                                            [67;1H~                                                                                                                                                            [68;1H~                                                                                                                                                            [69;1H~                                                                                                                                                            [70;1H~                                                                                                                                                            [71;1H~                                                                                                                                                            [72;1H~                                                                                                                                                            [73;1H~                                                                                                                                                            [74;1H~                                                                                                                                                            [75;1H~                                                                                                                                                            [76;1H~                                                                                                                                                            [77;1H~                                                                                                                                                            [78;1H~                                                                                                                                                            [79;1H~                                                                                                                                                            [80;1H~                                                                                                                                                            [81;1H~                                                                                                                                                            [82;1H~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H0,0-1[9CAll[1;1H[?25h[?1000l[?1002h[?25l[85;130H^[[1;1H[85;130H  [1;1H[85;130H^[[1;1H[85;130H  [1;1H[?25h[?25l[85;130H:[1;1H[85;1H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ls
calc.mjs  calc.py  data.txt  expn-data.txt
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ cd calc.mjs 
bash: cd: calc.mjs: Not a directory
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ cd calc.mjs [1P[1P[1@v[1@i[1@m
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 143L, 2522C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7Ht += (kind === [31m'+'[m) ? t1 : -t1;
    [36m}[m
    [33mwhile[m (check([31m'**'[m))[36m{[m[66;9H[33mconst[m kind = lookahead.kind;[67;9Hmatch(kind);[68;9H[33mconst[m t1 = term();[70;5H[36m}[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[76;7Hmatch([31m'-'[m);[77;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[80;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m[85;140H69,0-1[8CTop[69;1H[?25h[?1000l[?1002h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m (check([31m'INT'[m)) [36m{[m[83;7H[33mconst[m value = parseInt(lookahead.lexeme);[84;7Hmatch([31m'INT'[m);[85;1H[K[85;140H69,0-1[9C5%[66;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7H[33mreturn[m value;
    [36m}[m
    [33melse[m [36m{[m[85;140H[K[85;140H69,0-1[8C10%[63;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7Hmatch([31m'('[m);[83;7H[33mconst[m value = expr();[84;7Hmatch([31m')'[m);[85;140H[K[85;140H69,0-1[8C15%[60;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7H[33mreturn[m value;
    [36m}
[m  [36m}[m[85;140H[K[85;140H69,0-1[8C20%[57;1H[?25h[?25l[85;141H1,19 [49;19H[?25h[?25l[85;141H8,4-11[56;11H[?25h[?25l[85;141H9,0-1 [57;1H[?25h[?25l[85;130H^I[57;1H[85;130H  [57;1H[?25h[?25l[85;130Ha[57;1H[85;130H [57;1H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H69,1[10C20%[57;1H[?25h[?25l[85;143H2-9[57;9H[?25h[?25lt[85;143H3-10[57;10H[?25h[?25l[85;143H4-11[57;11H[?25h[?25l*[85;143H5-12[57;12H[?25h[?25l*[85;143H6-13[57;13H[?25h[?25l[57;12H[K[85;143H5-12[57;12H[?25h[?25l=[85;143H6-13[57;13H[?25h[?25l[57;12H[K[85;143H5-12[57;12H[?25h[?25l[57;11H[K[85;143H4-11[57;11H[?25h[?25l[85;143H3-10[57;10H[?25h[?25l[57;9H[K[85;143H2-9 [57;9H[?25h[?25l[85;143H1  [57;1H[?25h[?25l[85;143H2-9[57;9H[?25h[?25lt[85;143H3-10[57;10H[?25h[?25l[85;143H4-11[57;11H[?25h[?25l*[85;143H5-12[57;12H[?25h[?25l*[85;143H6-13[57;13H[?25h[?25l[85;143H7-14[57;14H[?25h[?25lt[85;143H8-15[57;15H[?25h[?25l1[85;143H9-16[57;16H[?25h[?25l;[85;143H10-17[57;17H[?25h[85;1H[K[57;16H[?25l[85;130H^[[57;16H[85;130H  [57;17H[85;140H69,9-16[7C20%[57;16H[?25h[?25l[85;130H:[57;16H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 143L, 2531C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs data.txt [K[K[K[K[K[K[K[K[Kexpn-data.txt 
[ [33m-2[39m, [33m3[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt clear[Kvim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 143L, 2531C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7Ht += (kind === [31m'+'[m) ? t1 : -t1;
    [36m}[m
    [33mwhile[m (check([31m'**'[m))[36m{[m[66;9H[33mconst[m kind = lookahead.kind;[67;9Hmatch(kind);[68;9H[33mconst[m t1 = term();[69;9Ht ** t1;
    [36m}[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[76;7Hmatch([31m'-'[m);[77;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[80;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m[85;140H69,9-16[7CTop[69;16H[?25h[?1000l[?1002h[?25l[85;141H5,21  [65;21H[?25h[?25l[46m([4C)[m[85;144H2[65;22H[?25h[?25l([4C)[85;141H9,9-16[69;16H[?25h[?25l[85;141H6,2-9 [66;9H[?25h[?25l[85;141H9,9-16[69;16H[?25h[?25l[85;130H2[69;17H[7m;[m[85;1H[1m-- VISUAL --[m[85;13H[K[85;130H2[69;17H[85;140H69,10-17      Top[69;17H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[68;19H [7mterm(); 
        t ** t1[m[85;141H8,12-19[68;19H[?25h[?25l[?25h[?25l=[7m [m[85;144H1-18[68;18H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l [7m=[m[85;144H0-17[68;17H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l1[7m [m[85;143H9-16 [68;16H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25lt[7m1[m[85;143H8-15[68;15H[?25h[?25l[?25h[?25l[?25h[?25l [7mt[m[85;143H7-14[68;14H[?25h[?25l[?25h[?25l[?25h[?25l[1C[7m [m[85;143H6-13[68;13H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[1C[7m[33mt[m[85;143H5-12[68;12H[?25h[?25l[?25h[?25l[85;130H3[67;12Hc[7mh(kind); 
        [m[7m[33mcons[m[85;141H7[67;12H[?25h[?25l[?25h[?25l[?25h[?25lt[7mc[m[85;143H4-11[67;11H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25la[7mt[m[85;143H3-10[67;10H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25lm[7ma[m[85;143H2-9 [67;9H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[85;130H4[66;9H[1C[7m[33monst[m[7m kind = lookahead.kind; 
        m[m[85;141H6[66;9H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[85;130H [59;36H[59;11H[46m([24C)[m[66;10H[33monst[m kind = lookahead.kind;[66;37H[K[67;1H        match(kind);[67;21H[K[68;1H        [33mconst[m t1 = term();[68;27H[K[69;1H        t ** t1;[85;1H[K[85;140H59,36[9CTop[59;36H[?25h[?25l[85;130Ha[59;36H[85;130H [59;37H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H59,37[9CTop[59;37H[?25h[?25l[85;144H6[59;36H[?25h[?25l[31m[46m'[m[31m) {'[m[31m[46m)[m[85;144H7[59;37H[?25h[?25l)[46m [m[36m{[m[59;39H[K[59;36H[46m)[m [85;144H6[59;36H[?25h[?25l[46m [m) [36m{[m [46m)[m[85;144H7[59;37H[?25h[?25l[36m[46m\[m) [36m{\[m[46m)[m[85;144H8[59;38H[?25h[?25l[36m[46m\[m) [36m{\[m[46m)[m[85;144H9[59;39H[?25h[?25l[46m [m) [36m{[m [46m)[m[85;143H40[59;40H[?25h[?25l)[46m [m[36m{[m[59;42H[K[59;39H[46m)[m [85;143H39[59;39H[?25h[?25l)[46m [m[36m{[m[59;41H[K[59;38H[46m)[m [85;144H8[59;38H[?25h[?25l)[46m [m[36m{[m[59;40H[K[59;37H[46m)[m [85;144H7[59;37H[?25h[?25l[60;84r[60;1H[L[1;85r[59;37H[K[60;5H) [36m{[m[85;140H[K[85;140H60,5[10CTop[60;5H[46m)[?25h[?25l|[m) [36m{[m|[46m)[m[85;143H6[60;6H[?25h[?25l[46m|[m) [36m{[m|[46m)[m[85;143H7[60;7H[?25h[?25l[61;84r[61;1H[L[1;85r[60;7H[K[61;5H) [36m{[m[85;140H[K[85;140H61,5[10CTop[61;5H[46m)[?25h[?25l[m)[46m [m[36m{[m[61;7H[K[61;4H[46m)[m [85;143H4[61;4H[?25h[?25l)[46m [m[36m{[m[61;6H[K[61;3H[46m)[m [85;143H3[61;3H[?25h[?25l)[46m [m[36m{[m[61;5H[K[61;2H[46m)[m [85;143H2[61;2H[?25h[?25l)[46m [m[36m{[m[61;4H[K[61;1H[46m)[m [85;143H1[61;1H[?25h[?25l[60;84r[84;1H
[1;85r[60;1H    ||) [36m{[m
[46m [m[85;140H[K[85;140H60,7[10CTop[60;7H[46m)[m
 [60;7H[?25h[?25l)[46m [m[36m{[m[60;9H[K[60;6H[46m)[m [85;143H6[60;6H[?25h[?25l)[46m [m[36m{[m[60;8H[K[60;5H[46m)[m [85;143H5[60;5H[?25h[?25l)[46m [m[36m{[m[60;7H[K[60;4H[46m)[m [85;143H4[60;4H[?25h[?25l)[46m [m[36m{[m[60;6H[K[60;3H[46m)[m [85;143H3[60;3H[?25h[?25l)[46m [m[36m{[m[60;5H[K[60;2H[46m)[m [85;143H2[60;2H[?25h[?25l)[46m [m[36m{[m[60;4H[K[60;1H[46m)[m [85;143H1[60;1H[?25h[?25l[59;84r[84;1H
[1;85r[59;1H    [33mwhile[m [46m([mcheck([31m'+'[m) || check([31m'-'[m) ) [36m{[m
[46m [m[84;3H[36mfunction[m factor() [36m{[m[85;140H[K[85;140H59,37[9CTop[59;37H[46m)[m
 [59;37H[?25h[?25l)[46m [m[36m{[m[59;39H[K[59;36H[46m)[m [85;144H6[59;36H[?25h[?25l[46m [m) [36m{[m [46m)[m[85;144H7[59;37H[?25h[?25l[46m|[m) [36m{[m|[46m)[m[85;144H8[59;38H[?25h[?25l[46m|[m) [36m{[m|[46m)[m[85;144H9[59;39H[?25h[?25l[46m [m) [36m{[m [46m)[m[85;143H40[59;40H[?25h[?25l[46mc[m) [36m{[mc[46m)[m[85;144H1[59;41H[?25h[?25l[46mh[m) [36m{[mh[46m)[m[85;144H2[59;42H[?25h[?25l[46me[m) [36m{[me[46m)[m[85;144H3[59;43H[?25h[?25l[46mc[m) [36m{[mc[46m)[m[85;144H4[59;44H[?25h[?25l[46mk[m) [36m{[mk[46m)[m[85;144H5[59;45H[?25h[?25l[46m([m) [36m{[m[59;11H([34C[46m)[m[85;144H6[59;46H[?25h[?25l[31m[46m'[m[31m) {'[m[31m[46m)[m[85;144H7[59;47H[?25h[?25l[31m[46m*[m[31m) {*[m[31m[46m)[m[85;144H8[59;48H[?25h[?25l[31m[46m*[m[31m) {*[m[31m[46m)[m[85;144H9[59;49H[?25h[?25l[31m[46m:[m[31m) {:[m[31m[46m)[m[85;143H50[59;50H[?25h[?25l[31m)[m[31m[46m [m[31m{[m[59;52H[K[59;49H[31m[46m)[m[31m [m[85;143H49[59;49H[?25h[?25l[31m[46m;[m[31m) {;[m[31m[46m)[m[85;143H50[59;50H[?25h[?25l[31m)[m[31m[46m [m[31m{[m[59;52H[K[59;49H[31m[46m)[m[31m [m[85;143H49[59;49H[?25h[?25l[31m[46m'[m) [36m{[m[31m'[m[46m)[m[85;143H50[59;50H[?25h[?25l[1C) [36m{[m[59;11H[46m([m[33C([4C)[46m)[m[85;144H1[59;51H[?25h[?25l[59;11H([39C)[85;140H60,35[60;35H[?25h[?25l[85;141H1,22[61;22H[?25h[?25l[85;141H2,25[62;25H[?25h[?25l[85;141H3,38[63;38H[?25h[?25l[59;53H[36m[46m{[64;5H}[m[85;141H4,6 [64;6H[?25h[?25l[59;53H[36m{[64;5H}[m[65;24H[36m[46m{[70;5H}[m[85;141H5,25[65;25H[?25h[?25l[59;53H[36m[46m{[64;5H}[m[65;24H[36m{[70;5H}[m[85;141H4,6 [64;6H[?25h[?25l[59;53H[36m{[64;5H}[m[65;24H[36m[46m{[70;5H}[m[85;141H5,25[65;25H[?25h[?25l[59;53H[36m[46m{[64;5H}[m[65;24H[36m{[70;5H}[m[85;141H4,6 [64;6H[?25h[?25la[59;53H[36m{[64;5H}[m[85;143H7[64;7H[?25h[?25l[64;6H[K[59;53H[36m[46m{[64;5H}[m[85;143H6[64;6H[?25h[?25l[65;84r[65;1H[L[1;85r[85;140H[K[85;140H65,4-11[7CTop[59;53H[36m{[64;5H}[65;11H[?25h[?25l[m[85;143H3-10[65;10H[?25h[?25l[85;143H2-9 [65;9H[?25h[?25l[85;143H1  [65;1H[?25h[?25l[64;84r[84;1H
[1;85r[64;5H[36m}[84;3Hfunction[m factor() [36m{[m[85;140H[K[85;140H64,6[10CTop[59;53H[36m[46m{[64;5H}[?25h[?25l[65;84r[m[65;1H[L[1;85r[85;140H[K[85;140H65,4-11[7CTop[59;53H[36m{[64;5H}[65;11H[?25h[?25l[m[85;143H3-10[65;10H[?25h[?25l[85;143H2-9 [65;9H[?25h[?25l[85;143H1  [65;1H[?25h[?25l[85;143H2[65;2H[?25h[?25l[85;143H3[65;3H[?25h[?25l[85;143H4[65;4H[?25h[?25l[85;143H5[65;5H[?25h[?25l/[85;143H6[65;6H[?25h[?25l[34m/*
    while (check('**')){
        const kind = lookahead.kind;
        match(kind);
        const t1 = term();
        t ** t1;
    }
    return t;
  }

  function term() {
    if (check('-')) {
      match('-');
      return - term();
    }
    else {
      return factor();
    }
  }[m[85;143H7[65;7H[?25h[?25l[85;141H6[66;7H[?25h[?25l[85;141H7,1[67;1H[?25h[?25l[85;141H8[68;1H[?25h[?25l[85;141H9[69;1H[?25h[?25l[85;140H70[70;1H[?25h[?25l[66;24H[34m[46m{[71;5H}[m[85;141H1,6[71;6H[?25h[?25l[66;24H[34m{[71;5H}[m[85;141H2,7[72;7H[?25h[?25l[66;24H[34m[46m{[71;5H}[m[85;141H1,6[71;6H[?25h[?25l[72;84r[72;1H[L[1;85r[72;1H[34m    [m[85;140H[K[85;140H72,5[10CTop[66;24H[34m{[71;5H}
    [?25h[?25l*[m[85;143H6[72;6H[?25h[?25l[34m/[m
    [33mreturn[m t;
  [36m}[m

  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m
      match([31m'-'[m);
      [33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m
      [33mreturn[m factor();
    [36m}[m
  [36m}[m[85;143H7[72;7H[?25h[?25l[66;24H[34m[46m{[71;5H}[m[85;141H1,6[71;6H[?25h[?25l[66;24H[34m{[71;5H}[m[85;141H0,1[70;1H[?25h[?25l[85;140H69[69;1H[?25h[?25l[85;141H8[68;1H[?25h[?25l[85;141H7[67;1H[?25h[?25l[85;141H6,7[66;7H[?25h[?25l[85;141H5[65;7H[?25h[?25l[59;53H[36m[46m{[64;5H}[m[85;141H4,6[64;6H[?25h[?25l[59;53H[36m{[64;5H}[m[85;141H3,7[63;7H[?25h[?25l[85;141H2[62;7H[?25h[?25l[85;143H8[62;8H[?25h[?25l[85;143H9[62;9H[?25h[?25l[85;143H10[62;10H[?25h[?25l[85;144H1[62;11H[?25h[?25l[85;144H2[62;12H[?25h[?25l[85;144H3[62;13H[?25h[?25l[85;144H4[62;14H[?25h[?25l[85;144H5[62;15H[?25h[?25l[85;144H6[62;16H[?25h[?25l[85;144H7[62;17H[?25h[?25l[85;144H8[62;18H[?25h[?25l[85;144H9[62;19H[?25h[?25l[85;143H20[62;20H[?25h[?25l[85;144H1[62;21H[?25h[?25lm[46m()[m[85;144H2[62;22H[?25h[?25l[85;144H3[62;23H[?25h[?25l[85;144H4[62;24H[?25h[?25l()[85;144H5[62;25H[?25h[?25la[85;144H6[62;26H[?25h[?25l[62;25H[K[85;144H5[62;25H[?25h[?25l[63;84r[63;1H[L[1;85r[85;140H[K[85;140H63,6-13[7CTop[63;13H[?25h[?25l[85;143H5-12[63;12H[?25h[?25l[85;143H4-11[63;11H[?25h[?25l[85;143H3-10[63;10H[?25h[?25l[85;143H2-9 [63;9H[?25h[?25l[85;143H1  [63;1H[?25h[?25l[85;143H2[63;2H[?25h[?25l[85;143H3[63;3H[?25h[?25l[85;143H4[63;4H[?25h[?25l[85;143H5[63;5H[?25h[?25l[85;143H6[63;6H[?25h[?25l[85;143H7[63;7H[?25h[?25li[85;143H8[63;8H[?25h[?25l[33mif[m[85;143H9[63;9H[?25h[?25l[85;143H10[63;10H[?25h[?25l([85;144H1[63;11H[?25h[?25lk[85;144H2[63;12H[?25h[?25li[85;144H3[63;13H[?25h[?25ln[85;144H4[63;14H[?25h[?25ld[85;144H5[63;15H[?25h[?25l[85;144H6[63;16H[?25h[?25l=[85;144H7[63;17H[?25h[?25l=[85;144H8[63;18H[?25h[?25l=[85;144H9[63;19H[?25h[?25l[85;143H20[63;20H[?25h[?25l[31m'[m[85;144H1[63;21H[?25h[?25l[31m*[m[85;144H2[63;22H[?25h[?25l[31m*[m[85;144H3[63;23H[?25h[?25l[31m'[m[85;144H4[63;24H[?25h[?25l)[63;10H[46m([13C)[m[85;144H5[63;25H[?25h[?25l[36m{[m[63;10H([13C)[36m[46m{[65;5H}[m[85;144H6[63;26H[?25h[?25l[36m{[m[64;12H[46m([12C)[m
    [36m}[m[85;141H4[64;26H[?25h[?25l[63;25H[36m[46m{[m[64;12H([12C)
    [36m[46m}[m[85;141H5,6 [65;6H[?25h[?25l[63;25H[36m{[m[64;12H[46m([12C)[m
    [36m}[m[85;141H4,26[64;26H[?25h[?25l[64;12H([12C)[85;144H7[64;27H[?25h[?25l[85;144H8[64;28H[?25h[?25l[63;25H[36m[46m{[65;5H}[m[85;141H3,26[63;26H[?25h[?25l[64;84r[64;1H[L[1;85r[65;5H[46m [m
    [36m}[m[85;140H[K[85;140H64,8-15[7CTop[63;25H[36m{[m[65;5H [64;15H[?25h[?25l[64;7H[36m}[m[63;25H[36m[46m{[64;7H}[m[85;144H   [64;8H[?25h[?25l[64;7H[K[63;25H[36m{[m[85;143H7[64;7H[?25h[?25l[85;143H8[64;8H[?25h[?25l[85;143H9[64;9H[?25h[?25l[85;143H8[64;8H[?25h[?25l[85;143H7[64;7H[?25h[?25l[85;141H3[63;7H[?25h[?25l[33mif[m (kind === [31m'**'[m)[36m{[m[63;25H[K[85;143H6[63;6H[?25h[?25l [33mif[m (kind === [31m'**'[m)[36m{[m[85;143H7[63;7H[?25h[?25l[85;141H4[64;7H[?25h[?25l[85;143H8[64;8H[?25h[?25l[85;143H9[64;9H[?25h[?25lt[85;143H10[64;10H[?25h[?25l[85;144H1[64;11H[?25h[?25l*[85;144H2[64;12H[?25h[?25l*[85;144H3[64;13H[?25h[?25l[85;144H4[64;14H[?25h[?25lt[85;144H5[64;15H[?25h[?25l1[85;144H6[64;16H[?25h[?25l[65;84r[65;1H[L[1;85r[85;140H[K[85;140H65,8-15[7CTop[65;15H[?25h[?25l[65;7H[36m}[m[63;25H[36m[46m{[65;7H}[m[85;144H   [65;8H[?25h[?25le[63;25H[36m{[65;7H}[m[85;143H9[65;9H[?25h[?25ll[85;143H10[65;10H[?25h[?25ls[85;144H1[65;11H[?25h[?25l[33melse[m[85;144H2[65;12H[?25h[?25l[36m{[m[36m[46m{[67;5H}[m[85;144H3[65;13H[?25h[?25l[36m{[m[66;12H[46m([12C)[m
    [36m}[m[85;141H6[66;13H[?25h[?25l[85;144H2[66;12H[?25h[?25l([12C)[85;144H1[66;11H[?25h[?25l[85;144H0[66;10H[?25h[?25l[85;143H9 [66;9H[?25h[?25l[85;143H8[66;8H[?25h[?25l[85;143H7[66;7H[?25h[?25l t += (kind === [31m'+'[m) ? t1 : -t1;[85;143H8[66;8H[?25h[?25l t += (kind === [31m'+'[m) ? t1 : -t1;[85;143H9[66;9H[?25h[?25l[65;12H[36m[46m{[67;5H}[m[85;141H7,6[67;6H[?25h[?25l[65;12H[36m{[67;5H}[m[85;141H6,9[66;9H[?25h[?25l[85;143H10[66;10H[?25h[?25l[85;144H1[66;11H[?25h[?25l[85;144H2[66;12H[?25h[?25l[85;144H3[66;13H[?25h[?25l [46m([12C)[m[85;144H4[66;14H[?25h[?25l[85;144H5[66;15H[?25h[?25l([12C)[85;144H6[66;16H[?25h[?25l[85;144H7[66;17H[?25h[?25l[85;144H8[66;18H[?25h[?25l[85;144H9[66;19H[?25h[?25l[85;143H20[66;20H[?25h[?25l[85;144H1[66;21H[?25h[?25l[85;144H2[66;22H[?25h[?25l[85;144H3[66;23H[?25h[?25l[85;144H4[66;24H[?25h[?25l[85;144H5[66;25H[?25h[?25l[85;144H6[66;26H[?25h[?25l[66;14H[46m([12C)[m[85;144H7[66;27H[?25h[?25l[85;144H8[66;28H[?25h[?25l[66;14H([12C)[85;144H9[66;29H[?25h[?25l[85;143H30[66;30H[?25h[?25l[85;144H1[66;31H[?25h[?25l[85;144H2[66;32H[?25h[?25l[85;144H3[66;33H[?25h[?25l[85;144H4[66;34H[?25h[?25l[85;144H5[66;35H[?25h[?25l[85;144H6[66;36H[?25h[?25l[85;144H7[66;37H[?25h[?25l[85;144H8[66;38H[?25h[?25l[85;144H9[66;39H[?25h[?25l[85;143H40[66;40H[?25h[?25l[67;84r[67;1H[L[1;85r[85;140H[K[85;140H67,8-15[7CTop[67;15H[?25h[?25l[67;7H[36m}[m[65;12H[36m[46m{[67;7H}[m[85;144H   [67;8H[?25h[85;1H[K[67;7H[?25l[85;130H^[[67;7H[85;130H  [67;8H[85;140H67,7[10CTop[67;7H[?25h[?25l[85;130H:[67;7H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 149L, 2625C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clearvim calc.mjs [12@./calc.mjs expn-data.txt[C
[ [33m-2[39m, [33m3[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt clear[Kvim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 149L, 2625C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7H[33mif[m (kind === [31m'**'[m)[36m{[m[64;9Ht ** t1[65;7H[36m}[m[33melse[m[36m[46m{[m[66;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[67;7H[36m[46m}[m
    [36m}[m
    [34m/*
    while (check('**')){
        const kind = lookahead.kind;
        match(kind);
        const t1 = term();
        t ** t1;
    }
    */[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[82;7Hmatch([31m'-'[m);[83;7H[33mreturn[m - term();
    [36m}[m[85;140H67,7[10CTop[67;7H[?25h[?1000l[?1002h[?25l[85;130H~@k[67;7H[85;130H   [66;7H[65;12H[36m{[67;7H}[m[85;141H6[66;7H[?25h[?25l[85;130H~@k[66;7H[85;130H   [67;7H[65;12H[36m[46m{[67;7H}[m[85;141H7[67;7H[?25h[?25l[85;130H^[[67;7H[85;130H  [67;7H[85;130H^[[67;7H[85;130H  [67;7H[?25h[?25l[85;130H:[67;7H[85;1H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs [12@./calc.mjs expn-data.txt[C
[ [33m-2[39m, [33m3[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C[12@./calc.mjs expn-data.txt[C[12Pvim calc.mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 149L, 2625C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7H[33mif[m (kind === [31m'**'[m)[36m{[m[64;9Ht ** t1[65;7H[36m}[m[33melse[m[36m[46m{[m[66;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[67;7H[36m[46m}[m
    [36m}[m
    [34m/*
    while (check('**')){
        const kind = lookahead.kind;
        match(kind);
        const t1 = term();
        t ** t1;
    }
    */[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[82;7Hmatch([31m'-'[m);[83;7H[33mreturn[m - term();
    [36m}[m[85;140H67,7[10CTop[67;7H[?25h[?1000l[?1002h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33melse[m [36m{[m[83;7H[33mreturn[m factor();
    [36m}[m[85;1H[K[85;140H67,7[11C4%[64;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[36m}

[m  [36mfunction[m factor() [36m{[m[85;140H[K[85;140H67,7[11C9%[61;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m (check([31m'INT'[m)) [36m{[m[83;7H[33mconst[m value = parseInt(lookahead.lexeme);[84;7Hmatch([31m'INT'[m);[85;140H[K[85;140H67,7[10C13%[58;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7H[33mreturn[m value;
    [36m}[m
    [33melse[m [36m{[m[85;140H[K[85;140H67,7[10C18%[55;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7Hmatch([31m'('[m);[83;7H[33mconst[m value = expr();[84;7Hmatch([31m')'[m);[85;140H[K[85;140H67,7[10C23%[52;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7H[33mreturn[m value;
    [36m}
[m  [36m}[m[85;140H[K[85;140H67,7[10C27%[49;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36m}[m[85;140H[K[85;140H67,7[10C32%[46;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36mfunction[m scan(text) [36m{[m
  [33mconst[m tokens = [36m[][m;
  [33mwhile[m (text.length > 0) [36m{[m[85;140H[K[85;140H67,7[10C36%[43;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36mlet[m m;
    [33mif[m ((m = text.match(/^[36m\[ms+/))) [36m{
[m    [36m}[m[85;140H[K[85;140H67,7[10C41%[40;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33melse[m [33mif[m ((m = text.match(/^[36m\[md+/))) [36m{[m[83;7Htokens.push([33mnew[m Token([31m'INT'[m, m[36m[[m0[36m][m));
    [36m}[m[33melse[m [33mif[m(m = text.match(/^[36m\[m*[36m\[m*/))[36m{[m[85;140H[K[85;140H67,7[10C46%[37;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m
    [33melse[m [36m{[m[85;140H[K[85;140H67,7[10C50%[34;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7Hm = text.match(/^./);[83;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m[85;140H[K[85;140H67,7[10C55%[31;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5Htext = text.substring(m[36m[[m0[36m][m.length);
  [36m}[m
  [33mreturn[m tokens;[85;140H[K[85;140H67,7[10C60%[28;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36m}[m[85;140H[K[85;140H67,7[10C64%[25;7H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m[85;140H[K[85;140H67,7[10C60%[28;7H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33melse[m [36m{[m[2;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[3;7Hprocess.exit();[85;140H[K[85;140H67,7[10C55%[31;7H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33mif[m (check(kind)) [36m{[m[2;7Hlookahead = nextToken();
    [36m}[m[85;140H[K[85;140H67,7[10C50%[34;7H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;3H[36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m[85;140H[K[85;140H67,7[10C46%[37;7H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;[85;140H[K[85;140H67,7[10C41%[40;7H[?25h[?25l[32;53H[36m[46m{[m[38;12H[36m{[40;7H}[m
    [36m[46m}[m[85;140H59,53[32;53H[?25h[?25l[85;130H~@k[32;53H[85;130H   [33;34H[32;53H[36m{[41;5H}[m[85;140H60,34[33;34H[?25h[?25l[85;130H~@k[33;34H[85;130H   [34;21H[85;141H1,21[34;21H[?25h[?25l[85;130H^M[34;21H[85;130H  [35;7H[85;141H2,7 [35;7H[?25h[?25l[85;130H~@k[35;7H[85;130H   [34;7H[85;141H1[34;7H[?25h[?25l[85;130H~@k[34;7H[85;130H   [34;8H[85;143H8[34;8H[?25h[?25l[85;130H~@k[34;8H[85;130H   [34;9H[85;143H9[34;9H[?25h[?25l[85;130H~@k[34;9H[85;130H   [34;10H[85;143H10[34;10H[?25h[?25l[85;130H~@k[34;10H[85;130H   [34;11H[85;144H1[34;11H[?25h[?25l[85;130H~@k[34;11H[85;130H   [34;12H[46m([mkind[46m)[m[85;144H2[34;12H[?25h[?25l[85;130H~@k[34;12H[85;130H   [34;13H(kind)[85;144H3[34;13H[?25h[?25l[85;130H~@k[34;13H[85;130H   [34;14H[85;144H4[34;14H[?25h[?25l[85;130H~@k[34;14H[85;130H   [34;15H[85;144H5[34;15H[?25h[?25l[85;130H~@k[34;15H[85;130H   [34;16H[85;144H6[34;16H[?25h[?25l[85;130H~@k[34;16H[85;130H   [34;17H[46m([mkind[46m)[m[85;144H7[34;17H[?25h[?25l[85;130H~@k[34;17H[85;130H   [34;18H(kind)[85;144H8[34;18H[?25h[?25l[85;130H~@k[34;18H[85;130H   [34;19H[85;144H9[34;19H[?25h[?25l[85;130H~@k[34;19H[85;130H   [34;20H[85;143H20[34;20H[?25h[?25l[85;130H~@k[34;20H[85;130H   [34;21H[85;144H1[34;21H[?25h[?25l[85;130H~@k[34;21H[85;130H   [34;21H[?25h[?25l[85;130H~@k[34;21H[85;130H   [34;21H[?25h[?25l[85;130H~@k[34;21H[85;130H   [34;21H[?25h[?25l[85;130H~@k[34;21H[85;130H   [34;21H[?25h[?25l[85;130H~@k[34;21H[85;130H   [34;21H[?25h[?25l[85;130H~@k[34;21H[85;130H   [34;21H[?25h[?25l[85;130H~@k[34;21H[85;130H   [34;21H[?25h[?25l[85;130H~@k[34;21H[85;130H   [34;21H[?25h[?25l[85;130H~@k[34;21H[85;130H   [34;21H[?25h[?25l[85;130Ha[34;21H[85;130H [34;22H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H61,22[9C41%[34;22H[?25h[?25l[85;144H1[34;21H[?25h[?25l[85;144H0[34;20H[?25h[?25l[85;143H19[34;19H[?25h[?25l[35;84r[35;1H[L[1;85r[85;140H[K[85;140H62,6-13[7C40%[35;13H[?25h[?25l[85;143H5-12[35;12H[?25h[?25l[85;143H4-11[35;11H[?25h[?25l[85;143H3-10[35;10H[?25h[?25l[85;143H2-9 [35;9H[?25h[?25l[85;143H1  [35;1H[?25h[?25l[85;143H2[35;2H[?25h[?25l[85;143H3[35;3H[?25h[?25l[85;143H4[35;4H[?25h[?25l[85;143H5[35;5H[?25h[?25l[85;143H6[35;6H[?25h[?25l[85;143H7[35;7H[?25h[?25lp[85;143H8[35;8H[?25h[?25lr[85;143H9[35;9H[?25h[?25li[85;143H10[35;10H[?25h[?25ln[85;144H1[35;11H[?25h[?25lt[85;144H2[35;12H[?25h[?25l[35;11H[K[85;144H1[35;11H[?25h[?25l[35;10H[K[85;144H0[35;10H[?25h[?25l[35;9H[K[85;143H9 [35;9H[?25h[?25l[35;8H[K[85;143H8[35;8H[?25h[?25l[35;7H[K[85;143H7[35;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36m}[m
    [33melse[m [33mif[m ((m = text.match(/^[36m\[md+/))) [36m{[m[84;7Htokens.push([33mnew[m Token([31m'INT'[m, m[36m[[m0[36m][m));[85;140H[K[85;140H62,7[10C45%[32;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36m}[m[33melse[m [33mif[m(m = text.match(/^[36m\[m*[36m\[m*/))[36m{[m[83;9Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m[85;140H[K[85;140H62,7[10C50%[29;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33melse[m [36m{[m[83;7Hm = text.match(/^./);[84;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));[85;140H[K[85;140H62,7[10C54%[26;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36m}[m
    text = text.substring(m[36m[[m0[36m][m.length);
  [36m}[m[85;140H[K[85;140H62,7[10C59%[23;7H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mreturn[m tokens;
[36m}[m[85;140H[K[85;140H62,7[10C63%[20;7H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m[85;140H[K[85;140H62,7[10C59%[23;7H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33melse[m [36m{[m[2;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[3;7Hprocess.exit();[85;140H[K[85;140H62,7[10C54%[26;7H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33mif[m (check(kind)) [36m{[m[2;7Hlookahead = nextToken();
    [36m}[m[85;140H[K[85;140H62,7[10C50%[29;7H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;3H[36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m[85;140H[K[85;140H62,7[10C45%[32;7H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;[85;140H[K[85;140H62,7[10C40%[35;7H[?25h[?25lc[85;143H8[35;8H[?25h[?25lo[85;143H9[35;9H[?25h[?25ln[85;143H10[35;10H[?25h[?25ls[85;144H1[35;11H[?25h[?25lo[85;144H2[35;12H[?25h[?25ll[85;144H3[35;13H[?25h[?25le[85;144H4[35;14H[?25h[?25l.[85;144H5[35;15H[?25h[?25ll[85;144H6[35;16H[?25h[?25lo[85;144H7[35;17H[?25h[?25lg[85;144H8[35;18H[?25h[?25l([85;144H9[35;19H[?25h[?25lk[85;143H20[35;20H[?25h[?25li[85;144H1[35;21H[?25h[?25ln[85;144H2[35;22H[?25h[?25ld[85;144H3[35;23H[?25h[?25l)[46m([mkind[46m)[m[85;144H4[35;24H[?25h[85;1H[K[35;23H[?25l[85;130H^[[35;23H[85;130H  [35;24H[85;140H62,23[9C40%[35;23H[?25h[?25l[85;130Ha[35;23H[85;130H [35;24H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H62,24[9C40%[35;24H[?25h[?25l(kind)[36;22H[46m()[m[85;141H3[36;24H[?25h[?25l()[37;10H[46m([13C)[m[85;141H4[37;24H[?25h[?25l[37;10H([13C)[85;141H5,16[38;16H[?25h[?25l;[85;144H7[38;17H[?25h[?25l[85;141H4[37;17H[?25h[?25l[85;141H3[36;17H[?25h[?25l[85;144H8[36;18H[?25h[?25l[35;18H[46m([mkind[46m)[m[85;141H2[35;18H[?25h[?25l[85;144H9[35;19H[?25h[?25l(kind)[85;143H20[35;20H[?25h[?25l[85;144H1[35;21H[?25h[?25l[85;144H2[35;22H[?25h[?25l[46m([mkind[46m)[m[85;144H3[35;23H[?25h[?25l[85;144H4[35;24H[?25h[?25l;[35;18H(kind)[85;144H5[35;25H[?25h[85;1H[K[35;24H[?25l[85;130H^[[35;24H[85;130H  [35;25H[85;140H62,24[9C40%[35;24H[?25h[?25l[85;130H:[35;24H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 150L, 2648C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs [12@./calc.mjs expn-data.txt[C
**
**
+
**
+
+
**
+
[ [33m-2[39m, [33m3[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C[12@./calc.mjs expn-data.txt[C
**
**
+
**
+
+
**
+
[ [33m-2[39m, [33m3[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C[12@./calc.mjs expn-data.txt[C[12Pvim calc.mjs[C[12@./calc.mjs expn-data.txt[C[12Pvim calc.mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 150L, 2648C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7Hconsole.log(kind);[63;7H[33mconst[m t1 = term();[64;7H[33mif[m (kind === [31m'**'[m)[36m{[m[65;9Ht ** t1;[66;7H[36m}[m[33melse[m[36m{[m[67;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[68;7H[36m}
[m    [36m}[m
    [34m/*
    while (check('**')){
        const kind = lookahead.kind;
        match(kind);
        const t1 = term();
        t ** t1;
    }
    */[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[83;7Hmatch([31m'-'[m);[84;7H[33mreturn[m - term();[85;140H62,24[9CTop[62;24H[?25h[?1000l[?1002h[?25l[85;130H~@k[62;24H[85;130H   [63;24H[85;141H3[63;24H[?25h[?25l[85;130H~@k[63;24H[85;130H   [64;24H[64;10H[46m([13C)[m[85;141H4[64;24H[?25h[?25l[85;130H~@k[64;24H[85;130H   [65;16H[64;10H([13C)[85;141H5,16[65;16H[?25h[?25l[85;130H~@k[65;16H[85;130H   [66;12H[36m[46m{[68;7H}[m[85;141H6,12[66;12H[?25h[?25l[85;130H~@k[66;12H[85;130H   [65;16H[66;12H[36m{[68;7H}[m[85;141H5,16[65;16H[?25h[?25l[85;130H~@k[65;16H[85;130H   [64;24H[64;10H[46m([13C)[m[85;141H4,24[64;24H[?25h[?25l[85;130H~@k[64;24H[85;130H   [65;16H[64;10H([13C)[85;141H5,16[65;16H[?25h[?25l[85;130H~@k[65;16H[85;130H   [64;24H[64;10H[46m([13C)[m[85;141H4,24[64;24H[?25h[?25l[85;130H~@k[64;24H[85;130H   [63;24H[64;10H([13C)[85;141H3[63;24H[?25h[?25l[85;130H~@k[63;24H[85;130H   [62;24H[85;141H2[62;24H[?25h[?25l[85;130Ha[62;24H[85;130H [62;25H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H62,25[9CTop[62;25H[?25h[85;1H[K[62;24H[?25l[85;130H^[[62;24H[85;130H  [62;25H[85;140H62,24[9CTop[62;24H[?25h[?25l[85;130Hd[62;24H[?25h[?25l[85;131Hd[62;24H[85;130H  [62;7H[62;84r[84;1H
[1;85r[84;5H[36m}[m[85;140H[K[85;140H62,7[10CTop[62;7H[?25h[?25l[85;130Ha[62;7H[85;130H [62;8H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H62,8[10CTop[62;8H[?25h[?25l[85;143H9[62;9H[?25h[?25l[85;141H3[63;9H[?25h[?25l [46m([13C)[m[85;143H10[63;10H[?25h[?25l([13C)[85;143H9 [63;9H[?25h[?25l[85;143H8[63;8H[?25h[?25l[85;143H7[63;7H[?25h[?25l[64;84r[64;1H[L[1;85r[63;7H[K[64;13H[33mif[m (kind === [31m'**'[m)[36m{[m[85;140H[K[85;140H64,6-13[7CTop[64;13H[?25h[?25l[33mif[m (kind === [31m'**'[m)[36m{[m[64;31H[K[85;143H5-12[64;12H[?25h[?25l[33mif[m (kind === [31m'**'[m)[36m{[m[64;30H[K[85;143H4-11[64;11H[?25h[?25l[33mif[m (kind === [31m'**'[m)[36m{[m[64;29H[K[85;143H3-10[64;10H[?25h[?25l[33mif[m (kind === [31m'**'[m)[36m{[m[64;28H[K[85;143H2-9 [64;9H[?25h[?25l[33mif[m (kind === [31m'**'[m)[36m{[m[64;20H[K[85;143H1  [64;1H[?25h[?25l [33mif[m (kind === [31m'**'[m)[36m{[m[85;143H2[64;2H[?25h[?25l [33mif[m (kind === [31m'**'[m)[36m{[m[85;143H3[64;3H[?25h[?25l [33mif[m (kind === [31m'**'[m)[36m{[m[85;143H4[64;4H[?25h[?25l [33mif[m (kind === [31m'**'[m)[36m{[m[85;143H5[64;5H[?25h[?25l [33mif[m (kind === [31m'**'[m)[36m{[m[85;143H6[64;6H[?25h[?25l [33mif[m (kind === [31m'**'[m)[36m{[m[85;143H7[64;7H[?25h[?25l[85;141H3[63;7H[?25h[?25lc[85;143H8[63;8H[?25h[?25lo[85;143H9[63;9H[?25h[?25ln[85;143H10[63;10H[?25h[?25ls[85;144H1[63;11H[?25h[?25lo[85;144H2[63;12H[?25h[?25ll[85;144H3[63;13H[?25h[?25le[85;144H4[63;14H[?25h[?25l.[85;144H5[63;15H[?25h[?25ll[85;144H6[63;16H[?25h[?25lo[85;144H7[63;17H[?25h[?25lg[85;144H8[63;18H[?25h[?25l([85;144H9[63;19H[?25h[?25l[85;141H4[64;19H[?25h[?25l[85;141H5,17[65;17H[?25h[?25l[85;144H6[65;16H[?25h[?25l[85;144H5[65;15H[?25h[?25l[85;144H4[65;14H[?25h[?25l[85;144H3[65;13H[?25h[?25l[85;144H2[65;12H[?25h[?25l[85;144H1[65;11H[?25h[?25la** t1;[85;144H2[65;12H[?25h[?25l** t1;[65;17H[K[85;144H1[65;11H[?25h[?25l=** t1;[85;144H2[65;12H[?25h[?25l ** t1;[85;144H3[65;13H[?25h[?25lt** t1;[85;144H4[65;14H[?25h[?25l ** t1;[85;144H5[65;15H[?25h[?25l[85;141H4[64;15H[?25h[?25l[85;141H3[63;15H[?25h[?25l[85;144H6[63;16H[?25h[?25l[85;144H7[63;17H[?25h[?25l[85;144H8[63;18H[?25h[?25l[85;144H9[63;19H[?25h[?25lt[85;143H20[63;20H[?25h[?25l)[46m([mt[46m)[m[85;144H1[63;21H[?25h[?25l[64;84r[64;1H[L[1;85r[85;140H[K[85;140H64,6-13[7CTop[63;18H(t)[64;13H[?25h[?25l[85;143H5-12[64;12H[?25h[?25l[85;143H4-11[64;11H[?25h[?25l[85;143H3-10[64;10H[?25h[?25l[85;143H2-9 [64;9H[?25h[?25l[85;143H1  [64;1H[?25h[?25l[85;143H2[64;2H[?25h[?25l[85;143H3[64;3H[?25h[?25l[85;143H4[64;4H[?25h[?25l[85;143H5[64;5H[?25h[?25l[85;143H6[64;6H[?25h[?25l[85;143H7[64;7H[?25h[?25lc[85;143H8[64;8H[?25h[?25lo[85;143H9[64;9H[?25h[?25ln[85;143H10[64;10H[?25h[?25ls[85;144H1[64;11H[?25h[?25lo[85;144H2[64;12H[?25h[?25ll[85;144H3[64;13H[?25h[?25le[85;144H4[64;14H[?25h[?25l.[85;144H5[64;15H[?25h[?25ll[85;144H6[64;16H[?25h[?25lo[85;144H7[64;17H[?25h[?25lg[85;144H8[64;18H[?25h[?25l([85;144H9[64;19H[?25h[?25lt[85;143H20[64;20H[?25h[?25l1[85;144H1[64;21H[?25h[?25l)[46m([mt1[46m)[m[85;144H2[64;22H[?25h[85;1H[K[64;21H[?25l[85;130H^[[64;21H[85;130H  [64;22H[85;140H64,21[9CTop[64;21H[?25h[?25l[85;130H:[64;21H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 151L, 2670C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs [12@./calc.mjs expn-data.txt[C
[33m-2[39m
[33m2[39m
[33m4[39m
[33m3[39m
[33m1[39m
[33m2[39m
[33m1[39m
[33m2[39m
[33m3[39m
[33m3[39m
[33m1[39m
[33m-2[39m
[33m1[39m
[33m2[39m
[33m-1[39m
[33m3[39m
[ [33m64[39m, [33m27[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 151L, 2670C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7Hconsole.log(t)[64;7Hconsole.log[46m([mt1[46m)[m[65;7H[33mif[m (kind === [31m'**'[m)[36m{[m[66;9Ht = t ** t1;[67;7H[36m}[m[33melse[m[36m{[m[68;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[69;7H[36m}
[m    [36m}[m
    [34m/*
    while (check('**')){
        const kind = lookahead.kind;
        match(kind);
        const t1 = term();
        t ** t1;
    }
    */[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[84;7Hmatch([31m'-'[m);[85;140H64,21[9CTop[64;21H[?25h[?1000l[?1002h[?25l[85;130H~@k[64;21H[85;130H   [65;21H[64;18H(t1)[85;141H5[65;21H[?25h[?25l[85;130H~@k[65;21H[85;130H   [66;20H[85;141H6,20[66;20H[?25h[?25l[85;130H~@k[66;20H[85;130H   [67;12H[36m[46m{[69;7H}[m[85;141H7,12[67;12H[?25h[?25l[85;130H~@k[67;12H[85;130H   [68;21H[67;12H[36m{[69;7H}[m[85;141H8,21[68;21H[?25h[?25l[85;130H~@k[68;21H[85;130H   [69;7H[67;12H[36m[46m{[69;7H}[m[85;141H9,7 [69;7H[?25h[?25l[85;130H~@k[69;7H[85;130H   [70;5H[59;53H[36m[46m{[m[67;12H[36m{[69;7H}[m
    [36m[46m}[m[85;140H70,5[70;5H[?25h[?25l[85;130H~@k[70;5H[85;130H   [71;6H[59;53H[36m{[70;5H}[m[85;141H1,6[71;6H[?25h[?25l[85;130H^[[71;6H[85;130H  [71;6H[85;130H^[[71;6H[85;130H  [71;6H[?25h[?25l[85;130Hd[71;6H[?25h[?25l[85;131Hd[71;6H[85;130H  [71;5H[71;84r[84;1H
[1;85r[71;1H    [33mwhile[m (check([31m'**'[m))[36m{[m
        [33mconst[m kind = lookahead.kind;
        match(kind);
        [33mconst[m t1 = term();
        t ** t1;
    [36m}[m
    */[84;7H[33mreturn[m - term();[85;1H[K[85;140H71,5[10CTop[71;5H[?25h[?25l[85;130Hd[71;5H[?25h[?25l[85;131Hd[71;5H[85;130H  [71;9H[71;84r[84;1H
[1;85r[84;5H[36m}[m[85;140H[K[85;140H71,2-9[8CTop[71;9H[?25h[?25l[85;130Hd[71;9H[?25h[?25l[85;131Hd[71;9H[85;130H  [71;9H[71;84r[84;1H
[1;85r[84;5H[33melse[m [36m{[m[85;140H[K[85;140H71,2-9[8CTop[71;9H[?25h[?25l[85;130Hd[71;9H[?25h[?25l[85;131Hd[71;9H[85;130H  [71;9H[71;84r[84;1H
[1;85r[84;7H[33mreturn[m factor();[85;140H[K[85;140H71,2-9[8CTop[71;9H[?25h[?25l[85;130Hd[71;9H[?25h[?25l[85;131Hd[71;9H[85;130H  [71;9H[71;84r[84;1H
[1;85r[84;5H[36m}[m[85;140H[K[85;140H71,2-9[8CTop[71;9H[?25h[?25l[85;130Hd[71;9H[?25h[?25l[85;131Hd[71;9H[85;130H  [71;5H[57;84r[84;1H
[1;85r[57;3H[36mfunction[m expr() [36m[46m{[m
    [36mlet[m t = term();[58;20H[K[59;5H[33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[61;19H[K[62;7H[33mconst[m t1 = term();[63;20H)[63;21H[K[64;7Hconsole.log(t1)[64;22H[K[65;7H[33mif[m (kind === [31m'**'[m)[36m{[m[66;7H  t = t ** t1;[67;7H[36m}[m[33melse[m[36m{[m[67;14H[K[68;7H  t += (kind === [31m'+'[m) ? t1 : -t1;
      [36m}
[m    [36m}[m[70;9H[K[71;5H[36m[46m}[m[84;3H[36m}[m[85;140H[K[85;140H71,5[10CTop[71;5H[?25h[?25l[85;130Hd[71;5H[?25h[?25l[85;131Hd[71;5H[85;130H  [71;5H[57;84r[84;1H
[1;85r[57;3H[36mfunction[m expr() [36m{
[m    [36mlet[m t = term();[58;20H[K[59;5H[33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[61;19H[K[62;7H[33mconst[m t1 = term();[63;20H)[63;21H[K[64;7Hconsole.log(t1)[64;22H[K[65;7H[33mif[m (kind === [31m'**'[m)[36m{[m[66;7H  t = t ** t1;[67;7H[36m}[m[33melse[m[36m{[m[67;14H[K[68;7H  t += (kind === [31m'+'[m) ? t1 : -t1;
      [36m}
[m    [36m}[m[85;140H[K[85;140H71,5[10CTop[71;5H[?25h[?25l[85;130H~@k[71;5H[85;130H   [70;5H[59;53H[36m[46m{[70;5H}[m[85;141H0[70;5H[?25h[?25l[85;130H~@k[70;5H[85;130H   [71;5H[59;53H[36m{[70;5H}[m[85;141H1[71;5H[?25h[?25l[85;130H~@k[71;5H[85;130H   [72;5H[85;141H2[72;5H[?25h[?25l[85;130H~@k[72;5H[85;130H   [71;5H[85;141H1[71;5H[?25h[?25l[85;130H~@k[71;5H[85;130H   [70;5H[59;53H[36m[46m{[70;5H}[m[85;141H0[70;5H[?25h[?25l[85;130H~@k[70;5H[85;130H   [71;5H[59;53H[36m{[70;5H}[m[85;141H1[71;5H[?25h[?25l[85;130H~@k[71;5H[85;130H   [71;6H[85;143H6[71;6H[?25h[?25l[85;130H~@k[71;6H[85;130H   [71;6H[?25h[?25l[85;130Ha[71;6H[85;130H [71;7H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H71,7[10CTop[71;7H[?25h[?25l[71;6H[K[85;143H6[71;6H[?25h[?25l[71;5H[K[85;143H5[71;5H[?25h[?25lc[85;143H6[71;6H[?25h[?25lo[85;143H7[71;7H[?25h[?25ln[85;143H8[71;8H[?25h[?25ls[85;143H9[71;9H[?25h[?25lo[85;143H10[71;10H[?25h[?25ll[85;144H1[71;11H[?25h[?25le[85;144H2[71;12H[?25h[?25l.[85;144H3[71;13H[?25h[?25ll[85;144H4[71;14H[?25h[?25lo[85;144H5[71;15H[?25h[?25lg[85;144H6[71;16H[?25h[?25l([85;144H7[71;17H[?25h[?25lt[85;144H8[71;18H[?25h[?25l)[46m([mt[46m)[m[85;144H9[71;19H[?25h[?25l[72;84r[72;1H[L[1;85r[85;140H[K[85;140H72,4-11[7CTop[71;16H(t)[72;11H[?25h[?25l[85;143H3-10[72;10H[?25h[?25l[85;143H2-9 [72;9H[?25h[?25l[85;143H1  [72;1H[?25h[?25l[71;84r[84;1H
[1;85r[71;5Hconsole.log(t)[85;140H[K[85;140H71,19[9CTop[71;16H[46m([mt[46m)[?25h[?25l[72;84r[m[72;1H[L[1;85r[85;140H[K[85;140H72,4-11[7CTop[71;16H(t)[72;11H[?25h[?25l[85;143H3-10[72;10H[?25h[?25l[85;143H2-9 [72;9H[?25h[?25l[85;143H1  [72;1H[?25h[?25l[85;143H2[72;2H[?25h[?25l[85;143H3[72;3H[?25h[?25l[85;143H4[72;4H[?25h[?25l[85;143H5[72;5H[?25h[?25lc[85;143H6[72;6H[?25h[?25lo[85;143H7[72;7H[?25h[?25ln[85;143H8[72;8H[?25h[?25ls[85;143H9[72;9H[?25h[?25lo[85;143H10[72;10H[?25h[?25ll[85;144H1[72;11H[?25h[?25le[85;144H2[72;12H[?25h[?25ll[85;144H3[72;13H[?25h[?25lo[85;144H4[72;14H[?25h[?25lg[85;144H5[72;15H[?25h[?25l([85;144H6[72;16H[?25h[?25l[72;15H[K[85;144H5[72;15H[?25h[?25l[72;14H[K[85;144H4[72;14H[?25h[?25l[72;13H[K[85;144H3[72;13H[?25h[?25l[72;12H[K[85;144H2[72;12H[?25h[?25l.[85;144H3[72;13H[?25h[?25ll[85;144H4[72;14H[?25h[?25lo[85;144H5[72;15H[?25h[?25lg[85;144H6[72;16H[?25h[?25l([85;144H7[72;17H[?25h[?25l[36m\[m[85;144H8[72;18H[?25h[?25ln[85;144H9[72;19H[?25h[?25l)[46m([2C)[m[85;143H20[72;20H[?25h[?25l;([2C)[85;144H1[72;21H[?25h[?25l[71;16H[46m([mt[46m)[m[85;141H1,19[71;19H[?25h[85;1H[K[71;18H[?25l[85;130H^[[71;18H[85;130H  [71;19H[85;140H71,18[9CTop[71;18H[?25h[?25l[85;130H:[71;18H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 145L, 2591C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs [12@./calc.mjs expn-data.txt[C
file:///import/linux/home1/kmoshie1/projects/i471a/submit/lab1/exercises/calc/calc.mjs:72
    console.log(\n);
                ^

SyntaxError: Invalid or unexpected token
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C[12@./calc.mjs expn-data.txt[C[12Pvim calc.mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 145L, 2591C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7Hconsole.log(t)[64;7Hconsole.log(t1)[65;7H[33mif[m (kind === [31m'**'[m)[36m{[m[66;9Ht = t ** t1;[67;7H[36m}[m[33melse[m[36m{[m[68;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[69;7H[36m}
[m    [36m}[m
    console.log[46m([mt[46m)[m
    console.log([36m\[mn);
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[78;7Hmatch([31m'-'[m);[79;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[82;7H[33mreturn[m factor();
    [36m}
[m  [36m}[m[85;140H71,18[9CTop[71;18H[?25h[?1000l[?1002h[?25l[85;130H~@k[71;18H[85;130H   [72;18H[71;16H(t)[85;141H2[72;18H[?25h[?25l[85;130H~@k[72;18H[85;130H   [72;17H[85;144H7[72;17H[?25h[?25l[85;130Ha[72;17H[85;130H [72;18H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H72,18[9CTop[72;18H[?25h[?25l[46m([2C)[m[85;144H7[72;17H[?25h[?25l[31m'[m[35m\[m[35m[46mn[m[31m);[m([2C[35mn[m[85;144H8[72;18H[?25h[?25l[85;144H9[72;19H[?25h[?25l[46m([m[3C[31m[46m)[m[85;143H20[72;20H[?25h[?25l[35m'[m[2C[35m[46m'[m);[35m'[m[46m)[m[85;144H1[72;21H[?25h[85;1H[K[72;20H[?25l[85;130H^[[72;20H[85;130H  [72;21H([4C)[85;140H72,20[9CTop[72;20H[?25h[?25l[85;130H:[72;20H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 145L, 2593C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clearvim calc.mjs [12@./calc.mjs expn-data.txt[C
[33m-2[39m
[33m2[39m
[33m4[39m
[33m3[39m
[33m64[39m


[33m1[39m
[33m2[39m
[33m1[39m
[33m2[39m
[33m3[39m


[33m3[39m
[33m3[39m
[33m27[39m


[33m1[39m
[33m-2[39m
[33m1[39m
[33m2[39m
[33m3[39m


[33m-1[39m
[33m3[39m
[33m-1[39m


[ [33m64[39m, [33m27[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt clear[Kvim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 145L, 2593C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7Hconsole.log(t)[64;7Hconsole.log(t1)[65;7H[33mif[m (kind === [31m'**'[m)[36m{[m[66;9Ht = t ** t1;[67;7H[36m}[m[33melse[m[36m{[m[68;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[69;7H[36m}
[m    [36m}[m
    console.log(t)
    console.log([35m'\n'[m);
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[78;7Hmatch([31m'-'[m);[79;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[82;7H[33mreturn[m factor();
    [36m}
[m  [36m}[m[85;140H72,20[9CTop[72;20H[?25h[?1000l[?1002h[?25l[85;130H~@k[72;20H[85;130H   [73;13H[85;141H3,13[73;13H[?25h[?25l[85;130H~@k[73;13H[85;130H   [72;20H[85;141H2,20[72;20H[?25h[?25l[85;130H~@k[72;20H[85;130H   [73;13H[85;141H3,13[73;13H[?25h[?25l[85;130H~@k[73;13H[85;130H   [72;20H[85;141H2,20[72;20H[?25h[?25l[85;140H66,17[66;17H[?25h[?25l[64;18H[46m([mt1[46m)[m[85;141H4,21[64;21H[?25h[?25l[85;130Ha[64;21H[85;130H [64;22H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H64,22[9CTop[64;22H[?25h[?25l[64;21H[K[64;18H([85;144H1[64;21H[?25h[?25l[64;20H[K[85;144H0[64;20H[?25h[?25l[64;19H[K[85;143H19[64;19H[?25h[?25l[64;18H[K[85;144H8[64;18H[?25h[?25l[64;17H[K[85;144H7[64;17H[?25h[?25l[64;16H[K[85;144H6[64;16H[?25h[?25l[64;15H[K[85;144H5[64;15H[?25h[?25l[64;14H[K[85;144H4[64;14H[?25h[?25l[64;13H[K[85;144H3[64;13H[?25h[?25l[64;12H[K[85;144H2[64;12H[?25h[?25l[64;11H[K[85;144H1[64;11H[?25h[?25l[64;10H[K[85;144H0[64;10H[?25h[?25l[64;9H[K[85;143H9 [64;9H[?25h[?25l[64;8H[K[85;143H8[64;8H[?25h[?25l[64;7H[K[85;143H7[64;7H[?25h[?25l[85;143H6[64;6H[?25h[?25l[85;143H5[64;5H[?25h[?25l[85;143H4[64;4H[?25h[?25l[85;143H3[64;3H[?25h[?25l[85;143H2[64;2H[?25h[?25l[85;143H1[64;1H[?25h[?25l[63;84r[84;1H
[1;85r[63;7Hconsole.log(t)[85;140H[K[85;140H63,21[9CTop[63;18H[46m([mt[46m)[?25h[?25l[m(t)[85;141H4[64;21H[?25h[85;1H[K[64;20H[?25l[85;130H^[[64;20H[85;130H  [64;21H[85;140H64,20[9CTop[64;20H[?25h[?25l[85;130H:[64;20H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 144L, 2571C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs [12@./calc.mjs expn-data.txt[C
[33m-2[39m
[33m4[39m
[33m64[39m


[33m1[39m
[33m1[39m
[33m3[39m


[33m3[39m
[33m27[39m


[33m1[39m
[33m1[39m
[33m3[39m


[33m-1[39m
[33m-1[39m


[ [33m64[39m, [33m27[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 144L, 2571C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7Hconsole.log(t)[64;7H[33mif[m (kind === [31m'**'[m)[36m{[m[65;9Ht = t ** t1;[66;7H[36m}[m[33melse[m[36m{[m[67;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[68;7H[36m}
[m    [36m}[m
    console.log(t)
    console.log([35m'\n'[m);
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[77;7Hmatch([31m'-'[m);[78;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[81;7H[33mreturn[m factor();
    [36m}
[m  [36m}[m[85;140H64,20[9CTop[64;20H[?25h[?1000l[?1002h[?25l[85;130H~@k[64;20H[85;130H   [64;19H[85;143H19[64;19H[?25h[?25l[85;130H~@k[64;19H[85;130H   [65;19H[85;141H5[65;19H[?25h[?25l[85;130H~@k[65;19H[85;130H   [65;18H[85;144H8[65;18H[?25h[?25l[85;130H~@k[65;18H[85;130H   [65;17H[85;144H7[65;17H[?25h[?25l[85;130H~@k[65;17H[85;130H   [65;16H[85;144H6[65;16H[?25h[?25l[85;130H~@k[65;16H[85;130H   [65;15H[85;144H5[65;15H[?25h[?25l[85;130H~@k[65;15H[85;130H   [65;14H[85;144H4[65;14H[?25h[?25l[85;130Ha[65;14H[85;130H [65;15H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H65,15[9CTop[65;15H[?25h[?25l[85;144H4[65;14H[?25h[?25l1 ** t1;[85;144H5[65;15H[?25h[?25l[85;144H6[65;16H[?25h[?25l[85;144H7[65;17H[?25h[?25l[85;144H8[65;18H[?25h[?25l[85;144H9[65;19H[?25h[?25l[85;143H20[65;20H[?25h[?25l[85;144H1[65;21H[?25h[?25l[36m\[m;[85;144H2[65;22H[?25h[?25l;[65;22H[K[85;144H1[65;21H[?25h[?25l;[65;21H[K[85;144H0[65;20H[?25h[85;1H[K[65;19H[?25l[85;130H^[[65;19H[85;130H  [65;20H[85;140H65,19[9CTop[65;19H[?25h[?25l[85;130H:[65;19H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 144L, 2571C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs [12@./calc.mjs expn-data.txt[C
[33m-2[39m
[33m0.25[39m
[33m1.3160740129524924[39m


[33m1[39m
[33m1[39m
[33m3[39m


[33m3[39m
[33m27[39m


[33m1[39m
[33m1[39m
[33m3[39m


[33m-1[39m
[33m0.3333333333333333[39m


[ [33m1.3160740129524924[39m, [33m27[39m, [33m0.3333333333333333[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C[12@./calc.mjs expn-data.txt[C
[33m-2[39m
[33m0.25[39m
[33m1.3160740129524924[39m


[33m1[39m
[33m1[39m
[33m3[39m


[33m3[39m
[33m27[39m


[33m1[39m
[33m1[39m
[33m3[39m


[33m-1[39m
[33m0.3333333333333333[39m


[ [33m1.3160740129524924[39m, [33m27[39m, [33m0.3333333333333333[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 144L, 2571C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7Hconsole.log(t)[64;7H[33mif[m (kind === [31m'**'[m)[36m{[m[65;9Ht = t1 ** t;[66;7H[36m}[m[33melse[m[36m{[m[67;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[68;7H[36m}
[m    [36m}[m
    console.log(t)
    console.log([35m'\n'[m);
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[77;7Hmatch([31m'-'[m);[78;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[81;7H[33mreturn[m factor();
    [36m}
[m  [36m}[m[85;140H65,19[9CTop[65;19H[?25h[?1000l[?1002h[?25l[85;130H~@k[65;19H[85;130H   [66;12H[36m[46m{[68;7H}[m[85;141H6,12[66;12H[?25h[?25l[85;130H~@k[66;12H[85;130H   [65;19H[66;12H[36m{[68;7H}[m[85;141H5,19[65;19H[?25h[?25l[85;130H~@k[65;19H[85;130H   [65;18H[85;144H8[65;18H[?25h[?25l[85;130H~@k[65;18H[85;130H   [65;17H[85;144H7[65;17H[?25h[?25l[85;130H~@k[65;17H[85;130H   [65;16H[85;144H6[65;16H[?25h[?25l[85;130Ha[65;16H[85;130H [65;17H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H65,17[9CTop[65;17H[?25h[?25l[85;144H6[65;16H[?25h[?25l[85;144H5[65;15H[?25h[?25l ** t;[65;20H[K[85;144H4[65;14H[?25h[?25l[85;144H5[65;15H[?25h[?25l[85;144H6[65;16H[?25h[?25l[85;144H7[65;17H[?25h[?25l[85;144H8[65;18H[?25h[?25l[85;144H9[65;19H[?25h[?25l1;[85;143H20[65;20H[?25h[?25l[63;18H[46m([mt[46m)[m[85;141H3,21[63;21H[?25h[?25l[85;144H0[63;20H[?25h[?25l[46ma[m)a[46m)[m[85;144H1[63;21H[?25h[?25l(ta)[85;144H0[63;20H[?25h[?25l[46m([mta[46m)[m[85;144H1[63;21H[?25h[?25l)[63;21H[K[63;20H[46m)[m[85;144H0[63;20H[?25h[?25l[46m [m) [46m)[m[85;144H1[63;21H[?25h[?25l[46m*[m)*[46m)[m[85;144H2[63;22H[?25h[?25l[46m*[m)*[46m)[m[85;144H3[63;23H[?25h[?25l[46m [m) [46m)[m[85;144H4[63;24H[?25h[?25l[46mt[m)t[46m)[m[85;144H5[63;25H[?25h[?25l[46m1[m)1[46m)[m[85;144H6[63;26H[?25h[85;1H[K[63;25H[?25l[85;130H^[[63;25H[85;130H  [63;26H[63;18H([7C)[85;140H63,25[9CTop[63;25H[?25h[?25l[85;130H"[63;25H[?25h[?25l[85;131H^[[63;25H[85;131H  [63;25H[85;131H^[[63;25H[85;130H   [63;25H[?25h[?25l[85;130H:[63;25H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 144L, 2577C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs [12@./calc.mjs expn-data.txt[C
[33m4[39m
[33m64[39m
[33m64[39m


[33m1[39m
[33m1[39m
[33m3[39m


[33m27[39m
[33m27[39m


[33m1[39m
[33m1[39m
[33m3[39m


[33m-1[39m
[33m-1[39m


[ [33m64[39m, [33m27[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 144L, 2577C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7Hconsole.log(t ** t1)[64;7H[33mif[m (kind === [31m'**'[m)[36m{[m[65;9Ht = t ** t1;[66;7H[36m}[m[33melse[m[36m{[m[67;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[68;7H[36m}
[m    [36m}[m
    console.log(t)
    console.log([35m'\n'[m);
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[77;7Hmatch([31m'-'[m);[78;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[81;7H[33mreturn[m factor();
    [36m}
[m  [36m}[m[85;140H63,25[9CTop[63;25H[?25h[?1000l[?1002h[?25l[85;130H~@k[63;25H[85;130H   [64;25H[36m[46m{[66;7H}[m[85;141H4[64;25H[?25h[?25l[85;130H~@k[64;25H[85;130H   [63;25H[64;25H[36m{[66;7H}[m[85;141H3[63;25H[?25h[?25l[85;141H5,20[65;20H[?25h[?25l[64;25H[36m[46m{[66;7H}[m[85;141H4,25[64;25H[?25h[?25l[85;130H~@k[64;25H[85;130H   [63;26H[63;18H[46m([7C)[m[64;25H[36m{[66;7H}[m[85;141H3,26[63;26H[?25h[?25l[63;18H([7C)[64;25H[36m[46m{[66;7H}[m[85;141H4,25[64;25H[?25h[?25l[36m{[66;7H}[m[85;141H2,24[62;24H[?25h[?25l[85;130H2[63;27H[62;24H[7m; 
      console.log(t ** t1)[m[85;1H[1m-- VISUAL --[m[85;13H[K[85;130H2[63;27H[85;140H63,27[9CTop[63;27H[?25h[?25l[?25h[?25l[85;130H [63;26H[62;24H;[62;25H[K[63;1H      console.log[46m([mt ** t1[46m)[m[85;1H[K[85;140H63,26[9CTop[63;26H[?25h[?25l[85;130H~@k[63;26H[85;130H   [64;25H[63;18H([7C)[64;25H[36m[46m{[66;7H}[m[85;141H4,25[64;25H[?25h[?25l[85;130H~@k[64;25H[85;130H   [64;24H[64;10H[46m([13C)[m[36m{[66;7H}[m[85;144H4[64;24H[?25h[?25l[85;130H~@k[64;24H[85;130H   [65;20H[64;10H([13C)[85;141H5,20[65;20H[?25h[?25l[85;130H~@k[65;20H[85;130H   [65;19H[85;143H19[65;19H[?25h[?25l[85;130H~@k[65;19H[85;130H   [65;18H[85;144H8[65;18H[?25h[?25l[85;130H~@k[65;18H[85;130H   [65;17H[85;144H7[65;17H[?25h[?25l[85;130H~@k[65;17H[85;130H   [65;16H[85;144H6[65;16H[?25h[?25l[85;130H~@k[65;16H[85;130H   [65;15H[85;144H5[65;15H[?25h[?25l[85;130H~@k[65;15H[85;130H   [65;14H[85;144H4[65;14H[?25h[?25l[85;130H~@k[65;14H[85;130H   [65;13H[85;144H3[65;13H[?25h[?25l[85;130H~@k[65;13H[85;130H   [65;12H[85;144H2[65;12H[?25h[?25l[85;130H~@k[65;12H[85;130H   [65;11H[85;144H1[65;11H[?25h[?25l[85;130Ha[65;11H[85;130H [65;12H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H65,12[9CTop[65;12H[?25h[?25l+ t ** t1;[85;144H3[65;13H[?25h[?25l[85;144H2[65;12H[?25h[?25l[85;144H3[65;13H[?25h[?25l t ** t1;[65;21H[K[85;144H2[65;12H[?25h[?25l t ** t1;[65;20H[K[85;144H1[65;11H[?25h[?25l+ t ** t1;[85;144H2[65;12H[?25h[?25l= t ** t1;[85;144H3[65;13H[?25h[85;1H[K[65;12H[?25l[85;130H^[[65;12H[85;130H  [65;13H[85;140H65,12[9CTop[65;12H[?25h[?25l[85;130H:[65;12H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 144L, 2578C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs [12@./calc.mjs expn-data.txt[C
[33m4[39m
[33m8[39m
[33m10[39m


[33m1[39m
[33m1[39m
[33m3[39m


[33m27[39m
[33m30[39m


[33m1[39m
[33m1[39m
[33m3[39m


[33m-1[39m
[33m-2[39m


[ [33m10[39m, [33m30[39m, [33m-2[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 144L, 2578C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7Hconsole.log(t ** t1)[64;7H[33mif[m (kind === [31m'**'[m)[36m{[m[65;9Ht += t ** t1;[66;7H[36m}[m[33melse[m[36m{[m[67;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[68;7H[36m}
[m    [36m}[m
    console.log(t)
    console.log([35m'\n'[m);
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[77;7Hmatch([31m'-'[m);[78;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[81;7H[33mreturn[m factor();
    [36m}
[m  [36m}[m[85;140H65,12[9CTop[65;12H[?25h[?1000l[?1002h[?25l[1;84r[1;1H[3M[1;85r[82;3H[36mfunction[m factor() [36m{[m
    [33mif[m (check([31m'INT'[m)) [36m{[m[84;7H[33mconst[m value = parseInt(lookahead.lexeme);[85;1H[K[85;140H65,12[10C5%[62;12H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7Hmatch([31m'INT'[m);[83;7H[33mreturn[m value;
    [36m}[m[85;140H[K[85;140H65,12[9C10%[59;12H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33melse[m [36m{[m[83;7Hmatch([31m'('[m);[84;7H[33mconst[m value = expr();[85;140H[K[85;140H65,12[9C15%[56;12H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7Hmatch([31m')'[m);[83;7H[33mreturn[m value;
    [36m}[m[85;140H[K[85;140H65,12[9C20%[53;12H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[36m}
}[m[85;140H[K[85;140H65,12[9C25%[50;12H[?25h[?25l[49;25H[36m[46m{[51;7H}[m[85;141H4,25[49;25H[?25h[?25l[85;130H2[50;22H[49;25H[7m[36m{[m[7m 
        t += t ** t1;[m[51;7H[36m}[m[85;1H[1m-- VISUAL --[m[85;130H[K[85;130H2[50;22H[85;140H65,22[9C25%[50;22H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[85;130H [50;22H[?25h[?25l[85;130H2[50;22H[?25h[?25l[85;130H [51;12H[49;25H[36m{[m[49;26H[K[50;1H        t += t ** t1;[51;12H[36m[46m{[53;7H}[m[85;1H[K[85;140H66,12[9C25%[51;12H[?25h[?25l[36m{[53;7H}[m[85;141H5,21[50;21H[?25h[?25l[85;130Ha[50;21H[85;130H [50;22H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H65,22[9C25%[50;22H[?25h[?25l[51;12H[36m[46m{[53;7H}[m[85;141H6,13[51;13H[?25h[?25l[36m{[53;7H}[m[85;141H5,22[50;22H[?25h[?25l[85;141H4[49;22H[?25h[?25l[85;144H1[49;21H[?25h[?25l[85;144H0[49;20H[?25h[?25l[85;143H19[49;19H[?25h[?25l[85;144H8[49;18H[?25h[?25l[85;144H7[49;17H[?25h[?25l[85;144H6[49;16H[?25h[?25l[85;144H5[49;15H[?25h[?25l[85;144H4[49;14H[?25h[?25l[85;144H3[49;13H[?25h[?25l[85;144H2[49;12H[?25h[?25l[46m([13C)[m[85;144H1[49;11H[?25h[?25l[85;144H0[49;10H[?25h[?25l([13C)[85;143H9 [49;9H[?25h[?25l[85;143H8[49;8H[?25h[?25l[85;143H7[49;7H[?25h[?25l[85;141H5[50;7H[?25h[?25l[49;25H[36m[46m{[51;7H}[m[85;141H6[51;7H[?25h[?25l[49;25H[36m{[51;7H}[m[85;141H7[52;7H[?25h[?25l[51;12H[36m[46m{[53;7H}[m[85;141H8[53;7H[?25h[?25l[44;53H[36m[46m{[m[51;12H[36m{[53;7H}[m
    [36m[46m}[m[85;141H9,6[54;6H[?25h[?25l[55;84r[55;1H[L[1;85r[85;140H[K[85;140H70,4-11[7C24%[44;53H[36m{[54;5H}[55;11H[?25h[?25l[m[85;143H3-10[55;10H[?25h[?25l[85;143H2-9 [55;9H[?25h[?25l[85;143H1  [55;1H[?25h[?25l[54;84r[84;1H
[1;85r[54;5H[36m}[m[85;140H[K[85;140H69,6[10C25%[44;53H[36m[46m{[54;5H}[?25h[?25l[55;84r[m[55;1H[L[1;85r[85;140H[K[85;140H70,4-11[7C24%[44;53H[36m{[54;5H}[55;11H[?25h[?25l[m[85;143H3-10[55;10H[?25h[?25l[85;143H2-9 [55;9H[?25h[?25l[85;143H1  [55;1H[?25h[?25l[85;143H2[55;2H[?25h[?25l[85;143H3[55;3H[?25h[?25l[85;143H4[55;4H[?25h[?25l[85;143H5[55;5H[?25h[?25l[44;53H[36m[46m{[54;5H}[m[85;140H69[54;5H[?25h[?25l[44;53H[36m{[54;5H}[m[85;141H8[53;5H[?25h[?25l[85;141H7[52;5H[?25h[?25l[85;141H6[51;5H[?25h[?25l[85;141H5[50;5H[?25h[?25l[85;141H4[49;5H[?25h[?25l[85;141H3[48;5H[?25h[?25l[85;143H6[48;6H[?25h[?25l[85;143H7[48;7H[?25h[?25laconsole.log(t ** t1)[85;143H8[48;8H[?25h[?25l[85;141H2[47;8H[?25h[85;1H[K[47;7H[?25l[85;130H^[[47;7H[85;130H  [47;8H[85;140H62,7[10C24%[47;7H[?25h[?25l[85;130H~@k[47;7H[85;130H   [48;7H[85;141H3[48;7H[?25h[?25l[85;130Hd[48;7H[?25h[?25l[85;131Hd[48;7H[85;130H  [48;7H[48;84r[84;1H
[1;85r[85;140H[K[85;140H63,7[10C25%[48;7H[?25h[?25l[85;130Ha[48;7H[85;130H [48;8H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H63,8[10C25%[48;8H[?25h[85;1H[K[48;7H[?25l[85;130H^[[48;7H[85;130H  [48;8H[85;140H63,7[10C25%[48;7H[?25h[?25l[85;130H"[48;7H[?25h[?25l[85;131H:[48;7H[?25h[?25l[85;130H  [51;34H[85;141H6,34[51;34H[?25h[?25l[85;130H^[[51;34H[85;130H  [51;34H[85;130H^[[51;34H[85;130H  [51;34H[?25h[?25l[85;130H:[51;34H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 144L, 2556C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 144L, 2556C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7H[33mif[m (kind === [31m'**'[m)[36m{[m[64;9Ht += t ** t1;[65;7H[36m}[m[33melse[m[36m{[m[66;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[67;7H[36m}
[m    [36m}[m[70;5Hconsole.log(t)
    console.log([35m'\n'[m);
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[77;7Hmatch([31m'-'[m);[78;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[81;7H[33mreturn[m factor();
    [36m}
[m  [36m}[m[85;140H66,34[9CTop[66;34H[?25h[?1000l[?1002h[?25l[85;130H^[[66;34H[85;130H  [66;34H[85;130H^[[66;34H[85;130H  [66;34H[?25h[?25l[85;130H:[66;34H[85;1H[K[85;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clearvim calc.mjs [12@./calc.mjs expn-data.txt[C
[33m10[39m


[33m3[39m


[33m30[39m


[33m3[39m


[33m-2[39m


[ [33m10[39m, [33m30[39m, [33m-2[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt clear[Kvim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 144L, 2556C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7H[33mif[m (kind === [31m'**'[m)[36m{[m[64;9Ht += t ** t1;[65;7H[36m}[m[33melse[m[36m{[m[66;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[67;7H[36m}
[m    [36m}[m[70;5Hconsole.log(t)
    console.log([35m'\n'[m);
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[77;7Hmatch([31m'-'[m);[78;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[81;7H[33mreturn[m factor();
    [36m}
[m  [36m}[m[85;140H66,34[9CTop[66;34H[?25h[?1000l[?1002h[?25l[85;130H~@k[66;34H[85;130H   [65;12H[36m[46m{[67;7H}[m[85;141H5,12[65;12H[?25h[?25l[85;130H~@k[65;12H[85;130H   [64;21H[65;12H[36m{[67;7H}[m[85;141H4,21[64;21H[?25h[?25l[85;130H~@k[64;21H[85;130H   [64;20H[85;144H0[64;20H[?25h[?25l[85;130H~@k[64;20H[85;130H   [64;19H[85;143H19[64;19H[?25h[?25l[85;130H~@k[64;19H[85;130H   [64;18H[85;144H8[64;18H[?25h[?25l[85;130H~@k[64;18H[85;130H   [64;17H[85;144H7[64;17H[?25h[?25l[85;130H~@k[64;17H[85;130H   [64;16H[85;144H6[64;16H[?25h[?25l[85;130H~@k[64;16H[85;130H   [64;15H[85;144H5[64;15H[?25h[?25l[85;130H~@k[64;15H[85;130H   [64;14H[85;144H4[64;14H[?25h[?25l[85;130H~@k[64;14H[85;130H   [64;13H[85;144H3[64;13H[?25h[?25l[85;130H~@k[64;13H[85;130H   [64;12H[85;144H2[64;12H[?25h[?25l[85;130Ha[64;12H[85;130H [64;13H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H64,13[9CTop[64;13H[?25h[?25l[85;144H2[64;12H[?25h[?25l= t ** t1;[64;21H[K[85;144H1[64;11H[?25h[85;1H[K[64;10H[?25l[85;130H^[[64;10H[85;130H  [64;11H[85;140H64,10[9CTop[64;10H[?25h[?25l[85;130H:[64;10H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 144L, 2555C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ c;l[K[Klear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clearvim calc.mjs [12@./calc.mjs expn-data.txt[C
[33m64[39m


[33m3[39m


[33m27[39m


[33m3[39m


[33m-1[39m


[ [33m64[39m, [33m27[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt clear[Kvim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 144L, 2555C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7H[33mif[m (kind === [31m'**'[m)[36m{[m[64;9Ht = t ** t1;[65;7H[36m}[m[33melse[m[36m{[m[66;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[67;7H[36m}
[m    [36m}[m[70;5Hconsole.log(t)
    console.log([35m'\n'[m);
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[77;7Hmatch([31m'-'[m);[78;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[81;7H[33mreturn[m factor();
    [36m}
[m  [36m}[m[85;140H64,10[9CTop[64;10H[?25h[?1000l[?1002h[?25l[85;130H~@k[64;10H[85;130H   [63;10H[46m([13C)[m[85;141H3[63;10H[?25h[?25l[85;130H~@k[63;10H[85;130H   [64;10H[63;10H([13C)[85;141H4[64;10H[?25h[?25l[85;130H~@k[64;10H[85;130H   [65;10H[85;141H5[65;10H[?25h[?25l[85;130H~@k[65;10H[85;130H   [66;10H[85;141H6[66;10H[?25h[?25l[85;130H~@k[66;10H[85;130H   [67;7H[65;12H[36m[46m{[67;7H}[m[85;141H7,7 [67;7H[?25h[?25l[85;130H~@k[67;7H[85;130H   [68;5H[59;53H[36m[46m{[m[65;12H[36m{[67;7H}[m
    [36m[46m}[m[85;141H8,5[68;5H[?25h[?25l[85;130H~@k[68;5H[85;130H   [69;4H[59;53H[36m{[68;5H}[m[85;141H9,4[69;4H[?25h[?25l[85;130H~@k[69;4H[85;130H   [70;10H[85;140H70,10[70;10H[?25h[?25l[85;130H~@k[70;10H[85;130H   [69;4H[85;140H69,4 [69;4H[?25h[?25l[85;130H~@k[69;4H[85;130H   [68;5H[59;53H[36m[46m{[68;5H}[m[85;141H8,5[68;5H[?25h[?25l[85;130H~@k[68;5H[85;130H   [67;7H[59;53H[36m{[m[65;12H[36m[46m{[67;7H}[m
    [36m}[m[85;141H7,7[67;7H[?25h[?25l[85;130H~@k[67;7H[85;130H   [68;5H[59;53H[36m[46m{[m[65;12H[36m{[67;7H}[m
    [36m[46m}[m[85;141H8,5[68;5H[?25h[?25l[85;130H~@k[68;5H[85;130H   [67;7H[59;53H[36m{[m[65;12H[36m[46m{[67;7H}[m
    [36m}[m[85;141H7,7[67;7H[?25h[?25l[85;130Ha[67;7H[85;130H [67;8H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H67,8[10CTop[67;8H[?25h[?25l[85;143H7[67;7H[?25h[?25l[85;143H8[67;8H[?25h[?25l[68;84r[68;1H[L[1;85r[85;140H[K[85;140H68,6-13[7CTop[65;12H[36m{[67;7H}[68;13H[?25h[?25l\[m[85;143H7-14[68;14H[?25h[?25l[68;13H[K[85;143H6-13[68;13H[?25h[?25l[85;143H5-12[68;12H[?25h[?25l[85;143H4-11[68;11H[?25h[?25l[85;143H3-10[68;10H[?25h[?25l[85;143H2-9 [68;9H[?25h[?25l[85;143H1  [68;1H[?25h[?25l[85;143H2[68;2H[?25h[?25l[85;143H3[68;3H[?25h[?25l[85;143H4[68;4H[?25h[?25l[85;143H5[68;5H[?25h[?25l[85;143H6[68;6H[?25h[?25l[85;143H7[68;7H[?25h[?25lc[85;143H8[68;8H[?25h[?25lo[85;143H9[68;9H[?25h[?25ln[85;143H10[68;10H[?25h[?25ls[85;144H1[68;11H[?25h[?25lo[85;144H2[68;12H[?25h[?25ll[85;144H3[68;13H[?25h[?25le[85;144H4[68;14H[?25h[?25l.[85;144H5[68;15H[?25h[?25ll[85;144H6[68;16H[?25h[?25lo[85;144H7[68;17H[?25h[?25lg[85;144H8[68;18H[?25h[?25l)[85;144H9[68;19H[?25h[?25l[68;18H[K[85;144H8[68;18H[?25h[?25l([85;144H9[68;19H[?25h[?25lt[85;143H20[68;20H[?25h[?25l)[46m([mt[46m)[m[85;144H1[68;21H[?25h[?25l[69;84r[69;1H[L[1;85r[85;140H[K[85;140H69,6-13[7CTop[68;18H(t)[69;13H[?25h[?25l[85;143H5-12[69;12H[?25h[?25l[85;143H4-11[69;11H[?25h[?25l[85;143H3-10[69;10H[?25h[?25l[85;143H2-9 [69;9H[?25h[?25l[85;143H1  [69;1H[?25h[?25l[85;143H2[69;2H[?25h[?25l[85;143H3[69;3H[?25h[?25l[85;143H4[69;4H[?25h[?25l[85;143H5[69;5H[?25h[?25l[85;143H6[69;6H[?25h[?25l[85;143H7[69;7H[?25h[?25lc[85;143H8[69;8H[?25h[?25lo[85;143H9[69;9H[?25h[?25ln[85;143H10[69;10H[?25h[?25ls[85;144H1[69;11H[?25h[?25lo[85;144H2[69;12H[?25h[?25ll[85;144H3[69;13H[?25h[?25le[85;144H4[69;14H[?25h[?25l.[85;144H5[69;15H[?25h[?25ll[85;144H6[69;16H[?25h[?25lo[85;144H7[69;17H[?25h[?25lg[85;144H8[69;18H[?25h[?25l([85;144H9[69;19H[?25h[?25lt[85;143H20[69;20H[?25h[?25l1[85;144H1[69;21H[?25h[?25l[69;20H[K[85;144H0[69;20H[?25h[?25l2[85;144H1[69;21H[?25h[?25l[69;20H[K[85;144H0[69;20H[?25h[?25l1[85;144H1[69;21H[?25h[?25l_[85;144H2[69;22H[?25h[?25l[69;21H[K[85;144H1[69;21H[?25h[?25l)[46m([mt1[46m)[m[85;144H2[69;22H[?25h[?25l[59;53H[36m[46m{[m[69;18H(t1)
    [36m[46m}[m[85;140H70,6 [70;6H[?25h[?25l[59;53H[36m{[70;5H}[m[85;141H1,5[71;5H[?25h[?25l[72;16H[46m([mt[46m)[m[85;141H2,19[72;19H[?25h[85;1H[K[72;18H[?25l[85;130H^[[72;18H[85;130H  [72;19H[85;140H72,18[9CTop[72;18H[?25h[?25l[85;130Hd[72;18H[?25h[?25l[85;131Hd[72;18H[85;130H  [72;5H[72;84r[84;1H
[1;85r[84;3H[36m}[m[85;140H[K[85;140H72,5[10CTop[72;5H[?25h[?25l[85;130H^[[72;5H[85;130H  [72;5H[85;130H^[[72;5H[85;130H  [72;5H[?25h[?25l[85;130H:[72;5H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 145L, 2579C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clearvim calc.mjs [12@./calc.mjs expn-data.txt[C
[33m4[39m
[33m2[39m
[33m64[39m
[33m3[39m


[33m3[39m
[33m2[39m
[33m3[39m
[33m2[39m


[33m27[39m
[33m3[39m


[33m-1[39m
[33m-2[39m
[33m3[39m
[33m2[39m


[33m-1[39m
[33m3[39m


[ [33m64[39m, [33m27[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt clear[Kvim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 145L, 2579C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7H[33mif[m (kind === [31m'**'[m)[36m{[m[64;9Ht = t ** t1;[65;7H[36m}[m[33melse[m[36m{[m[66;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[67;7H[36m}[m[68;7Hconsole.log(t)[69;7Hconsole.log(t1)
    [36m}[m[72;5Hconsole.log([35m'\n'[m);
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[78;7Hmatch([31m'-'[m);[79;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[82;7H[33mreturn[m factor();
    [36m}
[m  [36m}[m[85;140H72,5[10CTop[72;5H[?25h[?1000l[?1002h[?25l[85;130H~@k[72;5H[85;130H   [73;5H[85;141H3[73;5H[?25h[?25l[85;130H~@k[73;5H[85;130H   [72;5H[85;141H2[72;5H[?25h[?25l[85;130H~@k[72;5H[85;130H   [71;4H[85;141H1,4[71;4H[?25h[?25l[85;130H~@k[71;4H[85;130H   [70;5H[59;53H[36m[46m{[70;5H}[m[85;141H0,5[70;5H[?25h[?25l[85;130H~@k[70;5H[85;130H   [69;5H[59;53H[36m{[70;5H}[m[85;140H69[69;5H[?25h[?25l[85;130H~@k[69;5H[85;130H   [68;5H[85;141H8[68;5H[?25h[?25l[85;130H~@k[68;5H[85;130H   [67;5H[85;141H7[67;5H[?25h[?25l[85;130H~@k[67;5H[85;130H   [66;5H[85;141H6[66;5H[?25h[?25l[85;130H~@k[66;5H[85;130H   [65;5H[85;141H5[65;5H[?25h[?25l[85;130H~@k[65;5H[85;130H   [64;5H[85;141H4[64;5H[?25h[?25l[85;130H~@k[64;5H[85;130H   [65;5H[85;141H5[65;5H[?25h[?25l[85;130H~@k[65;5H[85;130H   [65;6H[85;143H6[65;6H[?25h[?25l[85;130H~@k[65;6H[85;130H   [64;6H[85;141H4[64;6H[?25h[?25l[85;130H~@k[64;6H[85;130H   [64;7H[85;143H7[64;7H[?25h[?25l[85;130H~@k[64;7H[85;130H   [64;8H[85;143H8[64;8H[?25h[?25l[85;130H~@k[64;8H[85;130H   [64;9H[85;143H9[64;9H[?25h[?25l[85;130H~@k[64;9H[85;130H   [64;10H[85;143H10[64;10H[?25h[?25l[85;130H~@k[64;10H[85;130H   [64;11H[85;144H1[64;11H[?25h[?25l[85;130H~@k[64;11H[85;130H   [64;12H[85;144H2[64;12H[?25h[?25l[85;130H~@k[64;12H[85;130H   [64;13H[85;144H3[64;13H[?25h[?25l[85;130H~@k[64;13H[85;130H   [64;14H[85;144H4[64;14H[?25h[?25l[85;130H~@k[64;14H[85;130H   [64;15H[85;144H5[64;15H[?25h[?25l[85;130H~@k[64;15H[85;130H   [64;16H[85;144H6[64;16H[?25h[?25l[85;130H~@k[64;16H[85;130H   [64;17H[85;144H7[64;17H[?25h[?25l[85;130H~@k[64;17H[85;130H   [64;18H[85;144H8[64;18H[?25h[?25l[85;130H~@k[64;18H[85;130H   [64;17H[85;144H7[64;17H[?25h[?25l[85;130H~@k[64;17H[85;130H   [64;16H[85;144H6[64;16H[?25h[?25l[85;130H~@k[64;16H[85;130H   [64;15H[85;144H5[64;15H[?25h[?25l[85;130H~@k[64;15H[85;130H   [64;14H[85;144H4[64;14H[?25h[?25l[85;130H~@k[64;14H[85;130H   [64;13H[85;144H3[64;13H[?25h[?25l[85;130H^[[64;13H[85;130H  [64;13H[85;130H^[[64;13H[85;130H  [64;13H[?25h[?25l[85;130H:[64;13H[85;1H[K[85;1H:[?2004h[?25hq[?25l[?25h1[?25l[?25h[?25l[85;3H[K[85;3H[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs [12@./calc.mjs expn-data.txt[Cclear[K
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clearvim calc.mjs [12@./calc.mjs expn-data.txt[C
[33m4[39m
[33m2[39m
[33m64[39m
[33m3[39m


[33m3[39m
[33m2[39m
[33m3[39m
[33m2[39m


[33m27[39m
[33m3[39m


[33m-1[39m
[33m-2[39m
[33m3[39m
[33m2[39m


[33m-1[39m
[33m3[39m


[ [33m64[39m, [33m27[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt clear[Kvim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 145L, 2579C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7H[33mif[m (kind === [31m'**'[m)[36m{[m[64;9Ht = t ** t1;[65;7H[36m}[m[33melse[m[36m{[m[66;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[67;7H[36m}[m[68;7Hconsole.log(t)[69;7Hconsole.log(t1)
    [36m}[m[72;5Hconsole.log([35m'\n'[m);
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[78;7Hmatch([31m'-'[m);[79;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[82;7H[33mreturn[m factor();
    [36m}
[m  [36m}[m[85;140H64,13[9CTop[64;13H[?25h[?1000l[?1002h[?25l[85;130H~@k[64;13H[85;130H   [65;12H[36m[46m{[67;7H}[m[85;141H5,12[65;12H[?25h[?25l[85;130H~@k[65;12H[85;130H   [64;13H[65;12H[36m{[67;7H}[m[85;141H4,13[64;13H[?25h[?25l[85;130HA[64;13H[85;130H [64;21H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H64,21[9CTop[64;21H[?25h[?25l[65;12H[36m[46m{[67;7H}[m[85;141H5,13[65;13H[?25h[?25l[36m{[67;7H}[m[85;141H6,21[66;21H[?25h[?25l[65;12H[36m[46m{[67;7H}[m[85;141H7,8 [67;8H[?25h[?25l[65;12H[36m{[67;7H}[m[68;18H[46m([mt[46m)[m[85;141H8,21[68;21H[?25h[85;1H[K[68;20H[?25l[85;130H^[[68;20H[85;130H  [68;21H[85;140H68,20[9CTop[68;20H[?25h[?25l[85;130HD[68;20H[85;130H [68;20H[85;130Hd$[68;20H[85;130H  [68;19H([68;20H[K[85;143H19[68;19H[?25h[?25l[85;130HD[68;19H[85;130H [68;19H[85;130Hd$[68;19H[85;130H  [68;18H[68;19H[K[85;144H8[68;18H[?25h[?25l[85;130H^[[68;18H[85;130H  [68;18H[85;130H^[[68;18H[85;130H  [68;18H[?25h[?25l[85;130HD[68;18H[85;130H [68;18H[85;130Hd$[68;18H[85;130H  [68;17H[68;18H[K[85;144H7[68;17H[?25h[?25l[85;130HD[68;17H[85;130H [68;17H[85;130Hd$[68;17H[85;130H  [68;16H[68;17H[K[85;144H6[68;16H[?25h[?25l[85;130H~@k[68;16H[85;130H   [68;15H[85;144H5[68;15H[?25h[?25l[85;130H~@k[68;15H[85;130H   [68;14H[85;144H4[68;14H[?25h[?25l[85;130HA[68;14H[85;130H [68;17H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H68,17[9CTop[68;17H[?25h[?25l[85;144H6[68;16H[?25h[85;1H[K[68;15H[?25l[85;130H^[[68;15H[85;130H  [68;16H[85;140H68,15[9CTop[68;15H[?25h[?25l[85;130H~@k[68;15H[85;130H   [68;14H[85;144H4[68;14H[?25h[?25l[85;130HD[68;14H[85;130H [68;14H[85;130Hd$[68;14H[85;130H  [68;13H[68;14H[K[85;144H3[68;13H[?25h[?25l[85;130HD[68;13H[85;130H [68;13H[85;130Hd$[68;13H[85;130H  [68;12H[68;13H[K[85;144H2[68;12H[?25h[?25l[85;130HD[68;12H[85;130H [68;12H[85;130Hd$[68;12H[85;130H  [68;11H[68;12H[K[85;144H1[68;11H[?25h[?25l[85;130HD[68;11H[85;130H [68;11H[85;130Hd$[68;11H[85;130H  [68;10H[68;11H[K[85;144H0[68;10H[?25h[?25l[85;130HD[68;10H[85;130H [68;10H[85;130Hd$[68;10H[85;130H  [68;9H[68;10H[K[85;143H9 [68;9H[?25h[?25l[85;130HD[68;9H[85;130H [68;9H[85;130Hd$[68;9H[85;130H  [68;8H[68;9H[K[85;143H8[68;8H[?25h[?25l[85;130HD[68;8H[85;130H [68;8H[85;130Hd$[68;8H[85;130H  [68;7H[68;8H[K[85;143H7[68;7H[?25h[?25l[85;130H~@k[68;7H[85;130H   [68;7H[?25h[?25l[85;130HD[68;7H[85;130H [68;7H[85;130Hd$[68;7H[85;130H  [68;6H[68;7H[K[85;143H6[68;6H[?25h[?25l[85;130H~@k[68;6H[85;130H   [69;6H[85;141H9[69;6H[?25h[?25l[85;130H~@k[69;6H[85;130H   [68;6H[85;141H8[68;6H[?25h[?25l[85;130HD[68;6H[85;130H [68;6H[85;130Hd$[68;6H[85;130H  [68;5H[85;143H5[68;5H[?25h[?25l[85;130HD[68;5H[85;130H [68;5H[85;130Hd$[68;5H[85;130H  [68;4H[85;143H4[68;4H[?25h[?25l[85;130HD[68;4H[85;130H [68;4H[85;130Hd$[68;4H[85;130H  [68;3H[85;143H3[68;3H[?25h[?25l[85;130HD[68;3H[85;130H [68;3H[85;130Hd$[68;3H[85;130H  [68;2H[85;143H2[68;2H[?25h[?25l[85;130HD[68;2H[85;130H [68;2H[85;130Hd$[68;2H[85;130H  [68;1H[85;143H1[68;1H[?25h[?25l[85;130HD[68;1H[85;130H [68;1H[85;130Hd$[68;1H[85;130H  [68;1H[85;143H0-1[68;1H[?25h[?25l[85;130HD[68;1H[85;130H [68;1H[85;130Hd$[68;1H[85;130H  [68;1H[?25h[?25l[85;130H~@k[68;1H[85;130H   [69;1H[85;141H9,1  [69;1H[?25h[?25l[85;130H~@k[69;1H[85;130H   [69;1H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H69,1[10CTop[69;1H[?25h[?25lD      console.log(t1)[85;143H2[69;2H[?25h[?25lD      console.log(t1)[85;143H3[69;3H[?25h[?25l      console.log(t1)[69;23H[K[85;143H2[69;2H[?25h[?25l      console.log(t1)[69;22H[K[85;143H1[69;1H[?25h[85;1H[K[69;1H[?25l[85;130H^[[69;1H[85;130H  [69;1H[85;140H69,1[10CTop[69;1H[?25h[?25l[85;130HD[69;1H[85;130H [69;1H[85;130Hd$[69;1H[85;130H  [69;1H[69;7H[K[85;143H0-1[69;1H[?25h[?25l[85;130H~@k[69;1H[85;130H   [69;1H[?25h[?25l[85;130HD[69;1H[85;130H [69;1H[85;130Hd$[69;1H[85;130H  [69;1H[?25h[?25l[85;130HD[69;1H[85;130H [69;1H[85;130Hd$[69;1H[85;130H  [69;1H[?25h[?25l[85;130H^[[69;1H[85;130H  [69;1H[85;130H^[[69;1H[85;130H  [69;1H[?25h[?25l[85;130H:[69;1H[85;130H[K[85;1H:[?2004h[?25hX[?25l[?25h[?25l[85;1H[K[85;1HEnter encryption key:[?2004h [?25h[?25l[85;1H[K[69;1H[85;140H69,0-1[8CTop[69;1H[?25h[?25l[85;130H^[[69;1H[85;130H  [69;1H[85;130H^[[69;1H[85;130H  [69;1H[?25h[?25l[85;130H:[69;1H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 145L, 2538C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clearvim calc.mjs [12@./calc.mjs expn-data.txt[C










[ [33m64[39m, [33m27[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt clear[Kvim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 145L, 2538C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7H[33mif[m (kind === [31m'**'[m)[36m{[m[64;9Ht = t ** t1;[65;7H[36m}[m[33melse[m[36m{[m[66;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[67;7H[36m}[70;5H}[m[72;5Hconsole.log([35m'\n'[m);
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[78;7Hmatch([31m'-'[m);[79;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[82;7H[33mreturn[m factor();
    [36m}
[m  [36m}[m[85;140H69,0-1[8CTop[69;1H[?25h[?1000l[?1002h[?25l[85;130H~@k[69;1H[85;130H   [70;1H[85;140H70,1  [70;1H[?25h[?25l[85;130H~@k[70;1H[85;130H   [71;1H[85;141H1[71;1H[?25h[?25l[85;130H~@k[71;1H[85;130H   [72;1H[85;141H2[72;1H[?25h[?25l[85;130H^[[72;1H[85;130H  [72;1H[85;130H^[[72;1H[85;130H  [72;1H[?25h[?25l[85;130Hd[72;1H[?25h[?25l[85;131Hd[72;1H[85;130H  [72;5H[72;84r[84;1H
[1;85r[85;1H[K[85;140H72,5[10CTop[72;5H[?25h[?25l[85;130H~@k[72;5H[85;130H   [71;4H[85;141H1,4[71;4H[?25h[?25l[85;130H~@k[71;4H[85;130H   [70;5H[59;53H[36m[46m{[70;5H}[m[85;141H0,5[70;5H[?25h[?25l[85;130H~@k[70;5H[85;130H   [69;1H[59;53H[36m{[70;5H}[m[85;140H69,0-1[69;1H[?25h[?25l[85;130Hd[69;1H[?25h[?25l[85;131Hd[69;1H[85;130H  [69;5H[59;84r[84;1H
[1;85r[59;5H[33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m[46m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[61;19H[K[62;7H[33mconst[m t1 = term();[62;25H[K[63;7H[33mif[m (kind === [31m'**'[m)[36m{[m[64;7H  t = t ** t1;[65;7H[36m}[m[33melse[m[36m{[m[65;14H[K[66;7H  t += (kind === [31m'+'[m) ? t1 : -t1;[67;7H[36m}[m[69;5H[36m[46m}[m[84;3H[36mfunction[m factor() [36m{[m[85;140H[K[85;140H69,5[10CTop[69;5H[?25h[?25l[85;130H^[[69;5H[85;130H  [69;5H[85;130H^[[69;5H[85;130H  [69;5H[?25h[?25l[85;130H:[69;5H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 143L, 2514C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clearvim calc.mjs [12@./calc.mjs expn-data.txt[C
[ [33m64[39m, [33m27[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt clear[Kvim calc.mjs [8Pclear./calc.mjs expn-data.txt [Kcd ..
kmoshie1@remote07:~/i471a/submit/lab1/exercises$ ls
01-regex  02-lexer  03-calc  04-ast  ast  calc	lexer  regex
kmoshie1@remote07:~/i471a/submit/lab1/exercises$ cd ast/
kmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ ls
ast.mjs  ast.py  data.json  data.txt  expn-data.json  expn-data.txt
kmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ vim ast.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"ast.mjs" 142L, 2490C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m asts = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hasts.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m asts;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7Ht = [33mnew[m Ast(kind, t, t1);
    [36m}[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[70;7Hmatch([31m'-'[m);[71;7H[33mreturn[m [33mnew[m Ast([31m'-'[m, term());
    [36m}[m
    [33melse[m [36m{[m[74;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m
    [33mif[m (check([31m'INT'[m)) [36m{[m[80;7H[33mconst[m value = parseInt(lookahead.lexeme);[81;7Hmatch([31m'INT'[m);[82;7H[33mconst[m ast = [33mnew[m Ast([31m'INT'[m);[83;7Hast.value = value;[84;7H[33mreturn[m ast;[85;140H1,1[11CTop[1;1H[?25h[?1000l[?1002h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36m}[m
    [33melse[m [36m{[m[84;7Hmatch([31m'('[m);[85;1H[K[85;140H9,1[12C5%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7H[33mconst[m value = expr();[83;7Hmatch([31m')'[m);[84;7H[33mreturn[m value;[85;140H[K[85;140H12,1[10C10%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36m}
[m  [36m}
}[m[85;140H[K[85;140H15,1[10C15%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[84;1H[36mfunction[m scan(text) [36m{[m[85;140H[K[85;140H18,1[10C20%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mconst[m tokens = [36m[][m;
  [33mwhile[m (text.length > 0) [36m{
[m    [36mlet[m m;[85;140H[K[85;140H21,1[10C25%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m ((m = text.match(/^[36m\[ms+/))) [36m{
[m    [36m}[m
    [33melse[m [33mif[m ((m = text.match(/^[36m\[md+/))) [36m{[m[85;140H[K[85;140H24,0-1[8C31%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7Htokens.push([33mnew[m Token([31m'INT'[m, m[36m[[m0[36m][m));
    [36m}[m
    [33melse[m [36m{[m[85;140H[K[85;140H27,1[10C36%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7Hm = text.match(/^./);[83;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m[85;140H[K[85;140H30,1[10C41%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5Htext = text.substring(m[36m[[m0[36m][m.length);
  [36m}[m
  [33mreturn[m tokens;[85;140H[K[85;140H33,1[10C46%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36m}[m[85;140H[K[85;140H36,1[10C51%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[33mconst[m CHAR_SET = [31m'utf8'[m;
[36mfunction[m main() [36m{[m
  [33mif[m (process.argv.length !== 3) usage();[85;140H[K[85;140H39,1[10C56%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mconst[m file = process.argv[36m[[m2[36m][m;
  [33mconst[m text = fs.readFileSync(file, CHAR_SET);
  [33mconst[m value = parse(text);[85;140H[K[85;140H42,1[10C62%[6;1H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3Hconsole.log(JSON.stringify(value));
[36m}[m[85;140H[K[85;140H45,1[10C67%[6;1H[?25h[?25l[66;10H[36m[46m{[69;5H}[m[85;140H105,10[66;10H[?25h[?25l[63;40H[36m[46m{[65;5H}[m[66;10H[36m{[69;5H}[m[85;142H4,5 [65;5H[?25h[?25l[85;130Ha[65;5H[85;130H [65;6H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H104,6[9C67%[65;6H[?25h[?25l[66;84r[66;1H[L[1;85r[85;140H[K[85;140H105,4-11      66%[63;40H[36m{[65;5H}[66;11H[?25h[?25l[m[85;144H3-10[66;10H[?25h[?25l[85;144H2-9 [66;9H[?25h[?25l[85;144H1  [66;1H[?25h[?25l[65;84r[84;1H
[1;85r[65;5H[36m}[m[85;140H[K[85;140H104,6[9C67%[63;40H[36m[46m{[65;5H}[?25h[?25l[66;84r[m[66;1H[L[1;85r[85;140H[K[85;140H105,4-11      66%[63;40H[36m{[65;5H}[66;11H[?25h[?25l[m[85;144H3-10[66;10H[?25h[?25l[85;144H2-9 [66;9H[?25h[?25l[85;144H1  [66;1H[?25h[?25l[85;144H2[66;2H[?25h[?25l[85;144H3[66;3H[?25h[?25l[85;144H4[66;4H[?25h[?25l[85;144H5[66;5H[?25h[?25le[85;144H6[66;6H[?25h[?25ll[85;144H7[66;7H[?25h[?25ls[85;144H8[66;8H[?25h[?25l[33melse[m[85;144H9[66;9H[?25h[?25l[85;144H10[66;10H[?25h[?25li[85;145H1[66;11H[?25h[?25l[33mif[m[85;145H2[66;12H[?25h[?25l([85;145H3[66;13H[?25h[?25l([85;145H4[66;14H[?25h[?25lm[85;145H5[66;15H[?25h[?25l[85;145H6[66;16H[?25h[?25l=[85;145H7[66;17H[?25h[?25l[85;145H8[66;18H[?25h[?25lt[85;145H9[66;19H[?25h[?25le[85;144H20[66;20H[?25h[?25lx[85;145H1[66;21H[?25h[?25lt[85;145H2[66;22H[?25h[?25l.[85;145H3[66;23H[?25h[?25lm[85;145H4[66;24H[?25h[?25la[85;145H5[66;25H[?25h[?25lt[85;145H6[66;26H[?25h[?25lc[85;145H7[66;27H[?25h[?25lh[85;145H8[66;28H[?25h[?25l([85;145H9[66;29H[?25h[?25l/[85;144H30[66;30H[?25h[?25l^[85;145H1[66;31H[?25h[?25l[36m\[m[85;145H2[66;32H[?25h[?25l*[85;145H3[66;33H[?25h[?25l[36m\[m[85;145H4[66;34H[?25h[?25l*[85;145H5[66;35H[?25h[?25l/[85;145H6[66;36H[?25h[?25l)[66;28H[46m([7C)[m[85;145H7[66;37H[?25h[?25l)[66;13H[46m([m[14C([7C)[46m)[m[85;145H8[66;38H[?25h[?25l)[66;12H[46m([m([23C)[46m)[m[85;145H9[66;39H[?25h[?25l[66;12H([25C)[85;144H40[66;40H[?25h[?25l[36m{[m[36m[46m{[72;3H}[m[85;145H1[66;41H[?25h[?25l[67;84r[67;1H[L[1;85r[72;3H[46m [m
  [36m}[m[85;140H[K[85;140H106,6-13      65%[66;40H[36m{[m[72;3H [67;13H[?25h[?25l[68;84r[68;1H[L[1;85r[85;140H[K[85;140H107,6-13      63%[68;13H[?25h[?25l    [36m}[m[66;40H[36m[46m{[68;5H}[m[85;145H   [68;6H[?25h[?25l[66;40H[36m{[68;5H}[m[85;142H6,1[67;1H[?25h[?25l[85;144H2[67;2H[?25h[?25l[85;144H3[67;3H[?25h[?25l[85;144H4[67;4H[?25h[?25l[85;144H5[67;5H[?25h[?25l[85;144H6[67;6H[?25h[?25l[85;144H7[67;7H[?25h[?25l[85;144H8[67;8H[?25h[?25l[85;144H7[67;7H[?25h[?25lt[85;144H8[67;8H[?25h[?25lo[85;144H9[67;9H[?25h[?25lk[85;144H10[67;10H[?25h[?25le[85;145H1[67;11H[?25h[?25ln[85;145H2[67;12H[?25h[?25ls[85;145H3[67;13H[?25h[?25l.[85;145H4[67;14H[?25h[?25lo[85;145H5[67;15H[?25h[?25l[67;14H[K[85;145H4[67;14H[?25h[?25lp[85;145H5[67;15H[?25h[?25lu[85;145H6[67;16H[?25h[?25ls[85;145H7[67;17H[?25h[?25lh[85;145H8[67;18H[?25h[?25l([85;145H9[67;19H[?25h[?25ln[85;144H20[67;20H[?25h[?25le[85;145H1[67;21H[?25h[?25l[33mnew[m[85;145H2[67;22H[?25h[?25l[85;145H3[67;23H[?25h[?25lT[85;145H4[67;24H[?25h[?25lo[85;145H5[67;25H[?25h[?25lk[85;145H6[67;26H[?25h[?25le[85;145H7[67;27H[?25h[?25ln[85;145H8[67;28H[?25h[?25l([85;145H9[67;29H[?25h[?25lm[85;144H30[67;30H[?25h[?25l[36m[[m[85;145H1[67;31H[?25h[?25l0[85;145H2[67;32H[?25h[?25l[36m][m[36m[46m[[m0[36m[46m][m[85;145H3[67;33H[?25h[?25l[36m[[[m0[36m][m[85;145H4[67;34H[?25h[?25l[67;33H[K[67;30H[36m[46m[[m0[36m[46m][m[85;145H3[67;33H[?25h[?25l,[36m[[m0[36m][m[85;145H4[67;34H[?25h[?25lm[85;145H5[67;35H[?25h[?25l[36m[[m[85;145H6[67;36H[?25h[?25l0[85;145H7[67;37H[?25h[?25l[36m][m[36m[46m[[m0[36m[46m][m[85;145H8[67;38H[?25h[?25l)[67;28H[46m([m[6C[36m[[m0[36m][m[46m)[m[85;145H9[67;39H[?25h[?25l)[67;18H[46m([m[9C([9C)[46m)[m[85;144H40[67;40H[?25h[?25l;[67;18H([20C)[85;145H1[67;41H[?25h[?25l[63;40H[36m[46m{[65;5H}[m[85;142H4,6 [65;6H[?25h[85;1H[K[65;5H[?25l[85;130H^[[65;5H[85;130H  [65;6H[85;140H104,5[9C63%[65;5H[?25h[?25l[85;130H:[65;5H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"ast.mjs" 145L, 2578C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ cd ..
kmoshie1@remote07:~/i471a/submit/lab1/exercises$ ls
01-regex  02-lexer  03-calc  04-ast  ast  calc	lexer  regex
kmoshie1@remote07:~/i471a/submit/lab1/exercises$ cd ca[Kalc/
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 143L, 2514C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m[46m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7H[33mif[m (kind === [31m'**'[m)[36m{[m[64;9Ht = t ** t1;[65;7H[36m}[m[33melse[m[36m{[m[66;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[67;7H[36m}[m[69;5H[36m[46m}[m[71;5H[33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[76;7Hmatch([31m'-'[m);[77;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[80;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m[85;140H69,5[10CTop[69;5H[?25h[?1000l[?1002h[?25l[85;130H~@k[69;5H[85;130H   [70;4H[59;53H[36m{[69;5H}[m[85;140H70,4[70;4H[?25h[?25l[85;130H~@k[70;4H[85;130H   [71;5H[85;141H1,5[71;5H[?25h[?25l[85;130H~@k[71;5H[85;130H   [70;4H[85;141H0,4[70;4H[?25h[?25l[85;130H~@k[70;4H[85;130H   [69;5H[59;53H[36m[46m{[69;5H}[m[85;140H69,5[69;5H[?25h[?25l[85;130H~@k[69;5H[85;130H   [68;1H[59;53H[36m{[69;5H}[m[85;141H8,0-1[68;1H[?25h[?25l[85;130H~@k[68;1H[85;130H   [67;5H[85;141H7,5  [67;5H[?25h[?25l[85;130H~@k[67;5H[85;130H   [66;5H[85;141H6[66;5H[?25h[?25l[85;130H~@k[66;5H[85;130H   [65;5H[85;141H5[65;5H[?25h[?25l[85;130H~@k[65;5H[85;130H   [64;5H[85;141H4[64;5H[?25h[?25l[85;130H~@k[64;5H[85;130H   [63;5H[85;141H3[63;5H[?25h[?25l[85;130H~@k[63;5H[85;130H   [63;6H[85;143H6[63;6H[?25h[?25l[85;130H~@k[63;6H[85;130H   [63;7H[85;143H7[63;7H[?25h[?25l[85;130H~@k[63;7H[85;130H   [63;8H[85;143H8[63;8H[?25h[?25l[85;130H~@k[63;8H[85;130H   [63;9H[85;143H9[63;9H[?25h[?25l[85;130H~@k[63;9H[85;130H   [63;10H[46m([13C)[m[85;143H10[63;10H[?25h[?25l[85;130H~@k[63;10H[85;130H   [63;11H([13C)[85;144H1[63;11H[?25h[?25l[85;130H~@k[63;11H[85;130H   [63;12H[85;144H2[63;12H[?25h[?25l[85;130H~@k[63;12H[85;130H   [63;13H[85;144H3[63;13H[?25h[?25l[85;130H~@k[63;13H[85;130H   [63;14H[85;144H4[63;14H[?25h[?25l[85;130H~@k[63;14H[85;130H   [63;15H[85;144H5[63;15H[?25h[?25l[85;130H~@k[63;15H[85;130H   [63;16H[85;144H6[63;16H[?25h[?25l[85;130H~@k[63;16H[85;130H   [63;17H[85;144H7[63;17H[?25h[?25l[85;130H~@k[63;17H[85;130H   [63;18H[85;144H8[63;18H[?25h[?25l[85;130H~@k[63;18H[85;130H   [63;19H[85;144H9[63;19H[?25h[?25l[85;130H~@k[63;19H[85;130H   [62;19H[85;141H2[62;19H[?25h[?25l[85;130H~@k[62;19H[85;130H   [61;18H[85;141H1,18[61;18H[?25h[?25l[85;130H~@k[61;18H[85;130H   [60;19H[85;141H0,19[60;19H[?25h[?25l[85;130H~@k[60;19H[85;130H   [59;19H[85;140H59[59;19H[?25h[?25l[85;130H~@k[59;19H[85;130H   [58;19H[85;141H8[58;19H[?25h[?25l[85;130H~@k[58;19H[85;130H   [58;19H[?25h[?25l[85;130Ha[58;19H[85;130H [58;20H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H58,20[9CTop[58;20H[?25h[?25l[59;84r[59;1H[L[1;85r[85;140H[K[85;140H59,4-11[7CTop[59;11H[?25h[?25l[85;143H3-10[59;10H[?25h[?25l[85;143H2-9 [59;9H[?25h[?25l[85;143H1  [59;1H[?25h[?25l[58;84r[84;1H
[1;85r[58;5H[36mlet[m t = term();[84;3H[36mfunction[m factor() [36m{[m[85;140H[K[85;140H58,20[9CTop[58;20H[?25h[?25l[59;84r[59;1H[L[1;85r[85;140H[K[85;140H59,4-11[7CTop[59;11H[?25h[?25l[85;143H3-10[59;10H[?25h[?25l[85;143H2-9 [59;9H[?25h[?25l[85;143H1  [59;1H[?25h[?25l[85;143H2[59;2H[?25h[?25l[85;143H3[59;3H[?25h[?25l[85;143H4[59;4H[?25h[?25l[85;143H5[59;5H[?25h[?25lw[85;143H6[59;6H[?25h[?25lh[85;143H7[59;7H[?25h[?25li[85;143H8[59;8H[?25h[?25ll[85;143H9[59;9H[?25h[?25l[33mwhile[m[85;143H10[59;10H[?25h[?25l([85;144H1[59;11H[?25h[?25l[59;10H[K[85;144H0[59;10H[?25h[?25l[85;144H1[59;11H[?25h[?25l9[85;144H2[59;12H[?25h[?25l[59;11H[K[85;144H1[59;11H[?25h[?25l([85;144H2[59;12H[?25h[?25lc[85;144H3[59;13H[?25h[?25lh[85;144H4[59;14H[?25h[?25le[85;144H5[59;15H[?25h[?25lc[85;144H6[59;16H[?25h[?25lk[85;144H7[59;17H[?25h[?25l[60;17H[46m([3C)[m[85;140H60[60;17H[?25h[?25l([3C)[85;141H1[61;17H[?25h[?25l[62;12H[46m([mkind[46m)[m[85;141H2[62;17H[?25h[?25l(kind)[85;141H3[63;17H[?25h[?25l[85;141H4[64;17H[?25h[?25l[85;141H3[63;17H[?25h[?25l[85;141H4[64;17H[?25h[?25l[85;141H3[63;17H[?25h[?25l[85;141H4[64;17H[?25h[?25l[85;141H3[63;17H[?25h[?25l[62;12H[46m([mkind[46m)[m[85;141H2[62;17H[?25h[?25l(kind)[85;141H1[61;17H[?25h[?25l[60;17H[46m([3C)[m[85;141H0[60;17H[?25h[?25l([3C)[85;140H59[59;17H[?25h[?25l[36m{[m[36m[46m{[73;3H}[m[85;144H8[59;18H[?25h[?25l[59;17H[K[73;3H[36m}[m[85;144H7[59;17H[?25h[?25l([85;144H8[59;18H[?25h[?25l[31m'[m[85;144H9[59;19H[?25h[?25l[31m*[m[85;143H20[59;20H[?25h[?25l[31m*[m[85;144H1[59;21H[?25h[?25l[31m'[m[85;144H2[59;22H[?25h[?25l)[46m([4C)[m[85;144H3[59;23H[?25h[?25l_[59;17H([4C)[85;144H4[59;24H[?25h[?25l[59;23H[K[59;17H[46m([4C)[m[85;144H3[59;23H[?25h[?25l)[59;11H[46m([mcheck([4C)[46m)[m[85;144H4[59;24H[?25h[?25l[36m{[m[59;11H([11C)[36m[46m{[73;3H}[m[85;144H5[59;25H[?25h[?25l[60;84r[60;1H[L[1;85r[73;3H[46m [m
  [36m}[m[85;140H[K[85;140H60,6-13[7CTop[59;24H[36m{[m[73;3H [60;13H[?25h[?25l[85;143H5-12[60;12H[?25h[?25l[85;143H6-13[60;13H[?25h[?25l[61;84r[61;1H[L[1;85r[85;140H[K[85;140H61,6-13[7CTop[61;13H[?25h[?25l[85;143H5-12[61;12H[?25h[?25l[85;143H4-11[61;11H[?25h[?25l[85;143H3-10[61;10H[?25h[?25l[85;143H2-9 [61;9H[?25h[?25l[85;143H1  [61;1H[?25h[?25l[60;84r[84;1H
[1;85r[84;3H[36m}[m[85;140H[K[85;140H60,6-13[7CTop[60;13H[?25h[?25l[61;84r[61;1H[L[1;85r[85;140H[K[85;140H61,6-13[7CTop[61;13H[?25h[?25l    [36m}[m[59;24H[36m[46m{[61;5H}[m[85;144H   [61;6H[?25h[?25l[59;24H[36m{[61;5H}[m[85;141H0,1[60;1H[?25h[?25l[85;143H2-9[60;9H[?25h[?25lc[85;143H3-10[60;10H[?25h[?25lo[85;143H4-11[60;11H[?25h[?25ln[85;143H5-12[60;12H[?25h[?25ls[85;143H6-13[60;13H[?25h[?25l[33mconst[m[85;143H7-14[60;14H[?25h[?25l[85;143H8-15[60;15H[?25h[?25lt[85;143H9-16[60;16H[?25h[?25l1[85;143H10-17[60;17H[?25h[?25l[85;144H1-18[60;18H[?25h[?25l=[85;144H2-19[60;19H[?25h[?25l[85;144H3-20[60;20H[?25h[?25lt[85;144H4-21[60;21H[?25h[?25le[85;144H5-22[60;22H[?25h[?25lr[85;144H6-23[60;23H[?25h[?25lm[85;144H7-24[60;24H[?25h[?25l([85;144H8-25[60;25H[?25h[?25l)[46m()[m[85;144H9-26[60;26H[?25h[?25l;()[85;143H20-27[60;27H[?25h[?25l[61;84r[61;1H[L[1;85r[85;140H[K[85;140H61,6-13[7CTop[61;13H[?25h[?25l[85;143H5-12[61;12H[?25h[?25l[85;143H4-11[61;11H[?25h[?25l[85;143H3-10[61;10H[?25h[?25l[85;143H2-9 [61;9H[?25h[?25lt[85;143H3-10[61;10H[?25h[?25l[85;143H4-11[61;11H[?25h[?25l=[85;143H5-12[61;12H[?25h[?25l[85;143H6-13[61;13H[?25h[?25lt[85;143H7-14[61;14H[?25h[?25l*[85;143H8-15[61;15H[?25h[?25lt[85;143H9-16[61;16H[?25h[?25l1[85;143H10-17[61;17H[?25h[?25l[61;16H[K[85;143H9-16 [61;16H[?25h[?25l[61;15H[K[85;143H8-15[61;15H[?25h[?25l[61;14H[K[85;143H7-14[61;14H[?25h[?25l[85;143H8-15[61;15H[?25h[?25l*[85;143H9-16[61;16H[?25h[?25l*[85;143H10-17[61;17H[?25h[?25l[85;144H1-18[61;18H[?25h[?25lt[85;144H2-19[61;19H[?25h[?25l1[85;144H3-20[61;20H[?25h[?25l;[85;144H4-21[61;21H[?25h[?25l[59;24H[36m[46m{[62;5H}[m[85;141H2,6    [62;6H[?25h[?25l[59;24H[36m{[62;5H}[m[63;17H[46m([3C)[m[85;141H3,21[63;21H[?25h[?25l[85;144H2[63;22H[?25h[?25l([3C)[85;144H3[63;23H[?25h[?25l[85;144H4[63;24H[?25h[?25l[85;144H5[63;25H[?25h[?25l[85;144H6[63;26H[?25h[?25l[85;144H7[63;27H[?25h[?25l[85;144H8[63;28H[?25h[?25l[85;144H9[63;29H[?25h[?25l[85;143H30[63;30H[?25h[?25lk[46m([3C)[m[85;144H1[63;31H[?25h[?25l[85;144H2[63;32H[?25h[?25l([3C)[85;144H3[63;33H[?25h[?25l[85;144H4[63;34H[?25h[?25l[46m([3C)[m[85;144H5[63;35H[?25h[?25l[85;144H6[63;36H[?25h[?25l([3C)[85;144H7[63;37H[?25h[?25l[85;144H8[63;38H[?25h[?25l[85;144H9[63;39H[?25h[?25l[85;143H40[63;40H[?25h[?25l[85;144H1[63;41H[?25h[?25l[85;144H2[63;42H[?25h[?25l[85;144H3[63;43H[?25h[?25l[85;144H4[63;44H[?25h[?25lk[46m([4C)[m[85;144H5[63;45H[?25h[?25l[85;144H6[63;46H[?25h[?25l([4C)[85;144H7[63;47H[?25h[?25l[85;144H8[63;48H[?25h[?25l[31ma*'[m)) [36m{[m[85;144H9[63;49H[?25h[?25l[85;143H50[63;50H[?25h[?25l[46m([5C)[m[85;144H1[63;51H[?25h[?25l[63;11H[46m([m[33C([5C)[46m)[m[85;144H2[63;52H[?25h[?25l[46m [m[36m{[m[63;54H[K[63;11H([33C[46m([5C)[m [85;144H1[63;51H[?25h[?25l[31m)[m[31m[46m [m[31m{[m[63;53H[K[63;50H[31m[46m)[m[31m [m[85;144H0[63;50H[?25h[?25l[31m)[m[31m[46m [m[31m{[m[63;52H[K[63;49H[31m[46m)[m[31m [m[85;143H49[63;49H[?25h[?25l[31m)[m[31m[46m [m[31m{[m[63;51H[K[63;48H[31m[46m)[m[31m [m[85;144H8[63;48H[?25h[?25l[31m)[m[31m[46m [m[31m{[m[63;50H[K[63;47H[31m[46m)[m[31m [m[85;144H7[63;47H[?25h[?25l)[46m [m[36m{[m[63;49H[K[63;46H[46m)[m [85;144H6[63;46H[?25h[?25l[46m) [m[36m{[m[63;48H[K[63;11H[46m([m[34C [85;144H5[63;45H[?25h[?25l)[46m [m[36m{[m[63;47H[K[63;44H[46m)[m [85;144H4[63;44H[?25h[?25l)[46m [m[36m{[m[63;46H[K[63;43H[46m)[m [85;144H3[63;43H[?25h[?25l)[46m [m[36m{[m[63;45H[K[63;42H[46m)[m [85;144H2[63;42H[?25h[?25l)[46m [m[36m{[m[63;44H[K[63;41H[46m)[m [85;144H1[63;41H[?25h[?25l)[46m [m[36m{[m[63;43H[K[63;40H[46m)[m [85;144H0[63;40H[?25h[?25l)[46m [m[36m{[m[63;42H[K[63;39H[46m)[m [85;143H39[63;39H[?25h[?25l)[46m [m[36m{[m[63;41H[K[63;38H[46m)[m [85;144H8[63;38H[?25h[?25l)[46m [m[36m{[m[63;40H[K[63;37H[46m)[m [85;144H7[63;37H[?25h[?25l)[46m [m[36m{[m[63;39H[K[63;36H[46m)[m [85;144H6[63;36H[?25h[?25l[46m [m[36m{[m[63;38H[K[63;11H([19C[46m([3C)[m [85;144H5[63;35H[?25h[?25l[1C) [36m{[m[63;11H[46m([m[19C([3C)[46m)[m[85;144H6[63;36H[?25h[?25l[63;11H([24C)[85;141H4,35[64;35H[?25h[?25l[85;141H5,19[65;19H[?25h[?25l[85;141H6,25[66;25H[?25h[?25l[46m()[m[85;144H4[66;24H[?25h[?25l[85;144H3[66;23H[?25h[?25l()[85;141H7[67;23H[?25h[?25l[85;144H2[67;22H[?25h[?25l[85;144H1[67;21H[?25h[?25l[85;144H0[67;20H[?25h[?25l[85;143H19[67;19H[?25h[?25l[85;144H8[67;18H[?25h[?25l[85;144H7[67;17H[?25h[?25l[85;144H6[67;16H[?25h[?25l[85;144H5[67;15H[?25h[?25l[85;144H4[67;14H[?25h[?25l[85;144H3[67;13H[?25h[?25l[85;144H2[67;12H[?25h[?25l[46m([13C)[m[85;144H1[67;11H[?25h[?25l[85;144H0[67;10H[?25h[?25l([13C)[85;143H9 [67;9H[?25h[?25l[85;143H8[67;8H[?25h[?25l[85;143H7[67;7H[?25h[?25laif (kind === [31m'**'[m)[36m{[m[85;143H8[67;8H[?25h[?25l[33mif[m (kind === [31m'**'[m)[36m{[m[67;26H[K[85;143H7[67;7H[?25h[?25l      #[33mif[m (kind === [31m'**'[m)[36m{[m[85;144H-14[67;14H[?25h[?25l[33mif[m (kind === [31m'**'[m)[36m{[m[67;32H[K[85;143H6-13[67;13H[?25h[?25l[33mif[m (kind === [31m'**'[m)[36m{[m[67;31H[K[85;143H5-12[67;12H[?25h[?25l[33mif[m (kind === [31m'**'[m)[36m{[m[67;30H[K[85;143H4-11[67;11H[?25h[?25l[33mif[m (kind === [31m'**'[m)[36m{[m[67;29H[K[85;143H3-10[67;10H[?25h[?25l[33mif[m (kind === [31m'**'[m)[36m{[m[67;28H[K[85;143H2-9 [67;9H[?25h[?25l[33mif[m (kind === [31m'**'[m)[36m{[m[67;20H[K[85;143H1  [67;1H[?25h[?25l [33mif[m (kind === [31m'**'[m)[36m{[m[85;143H2[67;2H[?25h[?25l [33mif[m (kind === [31m'**'[m)[36m{[m[85;143H3[67;3H[?25h[?25l [33mif[m (kind === [31m'**'[m)[36m{[m[85;143H4[67;4H[?25h[?25l [33mif[m (kind === [31m'**'[m)[36m{[m[85;143H5[67;5H[?25h[?25l [33mif[m (kind === [31m'**'[m)[36m{[m[85;143H6[67;6H[?25h[?25l [33mif[m (kind === [31m'**'[m)[36m{[m[85;143H7[67;7H[?25h[?25l/[33mif[m (kind === [31m'**'[m)[36m{[m[85;143H8[67;8H[?25h[?25l[34m//if (kind === '**'){[m[85;143H9[67;9H[?25h[?25l[85;141H8[68;9H[?25h[?25l[85;143H8[68;8H[?25h[?25l[85;143H7[68;7H[?25h[?25l/  t = t ** t1;[85;143H8[68;8H[?25h[?25l[34m//  t = t ** t1;[m[85;143H9[68;9H[?25h[?25l[85;141H9[69;9H[?25h[?25l[63;38H[36m[46m{[69;7H}[m[85;143H8[69;8H[?25h[?25l[85;143H7[69;7H[?25h[?25l[46m/[m[36m}[m[33melse[m[36m{[m[69;7H/[36m[46m}[m[85;143H8[69;8H[?25h[?25l[34m/[m[34m[46m/[m[34m}else{[m[63;38H[36m{[m[67;27H[34m[46m{[m[69;8H[34m/[m[34m[46m}[m[85;143H9[69;9H[?25h[?25l[67;27H[34m{[69;9H}[m[85;140H70[70;9H[?25h[?25l[85;143H8[70;8H[?25h[?25l[63;38H[36m[46m{[71;7H}[m[85;141H1[71;8H[?25h[?25l[85;143H7[71;7H[?25h[?25l[46m/[m[36m}[m/[36m[46m}[m[85;143H8[71;8H[?25h[?25l[34m/[m[34m[46m/[m[34m}[m[63;38H[36m{[m[69;14H[34m[46m{[m[71;8H[34m/[m[34m[46m}[m[85;143H9[71;9H[?25h[?25l[69;14H[34m{[71;9H}[m[85;141H0[70;9H[?25h[?25lt += (kind === [31m'+'[m) ? t1 : -t1;[70;39H[K[85;143H8[70;8H[?25h[?25lt += (kind === [31m'+'[m) ? t1 : -t1;[70;38H[K[85;143H7[70;7H[?25h[85;1H[K[70;6H[?25l[85;130H^[[70;6H[85;130H  [70;7H[85;140H70,6[10CTop[70;6H[?25h[?25l[85;130H:[70;6H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 147L, 2570C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clearvim calc.mjs [5Pcd calc/ls[Kcd ..vim ast.mjs ls[Kcd ast/ls[Kcd .../calc.mjs expn-data.txt 
expecting ( at **
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt clear[Kvim calc.mjs [5Pcd calc/ls[Kcd ..vim ast.mjs ls[Kcd ast/ls[Kcd .../calc.mjs expn-data.txt clear[Kvim calc.mjs [12@./calc.mjs expn-data.txt[Cclear[Kvim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 147L, 2570C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'**'[m))[36m{[m[60;9H[33mconst[m t1 = term();[61;9Ht = t ** t1;
    [36m}[m
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[64;7H[33mconst[m kind = lookahead.kind;[65;7Hmatch(kind);[66;7H[33mconst[m t1 = term();[67;7H[34m//if (kind === '**'){[68;7H//  t = t ** t1;[69;7H//}else{[m[70;7Ht += (kind === [31m'+'[m) ? t1 : -t1;[71;7H[34m//}[m[73;5H[36m}[m[75;5H[33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[80;7Hmatch([31m'-'[m);[81;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[84;7H[33mreturn[m factor();[85;140H70,6[10CTop[70;6H[?25h[?1000l[?1002h[?25l[85;130H~@k[70;6H[85;130H   [69;6H[85;140H69[69;6H[?25h[?25l[85;130H~@k[69;6H[85;130H   [68;6H[85;141H8[68;6H[?25h[?25l[85;130H~@k[68;6H[85;130H   [67;6H[85;141H7[67;6H[?25h[?25l[85;130H~@k[67;6H[85;130H   [66;6H[85;141H6[66;6H[?25h[?25l[85;130H~@k[66;6H[85;130H   [65;6H[85;141H5[65;6H[?25h[?25l[85;130H~@k[65;6H[85;130H   [64;6H[85;141H4[64;6H[?25h[?25l[85;130H~@k[64;6H[85;130H   [63;6H[85;141H3[63;6H[?25h[?25l[85;130H~@k[63;6H[85;130H   [62;5H[59;24H[36m[46m{[62;5H}[m[85;141H2,5[62;5H[?25h[?25l[85;130H~@k[62;5H[85;130H   [61;8H[59;24H[36m{[62;5H}[m[85;141H1,1-8[61;8H[?25h[?25l[85;130H~@k[61;8H[85;130H   [60;8H[85;141H0[60;8H[?25h[?25l[85;130H~@k[60;8H[85;130H   [59;6H[85;140H59,6  [59;6H[?25h[?25l[85;130H~@k[59;6H[85;130H   [58;6H[85;141H8[58;6H[?25h[?25l[85;130H~@k[58;6H[85;130H   [57;6H[85;141H7[57;6H[?25h[?25l[85;130H~@k[57;6H[85;130H   [56;1H[85;141H6,0-1[56;1H[?25h[?25l[85;130H~@k[56;1H[85;130H   [55;3H[48;22H[36m[46m{[55;3H}[m[85;141H5,3  [55;3H[?25h[?25l[85;130H~@k[55;3H[85;130H   [54;6H[48;22H[36m{[55;3H}[m[85;141H4,6[54;6H[?25h[?25l[85;130H~@k[54;6H[85;130H   [55;3H[48;22H[36m[46m{[55;3H}[m[85;141H5,3[55;3H[?25h[?25l[85;130H~@k[55;3H[85;130H   [56;1H[48;22H[36m{[55;3H}[m[85;141H6,0-1[56;1H[?25h[?25l[85;130H~@k[56;1H[85;130H   [57;6H[85;141H7,6  [57;6H[?25h[?25l[85;130H~@k[57;6H[85;130H   [58;6H[85;141H8[58;6H[?25h[?25l[85;130H~@k[58;6H[85;130H   [59;6H[85;141H9[59;6H[?25h[?25l[85;130H~@k[59;6H[85;130H   [60;8H[85;140H60,1-8[60;8H[?25h[?25l[85;130H~@k[60;8H[85;130H   [61;8H[85;141H1[61;8H[?25h[?25l[85;130H~@k[61;8H[85;130H   [62;5H[59;24H[36m[46m{[62;5H}[m[85;141H2,5  [62;5H[?25h[?25l[85;130H~@k[62;5H[85;130H   [63;6H[59;24H[36m{[62;5H}[m[85;141H3,6[63;6H[?25h[?25l[85;130H~@k[63;6H[85;130H   [62;5H[59;24H[36m[46m{[62;5H}[m[85;141H2,5[62;5H[?25h[?25l[85;130H~@k[62;5H[85;130H   [61;8H[59;24H[36m{[62;5H}[m[85;141H1,1-8[61;8H[?25h[?25l[85;130H~@k[61;8H[85;130H   [60;8H[85;141H0[60;8H[?25h[?25l[85;130H~@k[60;8H[85;130H   [59;6H[85;140H59,6  [59;6H[?25h[?25l[85;130H~@k[59;6H[85;130H   [58;6H[85;141H8[58;6H[?25h[?25l[85;130H~@k[58;6H[85;130H   [58;7H[85;143H7[58;7H[?25h[?25l[85;130H~@k[58;7H[85;130H   [58;8H[85;143H8[58;8H[?25h[?25l[85;130H~@k[58;8H[85;130H   [58;9H[85;143H9[58;9H[?25h[?25l[85;130H~@k[58;9H[85;130H   [58;10H[85;143H10[58;10H[?25h[?25l[85;130H~@k[58;10H[85;130H   [58;11H[85;144H1[58;11H[?25h[?25l[85;130H~@k[58;11H[85;130H   [58;12H[85;144H2[58;12H[?25h[?25l[85;130H~@k[58;12H[85;130H   [58;13H[85;144H3[58;13H[?25h[?25l[85;130H~@k[58;13H[85;130H   [58;14H[85;144H4[58;14H[?25h[?25l[85;130H~@k[58;14H[85;130H   [58;15H[85;144H5[58;15H[?25h[?25l[85;130H~@k[58;15H[85;130H   [58;16H[85;144H6[58;16H[?25h[?25l[85;130H~@k[58;16H[85;130H   [58;17H[46m()[m[85;144H7[58;17H[?25h[?25l[85;130H~@k[58;17H[85;130H   [58;18H[85;144H8[58;18H[?25h[?25l[85;130H~@k[58;18H[85;130H   [58;19H()[85;144H9[58;19H[?25h[?25l[85;130H~@k[58;19H[85;130H   [58;19H[?25h[?25l[85;130H~@k[58;19H[85;130H   [58;19H[?25h[?25l[85;130H~@k[58;19H[85;130H   [58;19H[?25h[?25l[85;130H~@k[58;19H[85;130H   [58;19H[?25h[?25l[85;130H~@k[58;19H[85;130H   [58;19H[?25h[?25l[85;130H~@k[58;19H[85;130H   [58;19H[?25h[?25l[85;130H~@k[58;19H[85;130H   [58;19H[?25h[?25l[85;130Ha[58;19H[85;130H [58;20H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H58,20[9CTop[58;20H[?25h[?25l[85;141H9[59;20H[?25h[?25l[4C[36m[46m{[62;5H}[m[85;144H5[59;25H[?25h[?25l[36m{[62;5H}[m[85;140H60,20-27[60;27H[?25h[?25l[85;141H1,14-21[61;21H[?25h[?25l[59;24H[36m[46m{[62;5H}[m[85;141H2,6    [62;6H[?25h[?25l[59;24H[36m{[62;5H}[m[85;141H3,29[63;29H[?25h[?25l[85;141H4[64;29H[?25h[?25l[85;141H5,1[65;19H[?25h[?25l[85;141H6,25[66;25H[?25h[?25l[67;27H[34m[46m{[69;9H}[m[85;141H7,28[67;28H[?25h[?25l[34m{[69;9H}[m[85;141H8,23[68;23H[?25h[?25l[69;14H[34m[46m{[71;9H}[m[85;141H9,15[69;15H[?25h[?25l[34m{[71;9H}[m[85;140H70,29[70;29H[?25h[?25l[69;14H[34m[46m{[71;9H}[m[85;141H1,10[71;10H[?25h[?25l[69;14H[34m{[71;9H}[m[85;141H2,1 [72;1H[?25h[?25l[63;38H[36m[46m{[73;5H}[m[85;141H3,6[73;6H[?25h[?25l[63;38H[36m{[73;5H}[m[85;141H4,5[74;5H[?25h[?25la[85;143H6[74;6H[?25h[?25l[74;5H[K[85;143H5[74;5H[?25h[?25lc[85;143H6[74;6H[?25h[?25lo[85;143H7[74;7H[?25h[?25ln[85;143H8[74;8H[?25h[?25ls[85;143H9[74;9H[?25h[?25lo[85;143H10[74;10H[?25h[?25ll[85;144H1[74;11H[?25h[?25le[85;144H2[74;12H[?25h[?25l.[85;144H3[74;13H[?25h[?25ll[85;144H4[74;14H[?25h[?25lo[85;144H5[74;15H[?25h[?25lg[85;144H6[74;16H[?25h[?25l([85;144H7[74;17H[?25h[?25lt[85;144H8[74;18H[?25h[?25l)[46m([mt[46m)[m[85;144H9[74;19H[?25h[85;1H[K[74;18H[?25l[85;130H^[[74;18H[85;130H  [74;19H[85;140H74,18[9CTop[74;18H[?25h[?25l[85;130H:[74;18H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 147L, 2584C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs [12@./calc.mjs expn-data.txt[Cclear[Kvim calc.mjs [8Pclear./calc.mjs expn-data.txt 
expecting ( at **
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C[12@./calc.mjs expn-data.txt[Cclear[Kvim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 147L, 2584C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'**'[m))[36m{[m[60;9H[33mconst[m t1 = term();[61;9Ht = t ** t1;
    [36m}[m
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[64;7H[33mconst[m kind = lookahead.kind;[65;7Hmatch(kind);[66;7H[33mconst[m t1 = term();[67;7H[34m//if (kind === '**'){[68;7H//  t = t ** t1;[69;7H//}else{[m[70;7Ht += (kind === [31m'+'[m) ? t1 : -t1;[71;7H[34m//}[m[73;5H[36m}[m
    console.log[46m([mt[46m)[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[80;7Hmatch([31m'-'[m);[81;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[84;7H[33mreturn[m factor();[85;140H74,18[9CTop[74;18H[?25h[?1000l[?1002h[?25l[85;130H~@k[74;18H[85;130H   [73;5H[63;38H[36m[46m{[73;5H}[m[74;16H(t)[85;141H3,5 [73;5H[?25h[?25l[85;130H~@k[73;5H[85;130H   [72;1H[63;38H[36m{[73;5H}[m[85;141H2,0-1[72;1H[?25h[?25l[85;130H~@k[72;1H[85;130H   [71;9H[69;14H[34m[46m{[71;9H}[m[85;141H1,9  [71;9H[?25h[?25l[85;130H~@k[71;9H[85;130H   [70;18H[69;14H[34m{[71;9H}[m[85;141H0,18[70;18H[?25h[?25l[85;130H~@k[70;18H[85;130H   [69;14H[34m[46m{[71;9H}[m[85;140H69,14[69;14H[?25h[?25l[85;130H~@k[69;14H[85;130H   [68;18H[69;14H[34m{[71;9H}[m[85;141H8,18[68;18H[?25h[?25l[85;130H~@k[68;18H[85;130H   [67;18H[85;141H7[67;18H[?25h[?25l[85;130H~@k[67;18H[85;130H   [66;18H[85;141H6[66;18H[?25h[?25l[85;130H~@k[66;18H[85;130H   [65;18H[85;141H5[65;18H[?25h[?25l[85;130H~@k[65;18H[85;130H   [64;18H[85;141H4[64;18H[?25h[?25l[85;130H~@k[64;18H[85;130H   [63;18H[85;141H3[63;18H[?25h[?25l[85;130H~@k[63;18H[85;130H   [62;5H[59;24H[36m[46m{[62;5H}[m[85;141H2,5 [62;5H[?25h[?25l[85;130H~@k[62;5H[85;130H   [61;18H[59;24H[36m{[62;5H}[m[85;141H1,11-18[61;18H[?25h[?25l[85;130H~@k[61;18H[85;130H   [60;18H[85;141H0[60;18H[?25h[?25l[85;130H~@k[60;18H[85;130H   [59;18H[85;140H59,18   [59;18H[?25h[?25l[85;130H~@k[59;18H[85;130H   [58;18H[46m()[m[85;141H8[58;18H[?25h[?25l[85;130H~@k[58;18H[85;130H   [57;18H[58;17H()[85;141H7[57;18H[?25h[?25l[85;130H~@k[57;18H[85;130H   [58;18H[46m()[m[85;141H8[58;18H[?25h[?25l[85;130H~@k[58;18H[85;130H   [57;18H[58;17H()[85;141H7[57;18H[?25h[?25l[85;130H~@k[57;18H[85;130H   [56;1H[85;141H6,0-1[56;1H[?25h[?25l[85;130H~@k[56;1H[85;130H   [55;3H[48;22H[36m[46m{[55;3H}[m[85;141H5,3  [55;3H[?25h[?25l[85;130H~@k[55;3H[85;130H   [56;1H[48;22H[36m{[55;3H}[m[85;141H6,0-1[56;1H[?25h[?25l[85;130H~@k[56;1H[85;130H   [57;18H[85;141H7,18 [57;18H[?25h[?25l[85;130H~@k[57;18H[85;130H   [58;18H[46m()[m[85;141H8[58;18H[?25h[?25l[85;130H~@k[58;18H[85;130H   [59;18H[58;17H()[85;141H9[59;18H[?25h[?25l[85;130H~@k[59;18H[85;130H   [58;18H[46m()[m[85;141H8[58;18H[?25h[?25l[85;130H~@k[58;18H[85;130H   [58;19H()[85;144H9[58;19H[?25h[?25l[85;130H~@k[58;19H[85;130H   [58;19H[?25h[?25l[85;130Ha[58;19H[85;130H [58;20H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H58,20[9CTop[58;20H[?25h[?25l[57;19H[36m[46m{[76;3H}[m[85;141H7[57;20H[?25h[?25l[36m{[76;3H}[m[85;141H8[58;20H[?25h[?25l[85;141H9[59;20H[?25h[?25l[85;140H67,1[67;10H[?25h[?25l[85;143H9 [67;9H[?25h[?25l[34maif (kind === '**'){[m[85;143H10[67;10H[?25h[?25l[34mif (kind === '**'){[m[67;28H[K[85;143H9 [67;9H[?25h[?25l[85;141H6[66;9H[?25h[?25l[85;141H5[65;9H[?25h[?25l[85;141H4[64;9H[?25h[?25l[85;141H3[63;9H[?25h[?25l[59;24H[36m[46m{[62;5H}[m[85;141H2,6[62;6H[?25h[?25la[59;24H[36m{[62;5H}[m[85;143H7[62;7H[?25h[?25l[62;6H[K[59;24H[36m[46m{[62;5H}[m[85;143H6[62;6H[?25h[?25la[59;24H[36m{[62;5H}[m[85;143H7[62;7H[?25h[?25l[85;143H1[62;1H[?25h[85;1H[K[62;1H[?25l[85;130H^[[62;1H[85;130H  [62;1H[85;140H62,1[10CTop[62;1H[?25h[?25l[85;130Hd[62;1H[?25h[?25l[85;131Hd[62;1H[85;130H  [62;5H[62;84r[84;1H
[1;85r[84;5H[36m}[m[85;140H[K[85;140H62,5[10CTop[62;5H[?25h[?25l[85;130H~@k[62;5H[85;130H   [61;8H[85;141H1,1-8[61;8H[?25h[?25l[85;130Hd[61;8H[?25h[?25l[85;131Hd[61;8H[85;130H  [61;5H[61;84r[84;1H
[1;85r[84;3H[36m}[m[85;140H[K[85;140H61,5[10CTop[61;5H[?25h[?25l[85;130H~@k[61;5H[85;130H   [60;8H[85;141H0,1-8[60;8H[?25h[?25l[85;130Hd[60;8H[?25h[?25l[85;131Hd[60;8H[85;130H  [60;5H[60;84r[84;1H
[1;85r[85;140H[K[85;140H60,5[10CTop[60;5H[?25h[?25l[85;130H~@k[60;5H[85;130H   [59;5H[85;140H59[59;5H[?25h[?25l[85;130Hd[59;5H[?25h[?25l[85;131Hd[59;5H[85;130H  [59;5H[59;84r[84;1H
[1;85r[84;3H[36mfunction[m factor() [36m{[m[85;140H[K[85;140H59,5[10CTop[59;5H[?25h[?25l[85;130H~@k[59;5H[85;130H   [60;5H[85;140H60[60;5H[?25h[?25l[85;130Ha[60;5H[85;130H [60;6H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H60,6[10CTop[60;6H[?25h[?25l[85;141H1[61;6H[?25h[?25l[85;141H2[62;6H[?25h[?25l[85;141H3[63;6H[?25h[?25l[85;143H7[63;7H[?25h[?25l[85;143H8[63;8H[?25h[?25l[85;143H9[63;9H[?25h[?25l/[33mif[m (kind === [31m'**'[m)[36m{[m[63;27H[K[85;143H8[63;8H[?25h[?25l[33mif[m (kind === [31m'**'[m)[36m{[m[63;26H[K[85;143H7[63;7H[?25h[?25l[85;141H4[64;7H[?25h[?25l[85;143H8[64;8H[?25h[?25l[85;143H9[64;9H[?25h[?25l/  t = t ** t1;[64;22H[K[85;143H8[64;8H[?25h[?25l  t = t ** t1;[64;21H[K[85;143H7[64;7H[?25h[?25l[85;141H5[65;7H[?25h[?25l[85;143H8[65;8H[?25h[?25l[63;25H[36m[46m{[m[65;9H[34m[46m}[m[85;143H9[65;9H[?25h[?25l/[36m}[m[33m[46me[m[33mlse[m[36m{[m[65;14H[K[65;8H[36m[46m}[m[33me[m[85;143H8[65;8H[?25h[?25l[36m}[m[33m[46me[m[33mlse[m[36m{[m[65;13H[K[65;7H[36m[46m}[m[33me[m[85;143H7[65;7H[?25h[?25l[63;25H[36m{[65;7H}[m[85;141H6[66;7H[?25h[?25l[85;141H7[67;7H[?25h[?25l[85;143H8[67;8H[?25h[?25l[65;12H[36m[46m{[m[67;9H[34m[46m}[m[85;143H9[67;9H[?25h[?25l/[36m}[m[67;9H[K[67;8H[36m[46m}[m[85;143H8[67;8H[?25h[?25l[36m}[m[67;8H[K[67;7H[36m[46m}[m[85;143H7[67;7H[?25h[?25l[65;12H[36m{[67;7H}[m[85;141H6[66;7H[?25h[85;1H[K[66;6H[?25l[85;130H^[[66;6H[85;130H  [66;7H[85;140H66,6[10CTop[66;6H[?25h[?25l[85;130H:[66;6H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 143L, 2511C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clearvim calc.mjs [12@./calc.mjs expn-data.txt[C
[33m-2[39m
expecting ; at **
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt clear[Kvim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 143L, 2511C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7H[33mif[m (kind === [31m'**'[m)[36m{[m[64;9Ht = t ** t1;[65;7H[36m}[m[33melse[m[36m{[m[66;7Ht += (kind === [31m'+'[m) ? t1 : -t1;[67;7H[36m}[69;5H}[m
    console.log(t)
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[76;7Hmatch([31m'-'[m);[77;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[80;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m[85;140H66,6[10CTop[66;6H[?25h[?1000l[?1002h[?25l[70;16H[46m([mt[46m)[m[85;140H70,18[70;18H[?25h[?25l[59;11H[46m([24C)[m[70;16H(t)[85;140H59,36[59;36H[?25h[?25l[85;130Ha[59;36H[85;130H [59;37H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H59,37[9CTop[59;37H[?25h[?25l[85;144H6[59;36H[?25h[?25l[46m [m) [36m{[m [46m)[m[85;144H7[59;37H[?25h[?25l[46m|[m) [36m{[m|[46m)[m[85;144H8[59;38H[?25h[?25l[46m|[m) [36m{[m|[46m)[m[85;144H9[59;39H[?25h[?25l[46m [m) [36m{[m [46m)[m[85;143H40[59;40H[?25h[?25l[46mc[m) [36m{[mc[46m)[m[85;144H1[59;41H[?25h[?25l[46mh[m) [36m{[mh[46m)[m[85;144H2[59;42H[?25h[?25l[46me[m) [36m{[me[46m)[m[85;144H3[59;43H[?25h[?25l[46mc[m) [36m{[mc[46m)[m[85;144H4[59;44H[?25h[?25l[46mk[m) [36m{[mk[46m)[m[85;144H5[59;45H[?25h[?25l[46m([m) [36m{[m[59;11H([34C[46m)[m[85;144H6[59;46H[?25h[?25l[31m[46m'[m[31m) {'[m[31m[46m)[m[85;144H7[59;47H[?25h[?25l[31m[46m*[m[31m) {*[m[31m[46m)[m[85;144H8[59;48H[?25h[?25l[31m[46m*[m[31m) {*[m[31m[46m)[m[85;144H9[59;49H[?25h[?25l[31m[46m'[m) [36m{[m[31m'[m[46m)[m[85;143H50[59;50H[?25h[?25l[1C) [36m{[m[59;11H[46m([m[33C([4C)[46m)[m[85;144H1[59;51H[?25h[?25l[59;11H([39C)[85;140H60,35[60;35H[?25h[?25l[85;141H1,19[61;19H[?25h[?25l[85;141H2,25[62;25H[?25h[?25l[63;25H[36m[46m{[65;7H}[m[85;141H3,26[63;26H[?25h[?25l[36m{[65;7H}[m[85;141H4,21[64;21H[?25h[?25l[64;20H[K[85;144H0[64;20H[?25h[?25l[64;19H[K[85;143H19[64;19H[?25h[?25l[64;18H[K[85;144H8[64;18H[?25h[?25l[85;144H7[64;17H[?25h[?25l[64;16H[K[85;144H6[64;16H[?25h[?25l[64;15H[K[85;144H5[64;15H[?25h[?25l[85;144H4[64;14H[?25h[?25l[64;13H[K[85;144H3[64;13H[?25h[?25l[85;144H2[64;12H[?25h[?25l[64;11H[K[85;144H1[64;11H[?25h[?25l[85;144H0[64;10H[?25h[?25l[64;9H[K[85;143H9 [64;9H[?25h[?25lt[85;143H10[64;10H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m (check([31m'INT'[m)) [36m{[m[83;7H[33mconst[m value = parseInt(lookahead.lexeme);[84;7Hmatch([31m'INT'[m);[85;140H[K[85;140H64,10[10C5%[61;10H[?25h[?25l[76;10H[36m[46m{[78;5H}[m[85;140H79,11[76;11H[?25h[?25l[72;21H[36m[46m{[75;5H}[m[76;10H[36m{[78;5H}[m[85;141H8,6 [75;6H[?25h[?25l[85;4H[1m(insert)- VISUAL --[m[85;140H[K[85;130H1[75;6H[85;140H78,6[11C5%[75;6H[?25h[?25l[?25h[?25l[85;130H [73;18H[85;4H[1mINSERTt --[m[85;13H[K[85;140H76,18[10C5%[72;21H[36m{[75;5H}[73;18H[?25h[?25l[m[72;21H[36m[46m{[75;5H}[m[85;141H8,6 [75;6H[?25h[?25la[72;21H[36m{[75;5H}[m[85;143H7[75;7H[?25h[?25l[75;6H[K[72;21H[36m[46m{[75;5H}[m[85;143H6[75;6H[?25h[?25le[72;21H[36m{[75;5H}[m[85;143H7[75;7H[?25h[?25ll[85;143H8[75;8H[?25h[?25ls[85;143H9[75;9H[?25h[?25l[33melse[m[85;143H10[75;10H[?25h[?25l[85;144H1[75;11H[?25h[?25li[85;144H2[75;12H[?25h[?25l[33mif[m[85;144H3[75;13H[?25h[?25l([85;144H4[75;14H[?25h[?25lc[85;144H5[75;15H[?25h[?25lh[85;144H6[75;16H[?25h[?25le[85;144H7[75;17H[?25h[?25lc[85;144H8[75;18H[?25h[?25lk[85;144H9[75;19H[?25h[?25l([85;143H20[75;20H[?25h[?25l[31m'[m[85;144H1[75;21H[?25h[?25l[31m*[m[85;144H2[75;22H[?25h[?25l[31m*[m[85;144H3[75;23H[?25h[?25l[31m'[m[85;144H4[75;24H[?25h[?25l)[46m([4C)[m[85;144H5[75;25H[?25h[?25l[36m{[m[75;19H([4C)[36m[46m{[79;3H}[m[85;144H6[75;26H[?25h[?25l[75;25H[K[75;19H[46m([4C)[m[79;3H[36m}[m[85;144H5[75;25H[?25h[?25l)[75;13H[46m([mcheck([4C)[46m)[m[85;144H6[75;26H[?25h[?25l[36m{[m[75;13H([11C)[36m[46m{[79;3H}[m[85;144H7[75;27H[?25h[?25l[76;84r[76;1H[L[1;85r[79;3H[46m [m
  [36m}[m[85;140H[K[85;140H79,6-13[8C5%[75;26H[36m{[m[79;3H [76;13H[?25h[?25l[77;84r[77;1H[L[1;85r[85;140H[K[85;140H80,6-13[8C4%[77;13H[?25h[?25l+[85;143H7-14[77;14H[?25h[?25l[85;140H79,1   [76;1H[?25h[?25l[85;140H80,7-14[77;14H[?25h[?25l[77;13H[K[85;143H6-13[77;13H[?25h[?25l    [36m}[m[75;26H[36m[46m{[77;5H}[m[85;144H   [77;6H[?25h[?25l[75;26H[36m{[77;5H}[m[85;140H79,1[76;1H[?25h[?25l[85;143H2-9[76;9H[?25h[?25lm[85;143H3-10[76;10H[?25h[?25la[85;143H4-11[76;11H[?25h[?25lt[85;143H5-12[76;12H[?25h[?25lc[85;143H6-13[76;13H[?25h[?25lh[85;143H7-14[76;14H[?25h[?25l([85;143H8-15[76;15H[?25h[?25l[31m'[m[85;143H9-16[76;16H[?25h[?25l[31m*[m[85;143H10-17[76;17H[?25h[?25l[31m*[m[85;144H1-18[76;18H[?25h[?25l[31m'[m[85;144H2-19[76;19H[?25h[?25l)[46m([4C)[m[85;144H3-20[76;20H[?25h[?25la[76;14H([4C)[85;144H4-21[76;21H[?25h[?25l[76;20H[K[76;14H[46m([4C)[m[85;144H3-20[76;20H[?25h[?25l[77;84r[77;1H[L[1;85r[85;140H[K[85;140H80,6-13[8C4%[76;14H([4C)[77;13H[?25h[?25l[85;143H5-12[77;12H[?25h[?25l[85;143H4-11[77;11H[?25h[?25l[85;143H3-10[77;10H[?25h[?25l[85;143H2-9 [77;9H[?25h[?25lr[85;143H3-10[77;10H[?25h[?25le[85;143H4-11[77;11H[?25h[?25lt[85;143H5-12[77;12H[?25h[?25lu[85;143H6-13[77;13H[?25h[?25lr[85;143H7-14[77;14H[?25h[?25l[33mreturn[m[85;143H8-15[77;15H[?25h[?25l[85;143H9-16[77;16H[?25h[?25l*[85;143H10-17[77;17H[?25h[?25l*[85;144H1-18[77;18H[?25h[?25l[85;144H2-19[77;19H[?25h[?25lt[85;144H3-20[77;20H[?25h[?25le[85;144H4-21[77;21H[?25h[?25lr[85;144H5-22[77;22H[?25h[?25lm[85;144H6-23[77;23H[?25h[?25l([85;144H7-24[77;24H[?25h[?25l)[46m()[m[85;144H8-25[77;25H[?25h[?25l;()[85;144H9-26[77;26H[?25h[?25l1[85;143H20-27[77;27H[?25h[?25l[77;26H[K[85;143H19-26[77;26H[?25h[85;1H[K[77;25H[?25l[85;130H^[[77;25H[85;130H  [77;26H[85;140H80,18-25[7C4%[77;25H[?25h[?25l[85;130H:[77;25H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 146L, 2574C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clearvim calc.mjs [12@./calc.mjs expn-data.txt[C
file:///import/linux/home1/kmoshie1/projects/i471a/submit/lab1/exercises/calc/calc.mjs:80
	return ** term();
	       ^^

SyntaxError: Unexpected token '**'
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt clear[Kvim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 146L, 2574C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[34;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[37;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[38;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([43;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[50;7Hvalues.push(expr());[51;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[59;7H[33mconst[m kind = lookahead.kind;[60;7Hmatch(kind);[61;7H[33mconst[m t1 = term();[62;7H[33mif[m (kind === [31m'**'[m)[36m{[m[63;9Ht[64;7H[36m}[m[33melse[m[36m{[m[65;7Ht += (kind === [31m'+'[m) ? t1 : -t1;[66;7H[36m}[68;5H}[m
    console.log(t)
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[75;7Hmatch([31m'-'[m);[76;7H[33mreturn[m - term();
    [36m}[m[33melse[m [33mif[m(check([31m'**'[m))[36m{[m[78;9Hmatch([31m'**'[m)[79;9H[33mreturn[m ** term();
    [36m}[m
    [33melse[m [36m{[m[82;7H[33mreturn[m factor();
    [36m}
[m  [36m}[m[85;140H80,18-25[7C1%[79;25H[?25h[?1000l[?1002h[?25l[85;130Ha[79;25H[85;130H [79;26H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H80,19-26[7C1%[79;26H[?25h[?25l[46m()[m[85;144H8-25[79;25H[?25h[85;1H[K[79;24H[?25l[85;130H^[[79;24H[85;130H  [79;25H[85;140H80,17-24[7C1%[79;24H[?25h[?25l[85;130H^[[79;24H[85;130H  [79;24H[85;130H^[[79;24H[85;130H  [79;24H[?25h[?25l[85;130Ha[79;24H[85;130H [79;25H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H80,18-25[7C1%[79;25H[?25h[?25l[85;144H7-24[79;24H[?25h[?25l[46md[m);d[46m)[m[85;144H8-25[79;25H[?25h[?25l[46md[m);d[46m)[m[85;144H9-26[79;26H[?25h[85;1H[K[79;25H[?25l[85;130H^[[79;25H[85;130H  [79;26H(dd)[85;140H80,18-25[7C1%[79;25H[?25h[?25l[85;130Hd[79;25H[?25h[?25l[85;131Hd[79;25H[85;130H  [79;5H[77;84r[84;1H
[1;85r[77;5H[36m}[m[33melse[m [33mif[m(check([31m'**'[m))[36m[46m{[m[78;9Hmatch([31m'**'[m)[78;20H[K[79;5H[36m[46m}[m[85;140H[K[85;140H80,5[11C1%[79;5H[?25h[?25l[85;130H~@k[79;5H[85;130H   [78;8H[77;26H[36m{[79;5H}[m[85;140H79,1-8[78;8H[?25h[?25l[85;130Hd[78;8H[?25h[?25l[85;131Hd[78;8H[85;130H  [78;5H[77;84r[84;1H
[1;85r[77;5H[36m}[m[33melse[m [33mif[m(check([31m'**'[m))[36m[46m{
[m    [36m[46m}[m[84;3H[36mfunction[m factor() [36m{[m[85;140H[K[85;140H79,5[11C1%[78;5H[?25h[?25l[85;130H~@k[78;5H[85;130H   [77;5H[74;21H[36m[46m{[77;5H}[m[20C[36m{
[m    [36m}[m[85;141H8[77;5H[?25h[?25l[85;130Hd[77;5H[?25h[?25l[85;131Hd[77;5H[85;130H  [77;5H[74;84r[84;1H
[1;85r[74;5H[33mif[m (check([1C[31m-'[m)) [36m[46m{[m[75;7Hmatch([31m'-'[m);[75;18H[K[76;5H  [33mreturn[m - term();[76;23H[K[77;5H[36m[46m}[m[84;5H[33mif[m (check([31m'INT'[m)) [36m{[m[85;140H[K[85;140H78,5[11C1%[77;5H[?25h[?25l[85;130H~@k[77;5H[85;130H   [76;5H[74;21H[36m{[77;5H}[m[85;141H7[76;5H[?25h[?25l[85;130H~@k[76;5H[85;130H   [75;5H[85;141H6[75;5H[?25h[?25l[85;130H^[[75;5H[85;130H  [75;5H[85;130H^[[75;5H[85;130H  [75;5H[?25h[?25l[85;130H:[75;5H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 143L, 2515C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs [12@./calc.mjs expn-data.txt[Cclear[K./calc.mjs expn-data.txt 
[33m-2[39m
[33m3[39m
[33m3[39m
[33m3[39m
[33m-1[39m
[ [33m-2[39m, [33m3[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C[12@./calc.mjs expn-data.txt[C
[33m-2[39m
[33m3[39m
[33m3[39m
[33m3[39m
[33m-1[39m
[ [33m-2[39m, [33m3[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 143L, 2515C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7H[33mif[m (kind === [31m'**'[m)[36m{[m[64;9Ht[65;7H[36m}[m[33melse[m[36m{[m[66;7Ht += (kind === [31m'+'[m) ? t1 : -t1;[67;7H[36m}[69;5H}[m
    console.log(t)
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[76;7Hmatch([31m'-'[m);[77;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[80;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m[85;140H76,5[10CTop[76;5H[?25h[?1000l[?1002h[?25l[85;140H64,9[64;9H[?25h[?25l[85;130Ha[64;9H[85;130H [64;10H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H64,10[9CTop[64;10H[?25h[?25l[85;144H1[64;11H[?25h[?25l=[85;144H2[64;12H[?25h[?25l[85;144H3[64;13H[?25h[?25lt[85;144H4[64;14H[?25h[?25l[85;144H5[64;15H[?25h[?25l*[85;144H6[64;16H[?25h[?25l*[85;144H7[64;17H[?25h[?25l[85;144H8[64;18H[?25h[?25lt[85;144H9[64;19H[?25h[?25l2[85;143H20[64;20H[?25h[?25l[64;19H[K[85;143H19[64;19H[?25h[?25l1[85;143H20[64;20H[?25h[85;1H[K[64;19H[?25l[85;130H^[[64;19H[85;130H  [64;20H[85;140H64,19[9CTop[64;19H[?25h[?25l[85;130H:[64;19H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 143L, 2525C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs [12@./calc.mjs expn-data.txt[C
[33m64[39m
[33m3[39m
[33m27[39m
[33m3[39m
[33m-1[39m
[ [33m64[39m, [33m27[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C[12@./calc.mjs expn-data.txt[C[12Pvim calc.mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 143L, 2525C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7H[33mif[m (kind === [31m'**'[m)[36m{[m[64;9Ht = t ** t1[65;7H[36m}[m[33melse[m[36m{[m[66;7Ht += (kind === [31m'+'[m) ? t1 : -t1;[67;7H[36m}[69;5H}[m
    console.log(t)
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[76;7Hmatch([31m'-'[m);[77;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[80;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m[85;140H64,19[9CTop[64;19H[?25h[?1000l[?1002h[?25l[85;141H6,7 [66;7H[?25h[?25l[85;130Ha[66;7H[85;130H [66;8H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H66,8[10CTop[66;8H[?25h[?25l[85;143H7[66;7H[?25h[?25l t += (kind === [31m'+'[m) ? t1 : -t1;[85;143H8[66;8H[?25h[?25l t += (kind === [31m'+'[m) ? t1 : -t1;[85;143H9[66;9H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m (check([31m'INT'[m)) [36m{[m[83;7H[33mconst[m value = parseInt(lookahead.lexeme);[84;7Hmatch([31m'INT'[m);[85;140H[K[85;140H66,9[11C5%[63;9H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7H[33mreturn[m value;
    [36m}[m
    [33melse[m [36m{[m[85;140H[K[85;140H66,9[10C10%[60;9H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7Hmatch([31m'('[m);[83;7H[33mconst[m value = expr();[84;7Hmatch([31m')'[m);[85;140H[K[85;140H66,9[10C15%[57;9H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7H[33mreturn[m value;
    [36m}
[m  [36m}[m[85;140H[K[85;140H66,9[10C20%[54;9H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36m}[m[85;140H[K[85;140H66,9[10C25%[51;9H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36mfunction[m scan(text) [36m{[m
  [33mconst[m tokens = [36m[][m;
  [33mwhile[m (text.length > 0) [36m{[m[85;140H[K[85;140H66,9[10C30%[48;9H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36mlet[m m;
    [33mif[m ((m = text.match(/^[36m\[ms+/))) [36m{
[m    [36m}[m[85;140H[K[85;140H66,9[10C35%[45;9H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33melse[m [33mif[m ((m = text.match(/^[36m\[md+/))) [36m{[m[83;7Htokens.push([33mnew[m Token([31m'INT'[m, m[36m[[m0[36m][m));
    [36m}[m[33melse[m [33mif[m(m = text.match(/^[36m\[m*[36m\[m*/))[36m{[m[85;140H[K[85;140H66,9[10C40%[42;9H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;9Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m
    [33melse[m [36m{[m[85;140H[K[85;140H66,9[10C45%[39;9H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7Hm = text.match(/^./);[83;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m[85;140H[K[85;140H66,9[10C50%[36;9H[?25h[?25l[85;141H4,20[34;20H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;[85;140H[K[85;140H64,20[9C45%[37;20H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;[85;140H[K[85;140H64,20[9C40%[40;20H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m  ;
*/[m[85;140H[K[85;140H64,20[9C35%[43;20H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34mfactor
  : INT
  | '(' expr ')'[m[85;140H[K[85;140H64,20[9C30%[46;20H[?25h[?25l[56;19H[36m[46m{[64;3H}[m[85;140H7[56;20H[?25h[?25l[36m{[64;3H}[m[85;140H6[46;20H[?25h[85;1H[K[46;19H[?25l[85;130H^[[46;19H[85;130H  [46;20H[85;140H64,19[9C30%[46;19H[?25h[?25l[85;130H:[46;19H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 143L, 2527C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs [12@./calc.mjs expn-data.txt[C
[33m64[39m
[33m3[39m
[33m27[39m
[33m3[39m
[33m-1[39m
[ [33m64[39m, [33m27[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt [12Pvim calc.mjs[C[12@./calc.mjs expn-data.txt[C[12Pvim calc.mjs[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 143L, 2527C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7H[33mif[m (kind === [31m'**'[m)[36m{[m[64;9Ht = t ** t1[65;7H[36m}[m[33melse[m[36m{[m[66;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[67;7H[36m}[69;5H}[m
    console.log(t)
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[76;7Hmatch([31m'-'[m);[77;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[80;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m[85;140H64,19[9CTop[64;19H[?25h[?1000l[?1002h[?25l[63;10H[46m([13C)[m[85;141H3,24[63;24H[?25h[?25l[63;10H([13C)[85;141H4,19[64;19H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[33mif[m (check([31m'INT'[m)) [36m{[m[83;7H[33mconst[m value = parseInt(lookahead.lexeme);[84;7Hmatch([31m'INT'[m);[85;1H[K[85;140H64,19[10C5%[61;19H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7H[33mreturn[m value;
    [36m}[m
    [33melse[m [36m{[m[85;140H[K[85;140H64,19[9C10%[58;19H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[33mimport[m Path from [31m'path'[m;[85;140H[K[85;140H64,19[10C5%[61;19H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;[85;140H[K[85;140H64,19[9CTop[64;19H[?25h[?25l[85;130H^[[64;19H[85;130H  [64;19H[85;130H^[[64;19H[85;130H  [64;19H[?25h[?25l[85;130H:[64;19H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[85;1H[K[85;1H[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ vim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 143L, 2527C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7H[33mif[m (kind === [31m'**'[m)[36m{[m[64;9Ht = t ** t1[65;7H[36m}[m[33melse[m[36m{[m[66;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[67;7H[36m}[69;5H}[m
    console.log(t)
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[76;7Hmatch([31m'-'[m);[77;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[80;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m[85;140H64,19[9CTop[64;19H[?25h[?1000l[?1002h[?25l[85;130Ha[64;19H[85;130H [64;20H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H64,20[9CTop[64;20H[?25h[?25l[64;19H[K[85;143H19[64;19H[?25h[?25l[64;18H[K[85;144H8[64;18H[?25h[?25l[85;144H7[64;17H[?25h[?25l[64;16H[K[85;144H6[64;16H[?25h[?25l[64;15H[K[85;144H5[64;15H[?25h[?25l[85;144H4[64;14H[?25h[?25l[64;13H[K[85;144H3[64;13H[?25h[?25l[85;144H2[64;12H[?25h[?25l[85;144H3[64;13H[?25h[?25l[85;140H58,20[58;20H[?25h[?25l[59;84r[59;1H[L[1;85r[85;140H[K[85;140H59,4-11[7CTop[59;11H[?25h[?25ll[85;143H5-12[59;12H[?25h[?25le[85;143H6-13[59;13H[?25h[?25l[36mlet[m[85;143H7-14[59;14H[?25h[?25lle[59;13H[K[85;143H6-13[59;13H[?25h[?25l[59;12H[K[85;143H5-12[59;12H[?25h[?25l[59;11H[K[85;143H4-11[59;11H[?25h[?25l[85;143H3-10[59;10H[?25h[?25l[85;143H2-9 [59;9H[?25h[?25l[85;143H1  [59;1H[?25h[?25l[58;84r[84;1H
[1;85r[58;5H[36mlet[m t = term();[84;3H[36mfunction[m factor() [36m{[m[85;140H[K[85;140H58,20[9CTop[58;20H[?25h[?25l[59;84r[59;1H[L[1;85r[85;140H[K[85;140H59,4-11[7CTop[59;11H[?25h[?25l[85;143H3-10[59;10H[?25h[?25l[85;143H2-9 [59;9H[?25h[?25l[85;143H1  [59;1H[?25h[?25l[85;143H2[59;2H[?25h[?25l[85;143H3[59;3H[?25h[?25l[85;143H4[59;4H[?25h[?25l[85;143H5[59;5H[?25h[?25ll[85;143H6[59;6H[?25h[?25le[85;143H7[59;7H[?25h[?25l[36mlet[m[85;143H8[59;8H[?25h[?25l[85;143H9[59;9H[?25h[?25lt[85;143H10[59;10H[?25h[?25l2[85;144H1[59;11H[?25h[?25l[85;144H2[59;12H[?25h[?25l=[85;144H3[59;13H[?25h[?25l[85;144H4[59;14H[?25h[?25l[85;144H3[59;13H[?25h[?25l[85;144H4[59;14H[?25h[?25lt[85;144H5[59;15H[?25h[?25le[85;144H6[59;16H[?25h[?25lr[85;144H7[59;17H[?25h[?25lm[85;144H8[59;18H[?25h[?25l([85;144H9[59;19H[?25h[?25l)[46m()[m[85;143H20[59;20H[?25h[?25l;()[85;144H1[59;21H[?25h[?25l[60;17H[46m([3C)[m[85;140H60[60;21H[?25h[?25l([3C)[85;141H1[61;21H[?25h[?25l[85;141H2,19[62;19H[?25h[?25l[85;141H3,21[63;21H[?25h[?25l[85;141H4[64;21H[?25h[?25l[85;141H5,13[65;13H[?25h[?25l[85;144H2[65;12H[?25h[?25l[65;11H[K[85;144H1[65;11H[?25h[?25l[85;144H0[65;10H[?25h[?25l[65;9H[K[85;143H9 [65;9H[?25h[?25lt[85;143H10[65;10H[?25h[?25l[85;144H1[65;11H[?25h[?25l=[85;144H2[65;12H[?25h[?25l[85;144H3[65;13H[?25h[?25lt[85;144H4[65;14H[?25h[?25l[85;144H5[65;15H[?25h[?25l*[85;144H6[65;16H[?25h[?25l*[85;144H7[65;17H[?25h[?25l[85;144H8[65;18H[?25h[?25lt[85;144H9[65;19H[?25h[?25l1[85;143H20[65;20H[?25h[?25l[85;141H4[64;20H[?25h[?25l[85;141H3[63;20H[?25h[?25l[85;141H2,19[62;19H[?25h[?25l[85;141H1,20[61;20H[?25h[?25l[85;141H0[60;20H[?25h[?25l[59;18H[46m()[m[85;140H59[59;20H[?25h[?25la;()[85;144H1[59;21H[?25h[85;1H[K[59;20H[?25l[85;130H^[[59;20H[85;130H  [59;21H[85;140H59,20[9CTop[59;20H[?25h[?25l[85;130Hd[59;20H[?25h[?25l[85;131Hd[59;20H[85;130H  [59;5H[59;84r[84;1H
[1;85r[84;3H[36mfunction[m factor() [36m{[m[85;140H[K[85;140H59,5[10CTop[59;5H[?25h[?25l[85;130H^[[59;5H[85;130H  [59;5H[85;130H^[[59;5H[85;130H  [59;5H[?25h[?25l[85;130H:[59;5H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 143L, 2527C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clearvim calc.mjs [12@./calc.mjs expn-data.txt[C
[33m64[39m
[33m3[39m
[33m27[39m
[33m3[39m
[33m-1[39m
[ [33m64[39m, [33m27[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ ./calc.mjs expn-data.txt clear[Kvim calc.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"calc.mjs" 143L, 2527C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env node

[33mimport[m fs from [31m'fs'[m;
[33mimport[m Path from [31m'path'[m;


[34m/* 
program
  : expr ';' program
  | #empty
  ;
expr
  : term ( ( '+' | '-' ) term )*
  ;
term
  : '-' term
  | factor
  ;
factor
  : INT
  | '(' expr ')'
  ;
*/[m

[36mfunction[m parse(text) [36m{[m
  [33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[35;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[38;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[39;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([44;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m values = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[51;7Hvalues.push(expr());[52;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m values;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[60;7H[33mconst[m kind = lookahead.kind;[61;7Hmatch(kind);[62;7H[33mconst[m t1 = term();[63;7H[33mif[m (kind === [31m'**'[m)[36m{[m[64;9Ht = t ** t1[65;7H[36m}[m[33melse[m[36m{[m[66;9Ht += (kind === [31m'+'[m) ? t1 : -t1;[67;7H[36m}[69;5H}[m
    console.log(t)
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[76;7Hmatch([31m'-'[m);[77;7H[33mreturn[m - term();
    [36m}[m
    [33melse[m [36m{[m[80;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m[85;140H59,5[10CTop[59;5H[?25h[?1000l[?1002h[?25l[85;130H~@k[59;5H[85;130H   [59;6H[85;143H6[59;6H[?25h[?25l[85;130H~@k[59;6H[85;130H   [60;6H[85;140H60[60;6H[?25h[?25l[85;130H~@k[60;6H[85;130H   [61;6H[85;141H1[61;6H[?25h[?25l[85;130H~@k[61;6H[85;130H   [62;6H[85;141H2[62;6H[?25h[?25l[85;130H~@k[62;6H[85;130H   [63;6H[85;141H3[63;6H[?25h[?25l[85;130H~@k[63;6H[85;130H   [64;6H[85;141H4[64;6H[?25h[?25l[85;130H~@k[64;6H[85;130H   [65;6H[85;141H5[65;6H[?25h[?25l[85;130H~@k[65;6H[85;130H   [66;6H[85;141H6[66;6H[?25h[?25l[85;130H~@k[66;6H[85;130H   [67;6H[85;141H7[67;6H[?25h[?25l[85;130H~@k[67;6H[85;130H   [68;1H[85;141H8,0-1[68;1H[?25h[?25l[85;130H~@k[68;1H[85;130H   [69;5H[59;53H[36m[46m{[69;5H}[m[85;141H9,5  [69;5H[?25h[?25l[85;130H~@k[69;5H[85;130H   [70;6H[59;53H[36m{[69;5H}[m[85;140H70,6[70;6H[?25h[?25l[85;130H~@k[70;6H[85;130H   [69;5H[59;53H[36m[46m{[69;5H}[m[85;140H69,5[69;5H[?25h[?25l[85;130H~@k[69;5H[85;130H   [70;6H[59;53H[36m{[69;5H}[m[85;140H70,6[70;6H[?25h[?25l[85;130Ha[70;6H[85;130H [70;7H[85;1H[1m-- INSERT --[m[85;13H[K[85;140H70,7[10CTop[70;7H[?25h[85;1H[K[70;6H[?25l[85;130H^[[70;6H[85;130H  [70;7H[85;140H70,6[10CTop[70;6H[?25h[?25l[85;130Hd[70;6H[?25h[?25l[85;131Hd[70;6H[85;130H  [70;5H[70;84r[84;1H
[1;85r[84;5H[33mif[m (check([31m'INT'[m)) [36m{[m[85;140H[K[85;140H70,5[10CTop[70;5H[?25h[?25l[85;130H^[[70;5H[85;130H  [70;5H[85;130H^[[70;5H[85;130H  [70;5H[?25h[?25l[85;130H:[70;5H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"calc.mjs" 142L, 2508C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clearvim calc.mjs [12@./calc.mjs expn-data.txt[C
[ [33m64[39m, [33m27[39m, [33m-1[39m ]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/calc$ clear[Kv[Kcd ..
kmoshie1@remote07:~/i471a/submit/lab1/exercises$ cd ..[K[Kast/
kmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ vim ast.mjs 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;85r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[85;1H"ast.mjs" 145L, 2578C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;3H[33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();
  [33mconst[m value = program();
  [33mreturn[m value;

  [36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[10;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[13;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[14;7Hprocess.exit();
    [36m}
[m  [36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([19;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}

[m  [36mfunction[m program() [36m{[m
    [33mconst[m asts = [36m[][m;
    [33mwhile[m (!check([31m'EOF'[m)) [36m{[m[26;7Hasts.push(expr());[27;7Hmatch([31m';'[m);
    [36m}[m
    [33mreturn[m asts;
  [36m}

[m  [36mfunction[m expr() [36m{
[m    [36mlet[m t = term();
    [33mwhile[m (check([31m'+'[m) || check([31m'-'[m)) [36m{[m[35;7H[33mconst[m kind = lookahead.kind;[36;7Hmatch(kind);[37;7H[33mconst[m t1 = term();[38;7Ht = [33mnew[m Ast(kind, t, t1);
    [36m}[m
    [33mreturn[m t;
  [36m}

[m  [36mfunction[m term() [36m{[m
    [33mif[m (check([31m'-'[m)) [36m{[m[45;7Hmatch([31m'-'[m);[46;7H[33mreturn[m [33mnew[m Ast([31m'-'[m, term());
    [36m}[m
    [33melse[m [36m{[m[49;7H[33mreturn[m factor();
    [36m}
[m  [36m}

[m  [36mfunction[m factor() [36m{[m
    [33mif[m (check([31m'INT'[m)) [36m{[m[55;7H[33mconst[m value = parseInt(lookahead.lexeme);[56;7Hmatch([31m'INT'[m);[57;7H[33mconst[m ast = [33mnew[m Ast([31m'INT'[m);[58;7Hast.value = value;[59;7H[33mreturn[m ast;
    [36m}[m
    [33melse[m [36m{[m[62;7Hmatch([31m'('[m);[63;7H[33mconst[m value = expr();[64;7Hmatch([31m')'[m);[65;7H[33mreturn[m value;
    [36m}
[m  [36m}
}


function[m scan(text) [36m{[m
  [33mconst[m tokens = [36m[][m;
  [33mwhile[m (text.length > 0) [36m{
[m    [36mlet[m m;
    [33mif[m ((m = text.match(/^[36m\[ms+/))) [36m{
[m    [36m}[m
    [33melse[m [33mif[m ((m = text.match(/^[36m\[md+/))) [36m[46m{[m[78;7Htokens.push([33mnew[m Token([31m'INT'[m, m[36m[[m0[36m][m));
    [36m[46m}[m
    [33melse[m [33mif[m((m = text.match(/^[36m\[m*[36m\[m*/))) [36m{[m[81;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m,m[36m[[m0[36m][m));
    [36m}[m
    [33melse[m [36m{[m[84;7Hm = text.match(/^./);[85;140H104,5[9C40%[79;5H[?25h[?1000l[?1002h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m*/[m

[36mfunction[m parse(text) [36m{[m[78;35H[36m[46m{
[m    [36m[46m}[m[80;40H[36m{[82;5H}[m[85;1H[K[85;140H101,5[9C36%[79;5H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m  : INT
  | '(' expr ')'
  ;[m[81;35H[36m{
[m    [36m}[m[85;140H[K[85;140H98,5[10C31%[79;5H[?25h[?25l[40;11H[46m([24C)[m[85;140H59,36[40;36H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36m}[m
    [33melse[m [33mif[m((m = text.match(/^[36m\[m*[36m\[m*/))) [36m{[m[84;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m,m[36m[[m0[36m][m));[85;140H[K[85;140H59,36[9C36%[37;36H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36m}[m
    [33melse[m [36m{[m[84;7Hm = text.match(/^./);[85;140H[K[85;140H59,36[9C40%[34;36H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m
    text = text.substring(m[36m[[m0[36m][m.length);[85;140H[K[85;140H59,36[9C45%[31;36H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[36m}[m
  [33mreturn[m tokens;
[36m}[m[85;140H[K[85;140H59,36[9C50%[28;36H[?25h[?25l[1;84r[1;1H[3M[1;85r[84;1H[33mconst[m CHAR_SET = [31m'utf8'[m;[85;140H[K[85;140H59,36[9C55%[25;36H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36mfunction[m main() [36m{[m
  [33mif[m (process.argv.length !== 3) usage();
  [33mconst[m file = process.argv[36m[[m2[36m][m;[85;140H[K[85;140H59,36[9C60%[22;36H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[85;140H[K[85;140H59,36[9C55%[25;36H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[36mfunction[m check(kind) [36m{[m [33mreturn[m lookahead.kind === kind; [36m}
[m  [36mfunction[m match(kind) [36m{[m
    [33mif[m (check(kind)) [36m{[m[85;140H[K[85;140H59,36[9C50%[28;36H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[33mconst[m value = program();
  [33mreturn[m value;[85;140H[K[85;140H59,36[9C45%[31;36H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[33mconst[m tokens = scan(text);
  [36mlet[m index = 0;
  [36mlet[m lookahead = nextToken();[85;140H[K[85;140H59,36[9C40%[34;36H[?25h[?25l[85;130Ha[34;36H[85;130H [34;37H[85;1H[1m-- INSERT --[m[85;140H[K[85;140H59,37[9C40%[34;37H[?25h[?25l[85;144H6[34;36H[?25h[?25l[46m [m) [36m{[m [46m)[m[85;144H7[34;37H[?25h[?25l[46m|[m) [36m{[m|[46m)[m[85;144H8[34;38H[?25h[?25l[46m|[m) [36m{[m|[46m)[m[85;144H9[34;39H[?25h[?25l[46m [m) [36m{[m [46m)[m[85;143H40[34;40H[?25h[?25l[46mc[m) [36m{[mc[46m)[m[85;144H1[34;41H[?25h[?25l[46mh[m) [36m{[mh[46m)[m[85;144H2[34;42H[?25h[?25l[46me[m) [36m{[me[46m)[m[85;144H3[34;43H[?25h[?25l[46mc[m) [36m{[mc[46m)[m[85;144H4[34;44H[?25h[?25l[46mk[m) [36m{[mk[46m)[m[85;144H5[34;45H[?25h[?25l[46m([m) [36m{[m[34;11H([34C[46m)[m[85;144H6[34;46H[?25h[?25l[31m[46m'[m[31m) {'[m[31m[46m)[m[85;144H7[34;47H[?25h[?25l[31m[46m*[m[31m) {*[m[31m[46m)[m[85;144H8[34;48H[?25h[?25l[31m[46m*[m[31m) {*[m[31m[46m)[m[85;144H9[34;49H[?25h[?25l[31m[46m'[m) [36m{[m[31m'[m[46m)[m[85;143H50[34;50H[?25h[?25l[1C) [36m{[m[34;11H[46m([m[33C([4C)[46m)[m[85;144H1[34;51H[?25h[?25l[34;11H([39C)[85;141H8,20[33;20H[?25h[?25l[34;11H[46m([39C)[m[85;141H9,51[34;51H[?25h[?25l[34;11H([39C)[85;140H60,35[35;35H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m*/[m

[36mfunction[m parse(text) [36m{[m[85;140H[K[85;140H60,35[9C36%[38;35H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m  : INT
  | '(' expr ')'
  ;[m[85;140H[K[85;140H60,35[9C31%[41;35H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m  | factor
  ;
factor[m[85;140H[K[85;140H60,35[9C26%[44;35H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m  ;
term
  : '-' term[m[85;140H[K[85;140H60,35[9C21%[47;35H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;1H[34m  ;
expr
  : term ( ( '+' | '-' ) term )*[m[85;140H[K[85;140H60,35[9C16%[50;35H[?25h[?25l[1;84r[1;1H[3M[1;85r[83;1H[36mfunction[m scan(text) [36m{[m
  [33mconst[m tokens = [36m[][m;[85;140H[K[85;140H60,35[9C21%[47;35H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mwhile[m (text.length > 0) [36m{
[m    [36mlet[m m;
    [33mif[m ((m = text.match(/^[36m\[ms+/))) [36m{[m[85;140H[K[85;140H60,35[9C26%[44;35H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36m}[m
    [33melse[m [33mif[m ((m = text.match(/^[36m\[md+/))) [36m{[m[84;7Htokens.push([33mnew[m Token([31m'INT'[m, m[36m[[m0[36m][m));[85;140H[K[85;140H60,35[9C31%[41;35H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36m}[m
    [33melse[m [33mif[m((m = text.match(/^[36m\[m*[36m\[m*/))) [36m{[m[84;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m,m[36m[[m0[36m][m));[85;140H[K[85;140H60,35[9C36%[38;35H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;5H[36m}[m
    [33melse[m [36m{[m[84;7Hm = text.match(/^./);[85;140H[K[85;140H60,35[9C40%[35;35H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;7Htokens.push([33mnew[m Token(m[36m[[m0[36m][m, m[36m[[m0[36m][m));
    [36m}[m
    text = text.substring(m[36m[[m0[36m][m.length);[85;140H[K[85;140H60,35[9C45%[32;35H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[36m}[m
  [33mreturn[m tokens;
[36m}[m[85;140H[K[85;140H60,35[9C50%[29;35H[?25h[?25l[1;84r[1;1H[3M[1;85r[84;1H[33mconst[m CHAR_SET = [31m'utf8'[m;[85;140H[K[85;140H60,35[9C55%[26;35H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36mfunction[m main() [36m{[m
  [33mif[m (process.argv.length !== 3) usage();
  [33mconst[m file = process.argv[36m[[m2[36m][m;[85;140H[K[85;140H60,35[9C60%[23;35H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mconst[m text = fs.readFileSync(file, CHAR_SET);
  [33mconst[m value = parse(text);
  console.log(JSON.stringify(value));[85;140H[K[85;140H60,35[9C65%[20;35H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36m}

function[m usage() [36m{[m[85;140H[K[85;140H60,35[9C70%[17;35H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3H[33mconst[m prog = Path.basename(process.argv[36m[[m1[36m][m)
  console.error([31m`usage: [m[35m${prog}[m[31m INPUT_FILE`[m);
  process.exit(1);[85;140H[K[85;140H60,35[9C75%[14;35H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36m}[m

[33mclass[m Token [36m{[m[85;140H[K[85;140H60,35[9C80%[11;35H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3Hconstructor(kind, lexeme) [36m{[m
    [32mObject[m.assign([36mthis[m, [36m{[mkind, lexeme[36m}[m);
  [36m}[m[85;140H[K[85;140H60,35[9C85%[8;35H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[36m}[m

[33mclass[m Ast [36m{[m[85;140H[K[85;140H61,22[9C90%[6;22H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;3Hconstructor(tag, ...kids) [36m{[m
    [32mObject[m.assign([36mthis[m, [36m{[mtag, kids[36m}[m);
  [36m}[m[85;140H[K[85;140H64,6[10C95%[1;53H[36m[46m{[6;5H}[?25h[?25l[1;84r[m[1;1H[3M[1;85r[82;1H[36m}[m
main();[85;140H[K[85;140H67,1[10CBot[3;5H[36m}


[?25h[?25l[1;84r[m[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H70,18[9CBot[6;18H[?25h[?25l[1;84r[1;1H[3M[1;85r[82;1H[1m[34m~                                                                                                                                                            [83;1H~                                                                                                                                                            [84;1H~                                                                                                                                                            [m[85;140H[K[85;140H73,11[9CBot[6;10H[36m[46m{[8;5H}[6;11H[?25h[?25l[1;84r[m[1;1H[3L[1;85r[1;5H[33mreturn[m t;
  [36m}[m[85;140H[K[85;140H73,11[9CBot[9;11H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;7H[33mconst[m t1 = term();[2;7Ht = [33mnew[m Ast(kind, t, t1);
    [36m}[m[85;140H[K[85;140H73,11[9CBot[12;11H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33mwhile[m (check([31m'+'[m) || check([31m'-'[m) || check([31m'**'[m)) [36m{[m[2;7H[33mconst[m kind = lookahead.kind;[3;7Hmatch(kind);[85;140H[K[85;140H73,11[9C95%[15;11H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;3H[36mfunction[m expr() [36m{
[m    [36mlet[m t = term();[85;140H[K[85;140H73,11[9C90%[18;11H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[36m}[m
    [33mreturn[m asts;
  [36m}[m[85;140H[K[85;140H73,11[9C85%[21;11H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;5H[33mwhile[m (!check([31m'EOF'[m)) [36m{[m[2;7Hasts.push(expr());[3;7Hmatch([31m';'[m);[85;140H[K[85;140H73,11[9C80%[24;11H[?25h[?25l[1;84r[1;1H[3L[1;85r[2;3H[36mfunction[m program() [36m{[m
    [33mconst[m asts = [36m[][m;[85;140H[K[85;140H73,11[9C75%[27;11H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;7H(index >=  tokens.length) ? [33mnew[m Token([31m'EOF'[m, [31m'<EOF>'[m) : tokens[36m[[mindex++[36m][m
    );
  [36m}[m[85;140H[K[85;140H73,11[9C70%[30;11H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;3H[36m}
[m  [36mfunction[m nextToken() [36m{[m
    [33mreturn[m ([85;140H[K[85;140H73,11[9C65%[33;11H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;7Hconsole.error([31m`expecting [m[35m${kind}[m[31m at [m[35m${lookahead.kind}[m[31m`[m);[2;7Hprocess.exit();
    [36m}[m[85;140H[K[85;140H73,11[9C60%[36;11H[?25h[?25l[1;84r[1;1H[3L[1;85r[1;7Hlookahead = nextToken();
    [36m}[m
    [33melse[m [36m{[m[85;140H[K[85;140H73,11[9C55%[39;11H[?25h[?25l[36m{[41;5H}[m[85;140H62,25[28;25H[?25h[?25l[25;53H[36m[46m{[30;5H}[m[85;141H4,6 [30;6H[?25h[85;1H[K[30;5H[?25l[85;130H^[[30;5H[85;130H  [30;6H[85;140H64,5[10C55%[30;5H[?25h[?25l[85;130H:[30;5H[85;130H[K[85;1H:[?2004h[?25hx[?25l[?25h[?25l[?1002l[?2004l"ast.mjs" 145L, 2593C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ clear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ ls
ast.mjs  ast.py  data.json  data.txt  expn-data.json  expn-data.txt
kmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ ./ast.mjs  [Kexpn-data.txt 
[{"tag":"**","kids":[{"tag":"**","kids":[{"tag":"-","kids":[{"tag":"INT","kids":[],"value":2}]},{"tag":"INT","kids":[],"value":2}]},{"tag":"INT","kids":[],"value":3}]},{"tag":"**","kids":[{"tag":"+","kids":[{"tag":"INT","kids":[],"value":1},{"tag":"INT","kids":[],"value":2}]},{"tag":"+","kids":[{"tag":"INT","kids":[],"value":1},{"tag":"INT","kids":[],"value":2}]}]},{"tag":"**","kids":[{"tag":"+","kids":[{"tag":"INT","kids":[],"value":1},{"tag":"-","kids":[{"tag":"INT","kids":[],"value":2}]}]},{"tag":"+","kids":[{"tag":"INT","kids":[],"value":1},{"tag":"INT","kids":[],"value":2}]}]}]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ ./ast.mjs expn-data.txt [K./ast.mjs expn-data.txt [K[K[K[Kjson 
expecting ( at [
kmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ cat expn-data.json 
[{"tag":"-","kids":[{"tag":"**","kids":[{"tag":"INT","kids":[],"value":2},{"tag":"**","kids":[{"tag":"INT","kids":[],"value":2},{"tag":"INT","kids":[],"value":3}]}]}]},{"tag":"+","kids":[{"tag":"INT","kids":[],"value":1},{"tag":"**","kids":[{"tag":"INT","kids":[],"value":2},{"tag":"+","kids":[{"tag":"INT","kids":[],"value":1},{"tag":"INT","kids":[],"value":2}]}]}]},{"tag":"+","kids":[{"tag":"INT","kids":[],"value":1},{"tag":"-","kids":[{"tag":"**","kids":[{"tag":"INT","kids":[],"value":2},{"tag":"+","kids":[{"tag":"INT","kids":[],"value":1},{"tag":"INT","kids":[],"value":2}]}]}]}]}]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ cat expn-data.json > json_pp
kmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ ls
ast.mjs  ast.py  data.json  data.txt  expn-data.json  expn-data.txt  json_pp
kmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ cat jk[Kson_pp 
[{"tag":"-","kids":[{"tag":"**","kids":[{"tag":"INT","kids":[],"value":2},{"tag":"**","kids":[{"tag":"INT","kids":[],"value":2},{"tag":"INT","kids":[],"value":3}]}]}]},{"tag":"+","kids":[{"tag":"INT","kids":[],"value":1},{"tag":"**","kids":[{"tag":"INT","kids":[],"value":2},{"tag":"+","kids":[{"tag":"INT","kids":[],"value":1},{"tag":"INT","kids":[],"value":2}]}]}]},{"tag":"+","kids":[{"tag":"INT","kids":[],"value":1},{"tag":"-","kids":[{"tag":"**","kids":[{"tag":"INT","kids":[],"value":2},{"tag":"+","kids":[{"tag":"INT","kids":[],"value":1},{"tag":"INT","kids":[],"value":2}]}]}]}]}]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ rm json_pp 
kmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ echo expn-data.json | json_pp
malformed JSON string, neither array, object, number, string or atom, at character offset 0 (before "expn-data.json\n") at /usr/bin/json_pp line 43.
kmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ echo expn-data.json | json_pp[K[K[K[K[K[K[Kpython -m json.tool
No JSON object could be decoded
kmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ echo expn-data.json | python -m json.tool[12Pjson_pppython -m json.tool[12Pjson_pppython -m json.tool[Kecho expn-data.json | python -m json.tool[Kclear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ ls
ast.mjs  ast.py  data.json  data.txt  expn-data.json  expn-data.txt
kmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ c[Kpython -m json.tool expn-data.json 
[
    {
        "kids": [
            {
                "kids": [
                    {
                        "kids": [],
                        "tag": "INT",
                        "value": 2
                    },
                    {
                        "kids": [
                            {
                                "kids": [],
                                "tag": "INT",
                                "value": 2
                            },
                            {
                                "kids": [],
                                "tag": "INT",
                                "value": 3
                            }
                        ],
                        "tag": "**"
                    }
                ],
                "tag": "**"
            }
        ],
        "tag": "-"
    },
    {
        "kids": [
            {
                "kids": [],
                "tag": "INT",
                "value": 1
            },
            {
                "kids": [
                    {
                        "kids": [],
                        "tag": "INT",
                        "value": 2
                    },
                    {
                        "kids": [
                            {
                                "kids": [],
                                "tag": "INT",
                                "value": 1
                            },
                            {
                                "kids": [],
                                "tag": "INT",
                                "value": 2
                            }
                        ],
                        "tag": "+"
                    }
                ],
                "tag": "**"
            }
        ],
        "tag": "+"
    },
    {
        "kids": [
            {
                "kids": [],
                "tag": "INT",
                "value": 1
            },
            {
                "kids": [
                    {
                        "kids": [
                            {
                                "kids": [],
                                "tag": "INT",
                                "value": 2
                            },
                            {
                                "kids": [
                                    {
                                        "kids": [],
                                        "tag": "INT",
                                        "value": 1
                                    },
                                    {
                                        "kids": [],
                                        "tag": "INT",
                                        "value": 2
                                    }
                                ],
                                "tag": "+"
                            }
                        ],
                        "tag": "**"
                    }
                ],
                "tag": "-"
            }
        ],
        "tag": "+"
    }
]
kmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ x[Kclear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises/ast$ cd ..
kmoshie1@remote07:~/i471a/submit/lab1/exercises$ clear
[H[2J[3Jkmoshie1@remote07:~/i471a/submit/lab1/exercises$ ls
01-regex  02-lexer  03-calc  04-ast  ast  calc	lexer  regex
kmoshie1@remote07:~/i471a/submit/lab1/exercises$ cd ..
kmoshie1@remote07:~/i471a/submit/lab1$ git checkout lab1
M	submit/lab1/exercises/ast/ast.mjs
M	submit/lab1/exercises/calc/calc.mjs
M	submit/lab1/lab1.LOG
Already on 'lab1'
Your branch is up to date with 'origin/lab1'.
kmoshie1@remote07:~/i471a/submit/lab1$ git add .
kmoshie1@remote07:~/i471a/submit/lab1$ git commit -m 'sta[K[K[Kwrong last two'
[lab1 8cb2d1c] wrong last two
 3 files changed, 3045 insertions(+), 5 deletions(-)
kmoshie1@remote07:~/i471a/submit/lab1$ git push -u org[Kigin lab1
Username for 'https://github.com': kmoshie1
Password for 'https://kmoshie1@github.com': 
To https://github.com/kmoshie1/i471a.git
 [31m! [rejected]       [m lab1 -> lab1 (fetch first)
[31merror: failed to push some refs to 'https://github.com/kmoshie1/i471a.git'
[m[33mhint: Updates were rejected because the remote contains work that you do[m
[33mhint: not have locally. This is usually caused by another repository pushing[m
[33mhint: to the same ref. You may want to first integrate the remote changes[m
[33mhint: (e.g., 'git pull ...') before pushing again.[m
[33mhint: See the 'Note about fast-forwards' in 'git push --help' for details.[m
kmoshie1@remote07:~/i471a/submit/lab1$ git pull
warning: Pulling without specifying how to reconcile divergent branches is
discouraged. You can squelch this message by running one of the following
commands sometime before your next pull:

  git config pull.rebase false  # merge (the default strategy)
  git config pull.rebase true   # rebase
  git config pull.ff only       # fast-forward only

You can replace "git config" with "git config --global" to set a default
preference for all repositories. You can also pass --rebase, --no-rebase,
or --ff-only on the command line to override the configured default per
invocation.

remote: Enumerating objects: 9, done.[K
remote: Counting objects:  11% (1/9)[Kremote: Counting objects:  22% (2/9)[Kremote: Counting objects:  33% (3/9)[Kremote: Counting objects:  44% (4/9)[Kremote: Counting objects:  55% (5/9)[Kremote: Counting objects:  66% (6/9)[Kremote: Counting objects:  77% (7/9)[Kremote: Counting objects:  88% (8/9)[Kremote: Counting objects: 100% (9/9)[Kremote: Counting objects: 100% (9/9), done.[K
remote: Compressing objects:  16% (1/6)[Kremote: Compressing objects:  33% (2/6)[Kremote: Compressing objects:  50% (3/6)[Kremote: Compressing objects:  66% (4/6)[Kremote: Compressing objects:  83% (5/6)[Kremote: Compressing objects: 100% (6/6)[Kremote: Compressing objects: 100% (6/6), done.[K
remote: Total 6 (delta 1), reused 0 (delta 0), pack-reused 0[K
Unpacking objects:  16% (1/6)Unpacking objects:  33% (2/6)Unpacking objects:  50% (3/6)Unpacking objects:  66% (4/6)Unpacking objects:  83% (5/6)Unpacking objects: 100% (6/6)Unpacking objects: 100% (6/6), 2.87 KiB | 81.00 KiB/s, done.
From https://github.com/kmoshie1/i471a
   9eb4f06..ace33e7  lab1       -> origin/lab1
   e676646..14d237b  lab0       -> origin/lab0
   c6b3190..98b9506  main       -> origin/main
error: Your local changes to the following files would be overwritten by merge:
	submit/lab1/lab1.LOG
Please commit your changes or stash them before you merge.
Aborting
kmoshie1@remote07:~/i471a/submit/lab1$ git push
Username for 'https://github.com': kmoshie1
Password for 'https://kmoshie1@github.com': 
To https://github.com/kmoshie1/i471a.git
 [31m! [rejected]       [m lab1 -> lab1 (non-fast-forward)
[31merror: failed to push some refs to 'https://github.com/kmoshie1/i471a.git'
[m[33mhint: Updates were rejected because the tip of your current branch is behind[m
[33mhint: its remote counterpart. Integrate the remote changes (e.g.[m
[33mhint: 'git pull ...') before pushing again.[m
[33mhint: See the 'Note about fast-forwards' in 'git push --help' for details.[m
kmoshie1@remote07:~/i471a/submit/lab1$ git pull
warning: Pulling without specifying how to reconcile divergent branches is
discouraged. You can squelch this message by running one of the following
commands sometime before your next pull:

  git config pull.rebase false  # merge (the default strategy)
  git config pull.rebase true   # rebase
  git config pull.ff only       # fast-forward only

You can replace "git config" with "git config --global" to set a default
preference for all repositories. You can also pass --rebase, --no-rebase,
or --ff-only on the command line to override the configured default per
invocation.

remote: Enumerating objects: 1, done.[K
remote: Counting objects: 100% (1/1)[Kremote: Counting objects: 100% (1/1), done.[K
remote: Total 1 (delta 0), reused 0 (delta 0), pack-reused 0[K
Unpacking objects: 100% (1/1)Unpacking objects: 100% (1/1), 618 bytes | 154.00 KiB/s, done.
From https://github.com/kmoshie1/i471a
   98b9506..6701bdf  main       -> origin/main
error: Your local changes to the following files would be overwritten by merge:
	submit/lab1/lab1.LOG
Please commit your changes or stash them before you merge.
Aborting
kmoshie1@remote07:~/i471a/submit/lab1$ git push -u origion[K[Knll[Kshllsh -u origin lab1
Username for 'https://github.com': kmoshie1
Password for 'https://kmoshie1@github.com': 
To https://github.com/kmoshie1/i471a.git
 [31m! [rejected]       [m lab1 -> lab1 (non-fast-forward)
[31merror: failed to push some refs to 'https://github.com/kmoshie1/i471a.git'
[m[33mhint: Updates were rejected because the tip of your current branch is behind[m
[33mhint: its remote counterpart. Integrate the remote changes (e.g.[m
[33mhint: 'git pull ...') before pushing again.[m
[33mhint: See the 'Note about fast-forwards' in 'git push --help' for details.[m
kmoshie1@remote07:~/i471a/submit/lab1$ git push --help
[?1049h[22;0;0t[?1h=GIT-PUSH(1)                                                             Git Manual                                                            GIT-PUSH(1)[m
[m
[1mNAME[0m[m
       git-push - Update remote refs along with associated objects[m
[m
[1mSYNOPSIS[0m[m
       [4mgit[24m [4mpush[24m [--all | --mirror | --tags] [--follow-tags] [--atomic] [-n | --dry-run] [--receive-pack=<git-receive-pack>][m
                  [--repo=<repository>] [-f | --force] [-d | --delete] [--prune] [-v | --verbose][m
                  [-u | --set-upstream] [-o <string> | --push-option=<string>][m
                  [--[no-]signed|--signed=(true|false|if-asked)][m
                  [--force-with-lease[=<refname>[:<expect>]]][m
                  [--no-verify] [<repository> [<refspec>...]][m
[m
[1mDESCRIPTION[0m[m
       Updates remote refs using local refs, while sending objects necessary to complete the given refs.[m
[m
       You can make interesting things happen to a repository every time you push into it, by setting up [4mhooks[24m there. See documentation for [1mgit-receive-[0m[m
       [1mpack[0m(1).[m
[m
       When the command line does not specify where to push with the [1m<repository>[0m argument, [1mbranch.*.remote[0m configuration for the current branch is[m
       consulted to determine where to push. If the configuration is missing, it defaults to [4morigin[24m.[m
[m
       When the command line does not specify what to push with [1m<refspec>...[0m arguments or [1m--all[0m, [1m--mirror[0m, [1m--tags[0m options, the command finds the default[m
       [1m<refspec>[0m by consulting [1mremote.*.push[0m configuration, and if it is not found, honors [1mpush.default[0m configuration to decide what to push (See [1mgit-[0m[m
       [1mconfig[0m(1) for the meaning of [1mpush.default[0m).[m
[m
       When neither the command-line nor the configuration specify what to push, the default behavior is used, which corresponds to the [1msimple[0m value for[m
       [1mpush.default[0m: the current branch is pushed to the corresponding upstream branch, but as a safety measure, the push is aborted if the upstream[m
       branch does not have the same name as the local one.[m
[m
[1mOPTIONS[0m[m
       <repository>[m
           The "remote" repository that is destination of a push operation. This parameter can be either a URL (see the section GIT URLS below) or the[m
           name of a remote (see the section REMOTES below).[m
[m
       <refspec>...[m
           Specify what destination ref to update with what source object. The format of a <refspec> parameter is an optional plus [1m+[0m, followed by the[m
           source object <src>, followed by a colon [1m:[0m, followed by the destination ref <dst>.[m
[m
           The <src> is often the name of the branch you would want to push, but it can be any arbitrary "SHA-1 expression", such as [1mmaster~4[0m or [1mHEAD[0m[m
           (see [1mgitrevisions[0m(7)).[m
[m
           The <dst> tells which ref on the remote side is updated with this push. Arbitrary expressions cannot be used here, an actual ref must be[m
           named. If [1mgit[0m [1mpush[0m [1m[<repository>][0m without any [1m<refspec>[0m argument is set to update some ref at the destination with [1m<src>[0m with[m
           [1mremote.<repository>.push[0m configuration variable, [1m:<dst>[0m part can be omittedâ€”such a push will update a ref that [1m<src>[0m normally updates without[m
           any [1m<refspec>[0m on the command line. Otherwise, missing [1m:<dst>[0m means to update the same ref as the [1m<src>[0m.[m
[m
           If <dst> doesnâ€™t start with [1mrefs/[0m (e.g.  [1mrefs/heads/master[0m) we will try to infer where in [1mrefs/*[0m on the destination <repository> it belongs[m
           based on the type of <src> being pushed and whether <dst> is ambiguous.[m
[m
           â€¢   If <dst> unambiguously refers to a ref on the <repository> remote, then push to that ref.[m
[m
           â€¢   If <src> resolves to a ref starting with refs/heads/ or refs/tags/, then prepend that to <dst>.[m
[m
           â€¢   Other ambiguity resolutions might be added in the future, but for now any other cases will error out with an error indicating what we[m
               tried, and depending on the [1madvice.pushUnqualifiedRefname[0m configuration (see [1mgit-config[0m(1)) suggest what refs/ namespace you may have[m
               wanted to push to.[m
[m
           The object referenced by <src> is used to update the <dst> reference on the remote side. Whether this is allowed depends on where in [1mrefs/*[0m[m
           the <dst> reference lives as described in detail below, in those sections "update" means any modifications except deletes, which as noted[m
           after the next few sections are treated differently.[m
[m
           The [1mrefs/heads/*[0m namespace will only accept commit objects, and updates only if they can be fast-forwarded.[m
[m
           The [1mrefs/tags/*[0m namespace will accept any kind of object (as commits, trees and blobs can be tagged), and any updates to them will be[m
           rejected.[m
[m
           Itâ€™s possible to push any type of object to any namespace outside of [1mrefs/{tags,heads}/*[0m. In the case of tags and commits, these will be[m
           treated as if they were the commits inside [1mrefs/heads/*[0m for the purposes of whether the update is allowed.[m
[m
           I.e. a fast-forward of commits and tags outside [1mrefs/{tags,heads}/*[0m is allowed, even in cases where whatâ€™s being fast-forwarded is not a[m
           commit, but a tag object which happens to point to a new commit which is a fast-forward of the commit the last tag (or commit) itâ€™s replacing.[m
           Replacing a tag with an entirely different tag is also allowed, if it points to the same commit, as well as pushing a peeled tag, i.e. pushing[m
           the commit that existing tag object points to, or a new tag object which an existing commit points to.[m
[m
           Tree and blob objects outside of [1mrefs/{tags,heads}/*[0m will be treated the same way as if they were inside [1mrefs/tags/*[0m, any update of them will[m
           be rejected.[m
[m
           All of the rules described above about whatâ€™s not allowed as an update can be overridden by adding an the optional leading [1m+[0m to a refspec (or[m
           using [1m--force[0m command line option). The only exception to this is that no amount of forcing will make the [1mrefs/heads/*[0m namespace accept a[m
           non-commit object. Hooks and configuration can also override or amend these rules, see e.g.  [1mreceive.denyNonFastForwards[0m in [1mgit-config[0m(1) and[m
           [1mpre-receive[0m and [1mupdate[0m in [1mgithooks[0m(5).[m
[m
           Pushing an empty <src> allows you to delete the <dst> ref from the remote repository. Deletions are always accepted without a leading [1m+[0m in the[m
[7m Manual page git-push(1) line 1 (press h for help or q to quit)[27m[K[K[K[7m Manual page git-push(1) line 1 (press h for help or q to quit)[27m[K[K[7m Manual page git-push(1) line 1 (press h for help or q to quit)[27m[K[K[7mNo next tag  (press RETURN)[27m[85;1H[K[K[7m Manual page git-push(1) line 1 (press h for help or q to quit)[27m[K[K[?1l>[?1049l[23;0;0tkmoshie1@remote07:~/i471a/submit/lab1$ gitp[K push
Username for 'https://github.com': kmoshie1
Password for 'https://kmoshie1@github.com': 
To https://github.com/kmoshie1/i471a.git
 [31m! [rejected]       [m lab1 -> lab1 (non-fast-forward)
[31merror: failed to push some refs to 'https://github.com/kmoshie1/i471a.git'
[m[33mhint: Updates were rejected because the tip of your current branch is behind[m
[33mhint: its remote counterpart. Integrate the remote changes (e.g.[m
[33mhint: 'git pull ...') before pushing again.[m
[33mhint: See the 'Note about fast-forwards' in 'git push --help' for details.[m
kmoshie1@remote07:~/i471a/submit/lab1$ git push upstea[K[Kream 
fatal: 'upstream' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
kmoshie1@remote07:~/i471a/submit/lab1$ git pull upstream mainb[K
warning: Pulling without specifying how to reconcile divergent branches is
discouraged. You can squelch this message by running one of the following
commands sometime before your next pull:

  git config pull.rebase false  # merge (the default strategy)
  git config pull.rebase true   # rebase
  git config pull.ff only       # fast-forward only

You can replace "git config" with "git config --global" to set a default
preference for all repositories. You can also pass --rebase, --no-rebase,
or --ff-only on the command line to override the configured default per
invocation.

fatal: 'upstream' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
kmoshie1@remote07:~/i471a/submit/lab1$ git merge[K[K[K[K[Kcheckout main
error: Your local changes to the following files would be overwritten by checkout:
	submit/lab1/lab1.LOG
Please commit your changes or stash them before you switch branches.
Aborting
kmoshie1@remote07:~/i471a/submit/lab1$ git add .
kmoshie1@remote07:~/i471a/submit/lab1$ git commit -m "wrong stuff'[K"
[lab1 457b091] wrong stuff
 1 file changed, 284 insertions(+), 1 deletion(-)
kmoshie1@remote07:~/i471a/submit/lab1$ git push
Username for 'https://github.com': kmoshie1
Password for 'https://kmoshie1@github.com': 
To https://github.com/kmoshie1/i471a.git
 [31m! [rejected]       [m lab1 -> lab1 (non-fast-forward)
[31merror: failed to push some refs to 'https://github.com/kmoshie1/i471a.git'
[m[33mhint: Updates were rejected because the tip of your current branch is behind[m
[33mhint: its remote counterpart. Integrate the remote changes (e.g.[m
[33mhint: 'git pull ...') before pushing again.[m
[33mhint: See the 'Note about fast-forwards' in 'git push --help' for details.[m
kmoshie1@remote07:~/i471a/submit/lab1$ git pull main
warning: Pulling without specifying how to reconcile divergent branches is
discouraged. You can squelch this message by running one of the following
commands sometime before your next pull:

  git config pull.rebase false  # merge (the default strategy)
  git config pull.rebase true   # rebase
  git config pull.ff only       # fast-forward only

You can replace "git config" with "git config --global" to set a default
preference for all repositories. You can also pass --rebase, --no-rebase,
or --ff-only on the command line to override the configured default per
invocation.

fatal: 'main' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
kmoshie1@remote07:~/i471a/submit/lab1$ git pull main[K[K[K[Klab1
warning: Pulling without specifying how to reconcile divergent branches is
discouraged. You can squelch this message by running one of the following
commands sometime before your next pull:

  git config pull.rebase false  # merge (the default strategy)
  git config pull.rebase true   # rebase
  git config pull.ff only       # fast-forward only

You can replace "git config" with "git config --global" to set a default
preference for all repositories. You can also pass --rebase, --no-rebase,
or --ff-only on the command line to override the configured default per
invocation.

fatal: 'lab1' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
kmoshie1@remote07:~/i471a/submit/lab1$ git pull
warning: Pulling without specifying how to reconcile divergent branches is
discouraged. You can squelch this message by running one of the following
commands sometime before your next pull:

  git config pull.rebase false  # merge (the default strategy)
  git config pull.rebase true   # rebase
  git config pull.ff only       # fast-forward only

You can replace "git config" with "git config --global" to set a default
preference for all repositories. You can also pass --rebase, --no-rebase,
or --ff-only on the command line to override the configured default per
invocation.

CONFLICT (modify/delete): submit/lab1/lab1.LOG deleted in ace33e7616cf9ffa25d6dddacaa5b3203724b49b and modified in HEAD. Version HEAD of submit/lab1/lab1.LOG left in tree.
Removing submit/lab1/exercises/regex/table-lexer.mjs
Removing submit/lab1/exercises/regex/lexer.mjs
Removing submit/lab1/exercises/regex/lex3.mjs
Removing submit/lab1/exercises/regex/lex2.mjs
Removing submit/lab1/exercises/regex/lex1.mjs
Removing submit/lab1/exercises/regex/data.txt
Removing submit/lab1/exercises/lexer/lexer.py
Removing submit/lab1/exercises/lexer/lexer.mjs
Removing submit/lab1/exercises/lexer/data.txt
Removing submit/lab1/exercises/calc/expn-data.txt
Removing submit/lab1/exercises/calc/data.txt
Removing submit/lab1/exercises/calc/calc.py
CONFLICT (modify/delete): submit/lab1/exercises/calc/calc.mjs deleted in ace33e7616cf